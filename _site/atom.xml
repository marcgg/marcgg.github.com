<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>marcgg#blog</title>
 <link href="https://marcgg.com/atom.xml" rel="self"/>
 <link href="https://marcgg.com"/>
 <updated>2021-04-04T14:49:18+02:00</updated>
 <id>https://marcgg.com</id>
 <author>
   <name>Marc G Gauthier</name>
   <email>marcg.gauthier@gmail.com</email>
 </author>

 
  
   <entry>
     <title>Devlogs</title>
     <link href="https://marcgg.com/blog/2021/04/01/devlogs/"/>
     <updated>2021-04-01T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2021/04/01/devlogs</id>
     <content type="html">
       &lt;p&gt;dophin https://www.youtube.com/watch?v=rn0sb2zkPzA&lt;/p&gt;

&lt;p&gt;vimlark https://www.youtube.com/channel/UClqFSFR_H1yJJ7NRs8xxGCQ&lt;/p&gt;

&lt;p&gt;fairlu https://www.youtube.com/channel/UCF8hefMp-gYUyYd9mC1_IGg&lt;/p&gt;

&lt;p&gt;sovereign https://www.youtube.com/channel/UCU7OLO4-Vzxo1aW7mAuI3lg&lt;/p&gt;

&lt;p&gt;magic n stuff https://www.youtube.com/channel/UCqRbKsCslbkBawq_I1OrFbA&lt;/p&gt;

&lt;p&gt;talk game dev https://www.youtube.com/channel/UCtZMWqGbT2UDdw1gGqVEpRg&lt;/p&gt;

&lt;p&gt;equilinox / city builder https://www.youtube.com/channel/UCUkRj4qoT1bsWpE_C8lZYoQ&lt;/p&gt;

&lt;p&gt;lumbermill https://www.youtube.com/channel/UCYU6BO_VdYnzeQEOS_kSBWA&lt;/p&gt;

&lt;p&gt;parkour cat girl https://www.youtube.com/channel/UCRexPboeVnvnuK0aXtHqu_Q&lt;/p&gt;

&lt;p&gt;remaking first game ball shoot https://www.youtube.com/watch?v=OU3B3D-52us&lt;/p&gt;

       
     </content>
   </entry>
  
 
  
   <entry>
     <title>One on One Meeting Format</title>
     <link href="https://marcgg.com/blog/2021/03/27/one-on-one-format/"/>
     <updated>2021-03-27T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2021/03/27/one-on-one-format</id>
     <content type="html">
       &lt;p&gt;As a manager, doing one on one meetings with your direct reports is your most important tool. I’ve talked a bit before about &lt;a href=&quot;/blog/2019/11/30/one-on-one-openers/&quot;&gt;opening lines&lt;/a&gt;, but I figured it could be interesting to dig into how I handle this every week with my teams. I think it’s important to have a clear format shared to direct reports. This frames the conversation and helps the manager fullfil the objective, while giving some insights to the direct report regarding what this is all about.&lt;/p&gt;

&lt;p&gt;Of course, just like my article about &lt;a href=&quot;/blog/2020/04/06/engineering-team-meeting-ideas/&quot;&gt;engineering team meetings&lt;/a&gt;, it doesn’t necessarly applies directly to you or your company, but hopefully it’ll be interesting and will give you some ideas.&lt;/p&gt;

&lt;h2 id=&quot;objective&quot;&gt;Objective&lt;/h2&gt;

&lt;p&gt;I’ve seen a lot of people using 1:1s only to clear roadblocks and help with delivery. The meeting then ressembles a mix of reporting and brainstorming session, and don’t have any defined objective. While talking about day to day work is a very important part of it, to me it is not the main objective.&lt;/p&gt;

&lt;p&gt;The way I see it, &lt;strong&gt;the main objective  of a one on one meeting is to build a good work relationship with my direct reports&lt;/strong&gt;. On this part I’m heavily inspired by inspired by &lt;a href=&quot;https://www.manager-tools.com/2005/07/the-single-most-effective-management-tool-part-1&quot;&gt;Manager Tools&lt;/a&gt; and &lt;a href=&quot;https://amzn.to/2Y6WW8M&quot;&gt;The Effective Manager&lt;/a&gt; book, so I encourage you to check this out if you want an extensive explanation.&lt;/p&gt;

&lt;h2 id=&quot;format&quot;&gt;Format&lt;/h2&gt;

&lt;h3 id=&quot;only-with-direct-reports&quot;&gt;Only With Direct Reports&lt;/h3&gt;

&lt;p&gt;Firstly, I only do 1:1s like this with my direct reports. This doesn’t mean that I won’t have one on one meetings with other people, but I would not follow this particular format.&lt;/p&gt;

&lt;h3 id=&quot;minutes-weekly&quot;&gt;30 Minutes, Weekly&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;All my one on ones are weekly and last for 30 minutes exactly&lt;/strong&gt;, regardless of the person, seniority or role.&lt;/p&gt;

&lt;p&gt;I’ve experimented with other schedules, for instance 1 hours every 2 weeks, but I feel like weekly is a must. If you wait longer, you will lose a lot of information and only what feels “important” will surface and you’ll lose weaker signals. The weekly pace also helps keeping the discussion a bit lighter, sometimes we won’t have critical things to discuss allowing us to tackle other, less pressing topics.&lt;/p&gt;

&lt;p&gt;There’s also a significant benefit in seeing people regularly, especially if you manage a team with people working remotely… and no, seeing people at standups doesn’t count! The conversation you can have in a one on one are very different than the ones in a larger group.&lt;/p&gt;

&lt;h3 id=&quot;a-meeting-you-can-count-on&quot;&gt;A Meeting You Can Count On&lt;/h3&gt;

&lt;p&gt;I do my best to not move nor cancel a 1:1. This seems like a small thing, but it’s very important to me that anyone I manage directly can be certain that, no matter how busy my schedule gets, they’ll always have at the very least 30 minutes of my time each week.&lt;/p&gt;

&lt;p&gt;My rule of thumb is that I will &lt;strong&gt;cancel&lt;/strong&gt; a 1:1s if:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I’m not at the office because I’m on holidays or sick&lt;/li&gt;
  &lt;li&gt;If an insanely critical topic comes up, but this rarely happen, maybe &amp;lt;1% of the times.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;… and I will &lt;strong&gt;postpone&lt;/strong&gt; a 1:1 if:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I’m out of the office, but only for 1 day&lt;/li&gt;
  &lt;li&gt;I have to setup a meeting with people with very busy agenda and the only reasonable slot where everyone is available is the 1:1. I’ll of course check with the person and usually move the meeting by a couple of hours. This happens maybe &amp;lt;5% of the times.&lt;/li&gt;
  &lt;li&gt;Something really messes up my calendar, like an multiple day offsite meeting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m also asking my direct report to do the same, trying to avoid postponing or cancel our 1:1.&lt;/p&gt;

&lt;h3 id=&quot;not-the-only-meeting&quot;&gt;Not The Only Meeting&lt;/h3&gt;

&lt;p&gt;Of course all of this doesn’t mean that it’ll be the only recurring meeting I’ll have with people reporting to me. Depending on the situation, I may have multiple additional discussions throughout the week.&lt;/p&gt;

&lt;p&gt;For instance if I manage a junior engineering manager directly, we will probably have an extra hour for me to coach them. Same thing if there is a significant technical topic ongoing and I’m managing a senior engineer working on it.&lt;/p&gt;

&lt;p&gt;However I’ll often try to split the meetings, leaving the 1:1 untouched.&lt;/p&gt;

&lt;h3 id=&quot;its-an-investment&quot;&gt;It’s an Investment&lt;/h3&gt;

&lt;p&gt;When I recommend commiting to a weekly 1:1, a lot of managers tell me that they simply don’t have the time. I strongly disagree.&lt;/p&gt;

&lt;p&gt;I saw time and time again that a 30 minutes meeting weekly will prevent massive problems down the line. Basically, do you prefer spending weeks firefighting something gone terribly wrong, or take a few hours every week to talk to your team?&lt;/p&gt;

&lt;p&gt;Finally, how would you feel if you heard your manager say that they can’t even spare 30 minutes each week to talk to you?&lt;/p&gt;

&lt;h2 id=&quot;taking-and-sharing-notes&quot;&gt;Taking and Sharing Notes&lt;/h2&gt;

&lt;p&gt;In the past I experimented with &lt;a href=&quot;/blog/2017/10/09/paper-note-taking-meetings/&quot;&gt;using notebooks during 1:1s&lt;/a&gt;, mainly to be more present with the person I’m talking to. Having a laptop screen between us is not the best way to keep a conversation going. However, with the various lock downs and my teams being increasingly working remotely, this stopped being a good solution, so I changed my strategy.&lt;/p&gt;

&lt;p&gt;Nowadays, for each person I manage, I will create and share a Google document with my meeting notes. This is simple, but they’ll be able to see me writing in real time and easily refer back to what’s in it.&lt;/p&gt;

&lt;p&gt;It’s less awkward when I stop talking to write down something when they can see what I’m doing instead of just hearing me type. The other good thing with them seeing the notes I’m taking and can let me know if I’m missing something. For instance I might not write down something that was important, or at the contrary over react to an information they gave me. It also helps clarify what each of us needs to be doing after the meeting when needed.&lt;/p&gt;

&lt;p&gt;This document is strictly between them and me, and if they were to change manager I’ll just give them the ownership of the document. They can then either forward it to their new manager or not. This is minor, but I felt like clarifying this helped people be more open to writing a lot of things in this document and not argue over if something should be in it or not.&lt;/p&gt;

&lt;h2 id=&quot;content&quot;&gt;Content&lt;/h2&gt;

&lt;p&gt;The 1:1 is usually split into 3 parts. I like to say that they are 10 minutes each, but this is more a rule of thumb and should be measured over a long period of time. For instance if we spend 25 minutes in the first part for 3 weeks in a row, this is not a big deal as long as we spend a bit more time on the other parts later on.&lt;/p&gt;

&lt;h3 id=&quot;minutes-for-them&quot;&gt;10 Minutes For Them&lt;/h3&gt;

&lt;p&gt;The first 10 minutes will always be for the direct report. It can be anything, from the progress of a given project to discussion about what they did last weekend.&lt;/p&gt;

&lt;p&gt;I often repeat that they should not try to guess what I want to hear and instead focus on what they want to talk about. In a lot of cases it’s worth repeating regularly because most people will get into an habit of talking about the same things, like a basic project update, info about KPIs and that’s it… which is often not what they &lt;em&gt;really&lt;/em&gt; want to be talking about.&lt;/p&gt;

&lt;p&gt;As a side note, I’d like to highlight that the way you start this part is quite important as how you do it creates a bias for the rest of the conversation. I wrote &lt;a href=&quot;/blog/2019/11/30/one-on-one-openers/&quot;&gt;an entire article about it&lt;/a&gt;, but here is the relevant part:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;“What’s going on?”&lt;/strong&gt; often leads to discussions about ongoing projects and reporting.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;“How are you?”&lt;/strong&gt; gives more personal discussions, or can result in “I’m good,  what about you?” which defeats the purpose of kickstarting the  conversation by giving them the lead.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;“How is X going?” “Any  news on Y?”&lt;/strong&gt; are generally to be avoided because they really narrow the  discussion to what I want discussed.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;“What’s on your mind?”&lt;/strong&gt; tends to have people talk about what is going on &lt;em&gt;today&lt;/em&gt;, when the discussion should be broader.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Saying nothing&lt;/strong&gt; doesn’t usually work with most people, leading to an awkward  start or a meeting that never properly “starts” - which can be fine now  and then.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My current recommendation is to start by something close to &lt;strong&gt;“what do you want to talk about?”&lt;/strong&gt;, which is in my experience just neutral enough to get things started.&lt;/p&gt;

&lt;h3 id=&quot;minutes-for-me&quot;&gt;10 Minutes For Me&lt;/h3&gt;

&lt;p&gt;Just like the first ten minutes are for them, these ten minutes are for me. The topics I bring up can be very broad, but overall can be summarized as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Questions about projects&lt;/strong&gt;. Basically I want to be up to date on what’s going on. In most cases the regular meetings / reporting is enough, but if I’m missing informations I’ll ask.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Technical discussions&lt;/strong&gt;. Even if I’m usually in a managerial role, I’m still passionate about technology so I’ll talk about it. The discussion can be about ongoing projects or completely random topics depending on my mood and what I read that week!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Information sharing&lt;/strong&gt;. Due to my position I usually have access to more information than my direct report. I can share things about business topics, hiring, technical choices, organisation, etc. I’ll do my best to focus on what is relevant to the person, but I also like to open to some broader topic to expand their perspective on their work or the company.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Information gathering &amp;amp; feedback&lt;/strong&gt;. I’m always wondering if the last presentation I did was clear enough, if I’m moving in the right direction with a given reorganisation, if I really understood a technical topic… so I’ll often ask people their opinion on things I’m currently working on, or feedback about what I did before.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Random chit chat&lt;/strong&gt;. If we have time and shared interests, I’m never against talking about something outside of work. Of course this also depends on wether the person I’m managing is confortable with this. Some people prefer to avoid it and I completely respect this.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;minutes-to-not-be-surprised-later&quot;&gt;10 Minutes To Not Be Surprised Later&lt;/h3&gt;

&lt;p&gt;This one a bit less clear than the first two. The way I like to explain it to my direct report is that we’ll use this time to prevent us from being surprised at their annual or quarterly review. In more concrete terms, this means performance feedback, coaching, career path discussions and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If things are going well&lt;/strong&gt; they should know it and have a vision of how they can evolve in the company, taking more interesting projects, more responsabilities and, in turn, a better salary.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If things are doing poorly&lt;/strong&gt;, they should be aware that either their pay raise or job is in danger. I should also give them the opportunity to address the issue and improve.&lt;/p&gt;

&lt;p&gt;Of course, feedback goes both ways. I’m also expecting them to raise any issues they have with the company, the projects they are part of and myself, before it gets so bad it can’t be fixed. I’m also interested in knowing if things are going well so I can double down on successful actions.&lt;/p&gt;

&lt;p&gt;This is also the moment to discuss significant change in responsabilities or scope. For instance if someone planning to move from an individual contributor role to a manager one we’ll discuss it every week until it’s actually done.&lt;/p&gt;

&lt;h2 id=&quot;feedback-from-the-real-world&quot;&gt;Feedback From The Real World&lt;/h2&gt;

&lt;p&gt;In the past I felt like I knew my team. I talked to them often during standups, team meetings, brainstorms, pull requests… however I realized that only a regular meeting between me and my direct report will allow me to talk about most issues and guide the team better.&lt;/p&gt;

&lt;p&gt;Over the years I’ve tried various 1:1 format. I’ve been using this one for the most part of the last 4 years and I’m really happy about it. I think it works really well and is adaptable to a lot of different situation and people. It didn’t prevent every single issues, but it allowed me to see them coming and be in a better spot to handle them.&lt;/p&gt;

&lt;p&gt;Of course I don’t always follow the format strictly, for instance the last 10 minutes can get squeezed, but having this format allows me to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Always have my direct report start talking, ensuring that I hear what they have to say&lt;/li&gt;
  &lt;li&gt;Have a regular meeting with every person I directly manage, no matter my schedule, which helps tremendously building trust.&lt;/li&gt;
  &lt;li&gt;Always have in mind that we should also be sharing feedback and thinking about the person’s evolution within the company. If I don’t do it for a couple of weeks, I’ll usually write down a note to do it the week after.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are &lt;a href=&quot;/blog/2017/08/22/starting-with-management/&quot;&gt;a new manager&lt;/a&gt; and don’t know where to start, I highly recommend you give this format a try for a few months and iterate from there.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Building, Releasing and Marketing an iOS Fitness App</title>
     <link href="https://marcgg.com/blog/2020/11/12/building-boxing-mobile-app-swiftui/"/>
     <updated>2020-11-12T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2020/11/12/building-boxing-mobile-app-swiftui</id>
     <content type="html">
       &lt;p&gt;I practice boxing as a hobby, so when the first lockdown in France happened I decided to keep training at home. However I quickly found out that it was tough to stay focused on my own. I tried various solutions, like boxing along Youtube videos, but it got repetitive and a lot of videos didn’t fit the way I wanted to work out… I tried fitness apps, but they were focused on &lt;a href=&quot;https://en.wikipedia.org/wiki/Calisthenics&quot;&gt;calisthenics&lt;/a&gt;, not boxing.&lt;/p&gt;

&lt;p&gt;It’s at that point I decided to build a small algorithm to create some kind of training plan and help me focus when training. It would be a fun side project helping me stay motivated to train alone. After some work this idea turned into a mobile app and finally into a &lt;a href=&quot;https://shadowboxingapp.com/&quot;&gt;product shipped to the App Store&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;In this article I’ll try to talk about pretty much every aspect of the app development process, including SwiftUI, marketing, design, keyword optimizations, search ads, SEO and more. I think it can be interesting for anyone curious about building a product from nothing. I’d also say that if you are a solo developer wanting to get into the app space, this article can be a good read to help kickstart your project and gather some ideas.&lt;/p&gt;

&lt;p&gt;Some random stats at the time of writing this article:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I &lt;strong&gt;started learning Swift 6 months ago&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;The app has been officially live for 3 months**, and I started actively promoting it 2 months ago&lt;/li&gt;
  &lt;li&gt;The app was &lt;strong&gt;featured on the app store in 8 countries&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;The app has &lt;strong&gt;a few thousands monthly active users&lt;/strong&gt;, of which &lt;strong&gt;~5% are paying customers&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;The algorithm features &lt;strong&gt;12 distinct exercises &amp;amp; 25 workouts&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/screenshot_practice_rotated.png&quot; alt=&quot;Shadow boxing training app&quot; style=&quot;padding: 5px; width: 90%;&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;building-the-boxing-app-mvp&quot;&gt;Building the Boxing App MVP&lt;/h2&gt;

&lt;p&gt;I’m a big fan of &lt;a href=&quot;https://pragdave.me/blog/2014/03/04/time-to-kill-agile.html&quot;&gt;working with agility&lt;/a&gt;, so I wanted to build in increments starting with a &lt;a href=&quot;https://en.wikipedia.org/wiki/Minimum_viable_product&quot;&gt;minimum viable product&lt;/a&gt; to gather feedback as soon as possible. Once this was done, the plan was to add to it depending on what I learned along the way.&lt;/p&gt;

&lt;h3 id=&quot;initial-requirements&quot;&gt;Initial Requirements&lt;/h3&gt;

&lt;h4 id=&quot;the-algorithm&quot;&gt;The Algorithm&lt;/h4&gt;

&lt;p&gt;In boxing a lot of people talk about punches using a numerical code. For instance 1 is a jab, 2 is a cross, 3 is a left hook and so on. This allows boxers to codify combinations of techniques. You must have heard “1-2” before for a jab-cross, but you could also do something more complex.&lt;/p&gt;

&lt;p&gt;To start I built a combo generation logic. Some techniques flow perfectly with each other, and some others just do not work together at all. For instance:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1-2-3 (jab, cross, left hook) feels right, is easy to do and flows really well.&lt;/li&gt;
  &lt;li&gt;1-1-1-1-1 (five jabs) is hard on the lead hand and shoulders and not very realistic.&lt;/li&gt;
  &lt;li&gt;1-3 (jab, left hook) is a bit awkward but is an interesting mixup.&lt;/li&gt;
  &lt;li&gt;5-5-5-5 (four left uppercut) makes very little sense.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then on top of this I can add variations, like throwing punches to the body or incorporating defensive movements. Finally I added vocal advices ranging from cheering you (“keep going!”) on to giving you generic advices (“lower your chin”).&lt;/p&gt;

&lt;p&gt;With this, I built different ways of giving combos to execute:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Focus on one combo for a round, progressively adding to it. For instance start with 1-2, then after a bit build on it with a 1-2-3-2 and so on.&lt;/li&gt;
  &lt;li&gt;Mimic &lt;a href=&quot;https://shadowboxingapp.com/pad-work-boxing-reflexes/&quot;&gt;pad work&lt;/a&gt;, meaning that the app will call out a technique to execute on the spot.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally I combined all of this into a coherent sequence of events, adding elements of randomness so that every single workout felt different.&lt;/p&gt;

&lt;h4 id=&quot;mobile-app&quot;&gt;Mobile App&lt;/h4&gt;

&lt;p&gt;I quickly figured that building an algorithm alone and print out exercises would not be enough, and that it needed at the very least some kind of UI. Building on mobile was what made the most sense since I would not be training in front of my computer. Here’s what I identified as must-haves at that point:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A basic UI to set the various parameters of the algorithm&lt;/li&gt;
  &lt;li&gt;A simple display with large fonts and clear colors to see the round timer &amp;amp; punches to throw&lt;/li&gt;
  &lt;li&gt;A way to give audio cues, ideally a synthesized voice so I don’t have to constantly look at my phone&lt;/li&gt;
  &lt;li&gt;Needs to work for me, meaning running on iOS since I have an iPhone&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;building-with-swiftui&quot;&gt;Building with SwiftUI&lt;/h3&gt;

&lt;h4 id=&quot;why-pick-swiftui&quot;&gt;Why Pick SwiftUI?&lt;/h4&gt;

&lt;p&gt;Since I have an iPhone, I had to build something running on it. I could have created a web version, but since the experience was going to be inherently mobile I wanted to start on the right platform and actually have he app installed on my phone.&lt;/p&gt;

&lt;p&gt;In the past I’ve tried many options as alternative to purely native development: &lt;a href=&quot;/blog/2012/10/22/custom-slider-ios-rubymotion/&quot;&gt;in 2012 I worked with RubyMotion&lt;/a&gt;, in 2013 I’ve experimented with &lt;a href=&quot;/blog/2013/08/29/appgyver-steroids-iphone-hybrid-javascript/&quot;&gt;Steroids.js&lt;/a&gt;, in 2014 &lt;a href=&quot;/blog/2014/04/09/phonegap-steroids-hybrid-native-app-tips/&quot;&gt;PhoneGap&lt;/a&gt; and even &lt;a href=&quot;/blog/2014/05/06/quantified-self-iphone-app-track-mood-day/&quot;&gt;released an app with these alternative technologies&lt;/a&gt;… however I always had the same issues with this approach. You end up fighting the framework, the phone and the ecosystem. Some things are missing, performances can be degraded and you have to do a lot of extra work to build what native developers get for free.&lt;/p&gt;

&lt;p&gt;Technologies like &lt;a href=&quot;https://flutter.dev/&quot;&gt;Flutter&lt;/a&gt; have the promise of multi platform, but from my experience you still have to know the quirks of iOS and Android if you want to build an app that goes beyond a basic use case… so this means that not only you have to learn Flutter &amp;amp; Dart, but you also have to learn some Swift, a bit of Kotlin and the iOS and Android SDKs. It might improve in the future but, in my opinion and as things are today, going native is still the better approach to get a great mobile experience.&lt;/p&gt;

&lt;p&gt;The annoying part was that I tried working with UIKit in the past and really didn’t enjoy it… but this is where SwiftUI comes in!&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/swift_logo.png&quot; alt=&quot;Swift and SwiftUI logo&quot; style=&quot;padding: 5px;&quot; /&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;SwiftUI is a user interface toolkit that lets us design apps in a declarative way. That’s a fancy way of saying that we tell SwiftUI how we want our UI to look and work, and it figures out how to make that happen as the user interacts with it.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://twitter.com/twostraws&quot;&gt;@twostraws&lt;/a&gt; on &lt;a href=&quot;https://www.hackingwithswift.com/quick-start/swiftui/what-is-swiftui&quot;&gt;Hacking with Swift&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I had my eyes on this technology ever since it came out because I always was allergic to UIKit’s way of building app and this declarative approach felt like what iOS needed. It was also an easy to grab paradigm for me thanks to my experience with ReactJS.&lt;/p&gt;

&lt;p&gt;Since I was lucky to work on a greenfield project, and therefore didn’t have to keep previous users in mind, I could pick this framework even if it was only compatible with iOS 13 and up.&lt;/p&gt;

&lt;h4 id=&quot;learning-swiftui&quot;&gt;Learning SwiftUI&lt;/h4&gt;

&lt;p&gt;Overall SwiftUI felt incredibly simple to understand and work with. Using &lt;a href=&quot;https://developer.apple.com/tutorials/swiftui/&quot;&gt;Apple’s documentation&lt;/a&gt; and the amazing videos and articles of &lt;a href=&quot;https://www.hackingwithswift.com/&quot;&gt;Hacking With Swift&lt;/a&gt;, I managed to build a very basic UI and have it on Testflight in less than 20 hours of work.&lt;/p&gt;

&lt;p&gt;I really can’t understate how easy it was for me to get into it. That’s really from 0 to a basic app in a couple of days.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Swift felt very natural, and beyond a couple of quirks it was very straightforward.&lt;/li&gt;
  &lt;li&gt;SwiftUI was also very easy to grasp, and thinking in components felt logical to me. The preview panel makes testing out things easy, and there are many very well made tutorials out there. Again, I can’t recommend &lt;a href=&quot;https://www.hackingwithswift.com/&quot;&gt;Hacking With Swift&lt;/a&gt; enough.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I was expecting to enjoy the technology, but I can honnestly say that it was a game changer to me. Even if it still has significant limitations that only appeared way later in development, I felt productive and in control.&lt;/p&gt;

&lt;h3 id=&quot;first-version&quot;&gt;First Version&lt;/h3&gt;

&lt;p&gt;After approximatively 40 hours of work, I had a workout generator, a landing screen with simple explanations and a start button leading to a form for customizing parts of the algorithm. Fun fact, all this time I was train every day using the algorithm, and sometime ending up dead tired because it wasn’t tweaked properly!&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/mvp_1.png&quot; alt=&quot;Boxing app MVP&quot; style=&quot;padding: 5px; width: 80&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Once the training started, a timer screen would show with two different mode: fighting and active recovery. The two screens have different colors so I could be able to see from afar what is going on if I missed an audio cue. If you wonder how I built the clock section, I wrote &lt;a href=&quot;/blog/2020/05/06/circular-progressbar-clock-swiftui/&quot;&gt;an article on this&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/mvp_2.png&quot; alt=&quot;Boxing app MVP&quot; style=&quot;padding: 5px;&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;making-the-mvp-actually-viable&quot;&gt;Making the MVP Actually Viable&lt;/h3&gt;

&lt;h4 id=&quot;adding-a-workout-abstraction&quot;&gt;Adding a Workout Abstraction&lt;/h4&gt;

&lt;p&gt;This first version of the MVP showed me that it was indeed a useful app that I enjoyed training with. However after showing it to multiple people, it was also very clear that no one understood the customization form and what was the point of the app. To me, the cool thing with the whole thing was the algorithm, but I had to admit that it needed some kind of abstraction to present it to users.&lt;/p&gt;

&lt;p&gt;To do that I went ahead and built “workouts “by setting some parameters for the algorithm in advance. For instance:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;12 rounds of 3 minutes, only freestyle, 1 minute rest: this looks a lot like a normal boxing match!&lt;/li&gt;
  &lt;li&gt;20 rounds of 1 minute, mostly intense combos with 30 seconds of active recovery: this is close to a high intensity interval workout session.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once this was figured out I added some text explaining what the training was and a photo to illustrate it.&lt;/p&gt;

&lt;h4 id=&quot;discoverability-of-the-algorithm&quot;&gt;Discoverability of the Algorithm&lt;/h4&gt;

&lt;p&gt;I still wanted people to build their own workouts once they used the pre-made ones for a while. So I still had a way to access the massive customization form, and I made sure that people could see the various parameters used in the workout. This would ideally get them inspired to try it themselves.&lt;/p&gt;

&lt;h4 id=&quot;learning-design&quot;&gt;Learning Design&lt;/h4&gt;

&lt;p&gt;I’ve made it very clear in the past: &lt;a href=&quot;/blog/2014/04/28/frame-based-layout-bad-code/&quot;&gt;I’m pretty bad at design&lt;/a&gt;. I usually say that I’m just good enough to know that what I’m doing looks bad, which is depressing.&lt;/p&gt;

&lt;p&gt;For &lt;a href=&quot;http://marcgg.com/blog/2014/05/06/quantified-self-iphone-app-track-mood-day/&quot;&gt;my previous app&lt;/a&gt; I had teamed up with a designer, but this time I wanted to do it on my own… but I still wanted to ship something that looked decent, and the first version with the weird orange “get started” button was everything but decent. To improve it, I decided to go through all the fitness apps I could find, watch app design videos, browse pinterest &amp;amp; dribbble to finally be able draft something better. I also figured now would be the right time to learn how to properly use &lt;a href=&quot;http://figma.com/&quot;&gt;Figma&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After a few days of this and hating my life, I managed to have something that didn’t look like an abonation. What helped me getting there was:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Leaning into Apple’s guidelines a lot with  SF Icons, system fonts, padding recommendations and so on.&lt;/li&gt;
  &lt;li&gt;Using ressources like &lt;a href=&quot;https://coolors.co/palettes/trending&quot;&gt;color palettes&lt;/a&gt; and &lt;a href=&quot;https://www.flaticon.com/&quot;&gt;flaticon&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Relying on &lt;a href=&quot;https://www.pexels.com/&quot;&gt;stock photography&lt;/a&gt;, as it worked well with the fitness space&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;improving-the-app-icon&quot;&gt;Improving the App Icon&lt;/h4&gt;

&lt;p&gt;The first app icon was quickly made and didn’t feel right. After some browsing I found a stock boxing glove icon I liked and incorporated it into the design.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/app_icon_evolution.png&quot; alt=&quot;Boxing app MVP&quot; style=&quot;padding: 5px; width: 80%;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;I also paid someone on &lt;a href=&quot;https://www.fiverr.com/&quot;&gt;Fiverr&lt;/a&gt; a small fee to create an icon to see how it would turn out. However I wasn’t convinced by the result so I used my version… but maybe I’ll end up using this icon or a variation of it at some point, I don’t know!&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/boxing_fiver.png&quot; alt=&quot;Boxing app icon&quot; style=&quot;padding: 5px; width: 150px;&quot; /&gt;&lt;/div&gt;

&lt;h4 id=&quot;the-result&quot;&gt;The Result&lt;/h4&gt;

&lt;p&gt;I finally had something that felt like a decent MVP. I didn’t overinvest in it, but it wasn’t buggy, looked ok and had the core functionnalities I wanted to showcase.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/mvp_3.png&quot; alt=&quot;Boxing app MVP&quot; style=&quot;padding: 5px; width: 250px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Now I could start getting users and gather feedback, so I submitted the app to the App Store and after a few back and forth regarding terms of service &lt;a href=&quot;https://apps.apple.com/app/shadow-boxing-workout/id1510911574&quot;&gt;the app was live for everyone to download&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id=&quot;minimum-viable-marketing-plan&quot;&gt;Minimum Viable Marketing Plan&lt;/h2&gt;

&lt;p&gt;Building and shipping a MVP is a thing, but I also needed to get people to actually use it! Just like for the product, I worked on a very simple marketing strategy. The objective wasn’t to have something perfect, but instead to throw some ideas out there and see if anything worked.&lt;/p&gt;

&lt;h3 id=&quot;app-store-screenshots--product-page&quot;&gt;App Store Screenshots &amp;amp; Product Page&lt;/h3&gt;

&lt;p&gt;The main thing I worked on was the product page. For most people this is how they discover the app, making it really crucial. During this time I mostly struggled to find the right ratio of text to screenshot. It’s complex because the exact same screenshots will be displayed at very different sizes throughout the experience.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/screenshot_evolution.png&quot; alt=&quot;App Store screenshots for boxing app&quot; style=&quot;padding: 5px; width: 80%;&quot; /&gt;&lt;center&gt;&lt;em&gt;From too much text to not enough text&lt;/em&gt;&lt;/center&gt;&lt;/div&gt;

&lt;p&gt;The first one was unreadable in a lot of cases, and people skipped the information… but the middle ones were unclear and people didn’t understand!&lt;/p&gt;

&lt;p&gt;My current screenshots look like this, and I think it does the job correctly, but this might change again:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/screenshot_current.jpg&quot; alt=&quot;App Store screenshot for iOS boxing app&quot; style=&quot;padding: 5px; width: 250px;&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;learning-app-store-optimization&quot;&gt;Learning App Store Optimization&lt;/h3&gt;

&lt;p&gt;I was familiar with search engine optimization from prior projects, but didn’t know much about app store optimization (ASO). The main thing that struck me was that it all felt like SEO from 10 years ago. It has very basics mechanics centered around search keywords and conversion on those keywords. From what I understood it’s different on the Play Store, but on Apple’s store it’s quite straightforward.&lt;/p&gt;

&lt;p&gt;My main takeaways and advices for anyone trying to do it without spending too much time would be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Take a look at &lt;a href=&quot;https://www.youtube.com/channel/UCSyXF669KRoj65UFVBC66Xw&quot;&gt;App Masters&lt;/a&gt;, a great Youtube channel where the host &lt;a href=&quot;https://twitter.com/stevepyoung&quot;&gt;Steve P. Young&lt;/a&gt; gives solid and up to date advices. I watched other channels, but most of them felt empty and mostly repeated the same couple of advices that didn’t really help much.&lt;/li&gt;
  &lt;li&gt;Follow your keywords ranking as it will be your main source of organic growth. I personally use &lt;a href=&quot;https://appfollow.io/&quot;&gt;AppFollow&lt;/a&gt;’s free plan since I’m on a budget, but there are a lot of other tools to do it like &lt;a href=&quot;https://appradar.com/&quot;&gt;AppRadar&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Look at what your competition is doing and learn from it. However don’t copy it since you’ll probably have trouble competing directly with larger players.&lt;/li&gt;
  &lt;li&gt;Use search ads to discover keywords that might be relevant to your app.&lt;/li&gt;
  &lt;li&gt;Conversion looks like a really important metric used in ranking, so there’s no point in tricking the algorithm by putting words that do not fit your app. People will not click, you’ll get impressions at first but then be buried far down the results due to the low impression to tap conversion.&lt;/li&gt;
  &lt;li&gt;Search ads can help “kickstart” a new keyword. For instance &lt;a href=&quot;https://shadowboxingapp.com/new-simple-combo-punching-bag/&quot;&gt;when I added a punching bag workout&lt;/a&gt;, I ran a very small campaign on this keyword to show Apple’s algorithm that people looking for “punching bag” would click on my app.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of this was really worth investing time in, as a day of work learning and using ASO improved my reach significantly as you can see on &lt;a href=&quot;https://www.linkedin.com/posts/marcggauthier_appstoreoptimization-aso-appstores-activity-6711907480827424769-OPOx&quot;&gt;this graph&lt;/a&gt; representing impressions worldwide:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/aso_impact.jpg&quot; alt=&quot;iOS ASO impacting impressions&quot; style=&quot;padding: 5px; width: 400px;&quot; /&gt;&lt;center&gt;&lt;em&gt;ASO impact on impressions&lt;/em&gt;&lt;/center&gt;&lt;/div&gt;

&lt;p&gt;Note that the initial spike was a 2 days Search Ads campaign to kickstart some keywords. The good news was that the results remained sustainable after the campaign ended.&lt;/p&gt;

&lt;h3 id=&quot;search-ads&quot;&gt;Search Ads&lt;/h3&gt;

&lt;h4 id=&quot;how-it-works&quot;&gt;How It Works&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://searchads.apple.com/&quot;&gt;Search Ads&lt;/a&gt; is Apple’s product to advertise directly in the search result. You can bid on keywords and if you win the bidding, you get the top spot for certain searches. For instance here I targeted the “punching bag” keyword:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/searchads.png&quot; alt=&quot;Asking users to rate app&quot; style=&quot;padding: 5px; width: 270px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Apple offers two ways of doing it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Basic&lt;/strong&gt; where you set your goals, budget and let them figure it out. It’s very easy to set up, but you have no control on what’s going to happen.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Advanced&lt;/strong&gt; which looks a bit more like AdSense and where you can manage your campaigns, bidding details and more. This is the better option, but you have to know how to use it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a side note, you have to know that Apple gives away a free 100$ voucher for all new search ads accounts. If you’re getting started it would be a shame not to use it, it’s basically free installs.&lt;/p&gt;

&lt;h4 id=&quot;how-i-did-it&quot;&gt;How I Did It&lt;/h4&gt;

&lt;p&gt;Personnally I wanted to be really careful with my ads budget. Do do this, I used the advanced mode and mostly targeted longtail keywords with a very high chance of conversion to keep costs low. This way I didn’t compete with games on the &lt;code class=&quot;highlighter-rouge&quot;&gt;boxing&lt;/code&gt; keyword where you might have to pay 1$ to 3$ per install, and instead focused on &lt;code class=&quot;highlighter-rouge&quot;&gt;shadow boxing at home&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;boxing app training&lt;/code&gt; where there is almost no competition and installs cost less than 0.40$. This lead to a low number of downloads but also a very low cost of acquistion since the searches were so well targeted, so I was happy with that.&lt;/p&gt;

&lt;p&gt;It’s also good to know that Search Ads were a good way to kickstart a particular keyword I wanted to position myself on as part of my ASO strategy.&lt;/p&gt;

&lt;h3 id=&quot;landing-page--seo&quot;&gt;Landing Page &amp;amp; SEO&lt;/h3&gt;

&lt;p&gt;I knew the importance of search engine optimization (SEO), so I wanted to get a website out there as early as possible so Google could find and index it. For this I used &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, just like this blog. I didn’t do anything fancy and basically just bought &lt;a href=&quot;https://shadowboxingapp.com/&quot;&gt;ShadowBoxingApp.com&lt;/a&gt;, copied parts of the product page into, made basics SEO optimisations tasks and called it a day.&lt;/p&gt;

&lt;h3 id=&quot;tracking&quot;&gt;Tracking&lt;/h3&gt;

&lt;p&gt;This was the time I decided to add &lt;a href=&quot;https://firebase.google.com/&quot;&gt;Firebase&lt;/a&gt; to better track user behaviours. I’m honnestly not convinced by it: the package size is huge, it does way more than I need and the UI is clunky. I might change provider down the line, but I didn’t find a free alternative that worked for me.&lt;/p&gt;

&lt;h3 id=&quot;gathering-reviews&quot;&gt;Gathering Reviews&lt;/h3&gt;

&lt;p&gt;Having positive App Store reviews is really important. Even if they don’t really directly impact your keyword ranking, they have a significant role in building trust and improving conversion at the product page.&lt;/p&gt;

&lt;p&gt;To get more reviews, I used &lt;code class=&quot;highlighter-rouge&quot;&gt;requestReview&lt;/code&gt; from &lt;a href=&quot;https://developer.apple.com/documentation/storekit/skstorereviewcontroller/2851536-requestreview&quot;&gt;StoreKit&lt;/a&gt;, and asked people to rate my app when they completed a workout and mentionned that they enjoyed it. The first version was a bit barebone but as everything so far it was mostly to get something out there and later build on top of it.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/asking_rating.png&quot; alt=&quot;Asking users to rate app&quot; style=&quot;padding: 5px; width: 80%;&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;minimal-social-media-presence&quot;&gt;Minimal Social Media Presence&lt;/h3&gt;

&lt;p&gt;I didn’t want to spend time on being active on social media, but I thought it would be important to at least have the user names registered and the profiles set up… so I created &lt;a href=&quot;https://twitter.com/shadowboxingapp&quot;&gt;Twitter&lt;/a&gt;,  &lt;a href=&quot;https://www.youtube.com/channel/UCH4ijqgkws8HWR_wxJWLaKw&quot;&gt;Youtube&lt;/a&gt;, &lt;a href=&quot;https://www.instagram.com/shadowboxingapp/&quot;&gt;Instagram&lt;/a&gt; and &lt;a href=&quot;https://www.facebook.com/shadowboxingapp&quot;&gt;Facebook&lt;/a&gt; accounts.&lt;/p&gt;

&lt;h2 id=&quot;adding-a-monetization-model&quot;&gt;Adding a Monetization Model&lt;/h2&gt;

&lt;p&gt;After a couple of months of the app on the store and some minor iterations, I wanted to learn if people would be willing to pay for the app before investing a large amount of time into it.&lt;/p&gt;

&lt;h3 id=&quot;why-use-a-subscription-model&quot;&gt;Why Use a Subscription Model?&lt;/h3&gt;

&lt;p&gt;I decided to go with a subscription model with some free content for various reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Maintenance of a mobile app can get significant with iOS updates and so on. As a solo developper I can’t really afford to be maintaining an app for years if it doesn’t bring in any recurring revenue.&lt;/li&gt;
  &lt;li&gt;Most fitness apps have a subscription model, so people are used to this. There is also the benefit where people get more motivated to work out if they know they committed to pay regularly.&lt;/li&gt;
  &lt;li&gt;I can provide useful free content forever “sponsored” by the paid content. Workouts being generated each time means that people that want to use the app without paying still get something cool to train with.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I got mixed feedback on this choice, with people preferring something filled with ads but completely free. I understand the sentiment, but I personnaly think this model works better for this particular app.&lt;/p&gt;

&lt;h3 id=&quot;building-with-revenuecat&quot;&gt;Building with RevenueCat&lt;/h3&gt;

&lt;p&gt;To actually build it, I used &lt;a href=&quot;https://www.revenuecat.com/&quot;&gt;RevenueCat&lt;/a&gt;, a third party helping you handle subscriptions with a very straightfoward SDK. It took me less than a day to integrate and be able to accept payments. I think this was the right move as working with &lt;a href=&quot;https://developer.apple.com/documentation/storekit&quot;&gt;StoreKit&lt;/a&gt; would require me to build a backend, have a server running and deal with the SDK that seemed quite complex.&lt;/p&gt;

&lt;p&gt;RevenueCat has a free plan until a certain amount of money processed per month… and if I ever reach this amount of money I’ll be happy to pay for their service!&lt;/p&gt;

&lt;h3 id=&quot;people-were-interested&quot;&gt;People were Interested!&lt;/h3&gt;

&lt;p&gt;The one thing that made me really happy was that after a couple of horus on the store, I received my first yearly subscription, confirming that people were indeed willing to pay for such an app. This was unexpected, but greatly appreciated!&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/first_customer.png&quot; alt=&quot;RevenueCat user buying yearly subscription&quot; style=&quot;padding: 5px;&quot; /&gt;&lt;center&gt;&lt;em&gt;Thank you dear first paying customer!&lt;/em&gt;&lt;/center&gt;&lt;/div&gt;

&lt;h2 id=&quot;stepping-up-the-development-process&quot;&gt;Stepping Up The Development Process&lt;/h2&gt;

&lt;p&gt;After a few weeks I started to see some traction and people actually using the app, so I doubled down and started working full time on it, adding more features and improving everything I could. The great thing with being a user myself was that I could test out new workouts on myself and have a lot of fun in the process!&lt;/p&gt;

&lt;h3 id=&quot;new-exercises--workouts&quot;&gt;New Exercises &amp;amp; Workouts&lt;/h3&gt;

&lt;p&gt;What took most of my time was adding many new type of exercises.&lt;/p&gt;

&lt;p&gt;For instance the app can call out specific techniques, but also accompany you when you do jump rope, push-ups or squats. When you train for boxing, you can now focus on defense, dodging, repetition and so on. I’ve also added execises that works best with a punching bag, for instance throwing quick light punches for 20 seconds, then heavy punches for 20 seconds and rest 10 seconds. I then took all these exercises and combined them to create coherent workouts, while always allowing people to do it themselves.&lt;/p&gt;

&lt;p&gt;This was tricky as figuring out the right exercise and balance it correctly is pretty hard. Also, I had to test out every exercise myself to ensure that it was making sense and estimate its intensity, and I can only work out so many hours in a day!&lt;/p&gt;

&lt;h3 id=&quot;better-onboarding&quot;&gt;Better Onboarding&lt;/h3&gt;

&lt;p&gt;The first version of the onboarding completely missed the mark.&lt;/p&gt;

&lt;p&gt;I did the same as a lot of apps with just a few slides explaning the benefits of the app… I thought that it was great, but really I was just repeating the content of the product page. Instead, I should have been using this opportunity to improve the user’s first experience.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/onboarding1.png&quot; alt=&quot;Onboarding slides iOS app&quot; style=&quot;padding: 5px; width: 80%;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;The current version is way simpler with just a single screen. It focuses on how the app operates and how to get started depending on their experience. My idea is that if users actually complete a workout they will see why this is the app for them.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/onboarding2.png&quot; alt=&quot;Onboarding slides iOS app&quot; style=&quot;padding: 5px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;I now think that the best onboarding would be a 2 minute video showing someone using the app as it makes it very clear right away what can be done with it. I might create something like this down the line, but either it’ll be expensive to get someone to do it, or I’ll have to learn how to shoot and edit a quality video… we’ll see!&lt;/p&gt;

&lt;p&gt;Finally I built a tutorial to help people learn how the app works and a serie of exercises specificaly made to progressively get used to its system. It’s still not the best way to learn boxing, but for those who know how to throw a punch, it should be easier to get into.&lt;/p&gt;

&lt;h3 id=&quot;easier-way-to-build-a-workout&quot;&gt;Easier Way To Build a Workout&lt;/h3&gt;

&lt;p&gt;Personnally I love to be able to specify every single detail of a training session. For instance are rounds 45 seconds or 1 minute? How much rest time? Do I add push-ups instead of the rest period? From the look of the data, some users are like me… but clearly not all of them.&lt;/p&gt;

&lt;p&gt;To help the ones who don’t want to mess with a massive customization form, I’ve create a sort of wizard to assist people in creating a basic workout. To illustrate the difference, instead of asking the number of rounds and their duration, the app will ask how much time one want to spend training today.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/create_workout.png&quot; alt=&quot;Onboarding slides iOS app&quot; style=&quot;padding: 5px; width: 90%;&quot; /&gt;&lt;center&gt;&lt;em&gt;&lt;a href=&quot;/assets/blog/swift/create_workout.png&quot;&gt;Large version here&lt;/a&gt;&lt;/em&gt;&lt;/center&gt;&lt;/div&gt;

&lt;h3 id=&quot;simplification--coherence-of-design&quot;&gt;Simplification &amp;amp; Coherence of Design&lt;/h3&gt;

&lt;p&gt;Here is an example of how the app would look when you picked a workout.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/old_home.png&quot; alt=&quot;Boxing iOS app&quot; style=&quot;padding: 5px; width: 450px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;It’s pretty messy, the colors are all over the place, the icons do not make much sense… so to make the app generally feel more sleek and clean, I moved a lot of optional information behind menus. I also simplified the color scheme and icons to make everything feel more coherent. Finally I relied even more on photos and the result looked like this:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/new_home.png&quot; alt=&quot;Boxing iOS app&quot; style=&quot;padding: 5px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;The additional information is still available further down in the navigation for those who really want them.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/details_hidden.png&quot; alt=&quot;Boxing iOS app&quot; style=&quot;padding: 5px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;With this same intent  for improving consistency, I also changed the pictures. On the left you have the old ones and on the right the new ones. The only issue I’m having with the current state of photos is that they sometime feel too dark, but I still think it’s an improvement over the old version.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/photos_before_after.png&quot; alt=&quot;Boxing iOS app&quot; style=&quot;padding: 5px; width: 90%;&quot; /&gt;&lt;/div&gt;

&lt;h4 id=&quot;better-asset-management-with-figma&quot;&gt;Better Asset Management with Figma&lt;/h4&gt;

&lt;p&gt;During development I was wasting a lot of time handling photos, screenshots, icons and so on. To be honnest I was used to work with larger teams, with product designers dealing with the asset management part of the equation! I decided to build a workflow that would work at my scale, and based it all on Figma since at that point I was in love with the tool.&lt;/p&gt;

&lt;p&gt;I relied a lot on &lt;a href=&quot;https://help.figma.com/hc/en-us/articles/360038662654-Guide-to-Components-in-Figma&quot;&gt;components&lt;/a&gt; to achieve this. For instance to generate screenshots I will have a component for the iPhone screen, the screenshot itself and the title.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/figma_flow_1.png&quot; alt=&quot;Boxing iOS app&quot; style=&quot;padding: 5px; width: 400px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Then I use these components to generate the 6.5in and 5.5in screenshots:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/figma_flow_2.png&quot; alt=&quot;Boxing iOS app&quot; style=&quot;padding: 5px; width: 300px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Finally I used Figma’s export function to generate all the assets needed in a couple of clicks.&lt;/p&gt;

&lt;p&gt;Now that all of my photos, UI elements and marketing assets are all in one spot, it becomes very easy to re-use them everywhere. For instance I can easily export my screenshots both for the website and the App Store product page. I can also change the photo for a given workout and have it update in all the images displaying it.&lt;/p&gt;

&lt;p&gt;It’s not very complex and still has some manual steps, but it’s incredibly useful and saved me a lot of time.&lt;/p&gt;

&lt;h3 id=&quot;improving-subscriptions&quot;&gt;Improving Subscriptions&lt;/h3&gt;

&lt;p&gt;I also put more energy into how I managed subscriptions. For instance I added the fact that if someone churned and stopped paying, they would stop getting access to premium features. I actually waited a few months to build this since no users decided to stop paying at first!&lt;/p&gt;

&lt;p&gt;I also improved the subscription page to make it more appealing with user reviews and a clearer highlight of features.&lt;/p&gt;

&lt;p&gt;One advice I can give is to always activate the &lt;a href=&quot;https://developer.apple.com/news/?id=09122019c&quot;&gt;grace period&lt;/a&gt;. If a user can’t pay at the time of renewal for a reason or another, it will give them a few days to fix their billing issue while Apple help them. This prevents churn that could have been easily avoided, and I had a few premium users “saved” this way.&lt;/p&gt;

&lt;h3 id=&quot;added-a-completely-free-feature&quot;&gt;Added a Completely Free Feature&lt;/h3&gt;

&lt;p&gt;I added a round timer to the app that is simple but works really well. I built it because &lt;a href=&quot;https://shadowboxingapp.com/best-round-timer-apps-boxing/&quot;&gt;all the timers for boxing&lt;/a&gt; are either plagued with ads or expensive with tons of useless features. I’ve had the experience sparring with a group of people and preroll videos would run before any round… that’s just ridiculous!&lt;/p&gt;

&lt;p&gt;For this reason, I really wanted a timer I could tell everyone at my gym to use when we do sparring. It didn’t need much, basically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A few premade settings to start it quickly and not have to go back and fiddle with it with boxing gloves on&lt;/li&gt;
  &lt;li&gt;A large display so you can see it from afar, with color coded fight/rest modes so you understand what’s going on even after being punched in the face&lt;/li&gt;
  &lt;li&gt;A loud sound when something happens so people can hear over the general chaos of a boxing gym&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;… and that’s it! I could of course make it compatible with the &lt;a href=&quot;https://en.wikipedia.org/wiki/High-intensity_interval_training#Tabata_regimen&quot;&gt;Tabata method&lt;/a&gt;, customize the kind of sound it makes and so on, but most people don’t need that. I certainly don’t.&lt;/p&gt;

&lt;p&gt;The cool thing is that it was fairly easy for me to leverage the existing product and basically build a simplified version of the custom workout form. I added a new timer “exercise”, a couple of UI shortcuts and voila: a free boxing round timer!&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/free_boxing_timer.png&quot; alt=&quot;Free boxing round timer on iOS&quot; style=&quot;padding: 5px; width: 300px;&quot; /&gt;&lt;center&gt;&lt;em&gt;&lt;a href=&quot;https://shadowboxingapp.com/&quot;&gt;Free boxing round timer&lt;/a&gt;&lt;/em&gt;&lt;/center&gt;&lt;/div&gt;

&lt;h2 id=&quot;improving-online-presence&quot;&gt;Improving Online Presence&lt;/h2&gt;

&lt;h3 id=&quot;influencers&quot;&gt;Influencers&lt;/h3&gt;

&lt;p&gt;I’ve tried to work with influencers to get the word out about the app with mixed results. It was great to see some people naturally using the app on Instagram, but it was also a lot of back and forth for a low return on investment. The great thing was when it happened organically, with someone enjoying the app and sharing it without me being involved.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/influencer.png&quot; alt=&quot;Boxing social media influencer&quot; style=&quot;padding: 5px; width: 300px;&quot; /&gt;&lt;center&gt;&lt;em&gt;&quot;If you do it seriously, it's really efficient 🥊&quot;&lt;/em&gt;&lt;/center&gt;&lt;/div&gt;

&lt;h3 id=&quot;make-the-app-more-shareable&quot;&gt;Make the App More Shareable&lt;/h3&gt;

&lt;p&gt;There are a lot of online communties sharing videos of them working out, so I figured I could make it easier to share training videos.&lt;/p&gt;

&lt;p&gt;At first I tried to work with &lt;a href=&quot;https://developer.apple.com/documentation/replaykit&quot;&gt;ReplayKit&lt;/a&gt;, which allows an app to record or stream video from the screen and audio from the app. However not only it was very hard to integrate into SwiftUI as it uses UIKit, but the resulting video quality was surprisingly low, making it useless for my use case.&lt;/p&gt;

&lt;p&gt;After banging my head on the wall for a bit, I decided to go full MVP again and accept that it would not be as good as I wanted initially. So I added a way to embed the UI on top of a video, and then guided users so they could do a screen recording… it’s clearly not optimal, but it took half a day to make and ship!&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/workout.png&quot; alt=&quot;Sharing your boxing workout&quot; style=&quot;padding: 5px; width: 90%;&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;localization&quot;&gt;Localization&lt;/h3&gt;

&lt;p&gt;A nice way to get more market share is to add a new language to your app. While this can seem trivial, just translating a couple of strings, it’s actually pretty complex as you need to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Translate the entire app&lt;/li&gt;
  &lt;li&gt;Handle cases where words will just not fit on a page&lt;/li&gt;
  &lt;li&gt;Translate the product page &amp;amp; screenshots&lt;/li&gt;
  &lt;li&gt;Be able to answer support questions in the new language&lt;/li&gt;
  &lt;li&gt;Write release notes&lt;/li&gt;
  &lt;li&gt;Maintain multiple locales, meaning that each new feature will be slower to develop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since I’m French I figured I could translate the app for France and deal with the overhead. This did indeed increase significantly my downloads in this country, however I’d estimate that I’m now 10% slower when adding anything to the app, which is also significant. Maybe the right move would be to translate everything once the app is mostly stable and not evolving as much.&lt;/p&gt;

&lt;h3 id=&quot;website--blog&quot;&gt;Website &amp;amp; Blog&lt;/h3&gt;

&lt;p&gt;I’ve improved the website content, using a lot of what I’ve created in the app and repurposing it for the web. This made the frontend more appealing and I’m happier about the current state of the site. I’ve also written a few &lt;a href=&quot;https://shadowboxingapp.com/blog/&quot;&gt;blog articles&lt;/a&gt;, mainly about &lt;a href=&quot;https://shadowboxingapp.com/new-simple-combo-punching-bag/&quot;&gt;new app versions&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/boxing_app_website.png&quot; alt=&quot;Shadow boxing app website&quot; style=&quot;padding: 5px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;h4 id=&quot;mobile-apps-top-list-generation-with-jekyll&quot;&gt;Mobile Apps “Top List” Generation with Jekyll&lt;/h4&gt;

&lt;p&gt;Since I’ve spent a lot of time benchmarking other apps, I decided to use this knowledge and build a small &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; solution to easily create lists of great apps I’ve tried. This way I could bring some value by showcasing the interesting apps I discovered, but also draw attention to my own product.&lt;/p&gt;

&lt;p&gt;For instance in this &lt;a href=&quot;https://shadowboxingapp.com/best-jumprope-apps-boxing/&quot;&gt;Top Jumprope Apps for Boxing&lt;/a&gt; article I talk about &lt;a href=&quot;https://apps.apple.com/app/crossrope/id996680141&quot;&gt;Crossrope&lt;/a&gt;, clearly the best iOS app for jump rope… but I also mention my app that is not as good for jump rope, but provides jump rope exercises that fit better in the context of a boxing workout.&lt;/p&gt;

&lt;p&gt;I contemplated making it a different website and draw SEO to my main site, but I figured I would be straightforward and not hide that I am displaying my own application in these lists, so they are on the app’s website itself.&lt;/p&gt;

&lt;h4 id=&quot;experimenting-with-fiverr-for-seo-articles&quot;&gt;Experimenting with Fiverr for SEO Articles&lt;/h4&gt;

&lt;p&gt;I wanted to reinvest some of the money earned with subscriptions into paying people on &lt;a href=&quot;https://www.fiverr.com/&quot;&gt;Fiverr&lt;/a&gt; to write SEO friendly articles. I really didn’t know how it would go, so after paying for a few articles here are the results:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“&lt;a href=&quot;https://shadowboxingapp.com/jump-rope-training-boxing/&quot;&gt;Jump rope training in boxing&lt;/a&gt;” was a bit expensive and written by a native english speaker. I think that the result is pretty good. It’s not a masterpiece, but it’s straightforward and leads into the app nicely.&lt;/li&gt;
  &lt;li&gt;“&lt;a href=&quot;https://shadowboxingapp.com/punching-bag-app-boxing/&quot;&gt;Punching bag benefits for boxing, fitness and more&lt;/a&gt;” was dirt cheap and it is really long… and I don’t like it much. The wording feels non idiomatic and sentences are too long.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ve repeated the experience with a few different sellers and got the same result each time… so basically what I’m saying is that you get what you pay for, who could have guessed!&lt;/p&gt;

&lt;h3 id=&quot;got-lucky--was-featured-on-the-app-store&quot;&gt;Got Lucky &amp;amp; Was Featured on the App Store&lt;/h3&gt;

&lt;p&gt;I was lucky enough that Apple decided to showcase my app in various countries, leading to a significant increase in impressions. Since the app is quite niche, the conversion remained low, but it was great to get this kind of exposure.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/swift/featured.jpg&quot; alt=&quot;App featured on the store&quot; style=&quot;padding: 5px; width: 300px;&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;h3 id=&quot;feedback-from-a-few-months-with-swiftui&quot;&gt;Feedback From A Few Months With SwiftUI&lt;/h3&gt;

&lt;p&gt;I loved using SwiftUI 95% of the time. The 5% remaining was spent dealing with bugs, missing features and incomprehensive behaviour. So when it works, it works incredibly well, but when it doesn’t you really notice that the technology is recent. A lot of details are not ironned out. For instance they &lt;strong&gt;only&lt;/strong&gt; added in iOS 14 &lt;a href=&quot;https://www.hackingwithswift.com/quick-start/swiftui/how-to-make-textfield-uppercase-or-lowercase-using-textcase&quot;&gt;the ability to upcase a text&lt;/a&gt;. It’s also impossible to customize the back button of a &lt;code class=&quot;highlighter-rouge&quot;&gt;NavigationView&lt;/code&gt; and other weird choices like this.&lt;/p&gt;

&lt;p&gt;Another issue is that every tutorial and piece of documentation assumes that you know UIKit and are learning SwiftUI. In my case I went straight to SwiftUI and therefore had a lot of trouble following some explanations.&lt;/p&gt;

&lt;p&gt;Overall I think this is the way UI development will go on iOS, so it is important to follow SwiftUI’s evolution. However while it’s perfect for side projects, I wouldn’t build a large consumer product with it just yet. Instead I’d use it on smaller projects to build a team’s skills and wait for a larger adoption of iOS14+ and a more complete feature-set for the framework. My ballpark estimate would be to start using it in production in 1 to 2 years.&lt;/p&gt;

&lt;h3 id=&quot;on-the-product-side&quot;&gt;On the Product Side&lt;/h3&gt;

&lt;p&gt;I’m honestly really happy with the current state of the app. I use it regularly to train, and it does it job well. It’s a good workout, is pretty fun and keeps me engaged thanks to the random aspect of the algorithm-based generation. I also started to use the recording feature more and more to watch what I did and correct mistakes.&lt;/p&gt;

&lt;p&gt;There are still some weird quirks, mainly around how you can customize the experience, and I’d really like to add more features around statistics. I also would love to be able to create a real path for learning how to box and work with boxing coaches. But even with everything that it could be, it works well as it is. It’s stable and makes boxing at home more fun!&lt;/p&gt;

&lt;h3 id=&quot;thanks-for-reading&quot;&gt;Thanks for Reading&lt;/h3&gt;

&lt;p&gt;If you read all of this, congratulations, it was a long one! I hope you found parts of it useful for your own projects… and if you box, I hope &lt;a href=&quot;https://shadowboxingapp.com/&quot;&gt;you’ll give the app a try&lt;/a&gt;!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Force Multipliers</title>
     <link href="https://marcgg.com/blog/2020/06/04/force-multipliers/"/>
     <updated>2020-06-04T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2020/06/04/force-multipliers</id>
     <content type="html">
       &lt;p&gt;A team of 10 engineers was performing well, but inside of it was someone, Adam, who underperformed according to most project metrics. He was often a bit late in shipping features and had more trouble than others tackling very complex technical issues.  Adam was well liked by the team, but after some pressure was put on his manager, she decided to let Adam go.&lt;/p&gt;

&lt;p&gt;Suddenly the team’s output dropped drastically to a fraction of what it used to be with Adam on board!&lt;/p&gt;

&lt;p&gt;What happened?&lt;/p&gt;

&lt;p&gt;As it turned out, Adam worked as a product manager in a previous company. This meant he was a bit slower than classically trained software engineers, but he knew how to work well with the product department. As it turned out, he was facilitating discussions between PMs and engineers, often preventing conflicts from appearing. He was also friend with most people in the team, which helped tremendously in squashing small issues quickly and improve team morale. This wasn’t his role, and Adam didn’t even pay much attention to it as it felt like the normal thing to do.&lt;/p&gt;

&lt;p&gt;Once was gone, the engineering team fell back to a more defensive approach in its relationship with the product team, which created tensions. This in turn reduced the velocity for the entire team.&lt;/p&gt;

&lt;p&gt;Letting Adam go was a mistake from the engineering manager who should have identified that Adam’s value to the team went far beyond “just” shipping features. It was also a failure of the organisation who set up metrics only focused on delivery and not looking at the bigger picture.&lt;/p&gt;

&lt;h2 id=&quot;building-vs-multiplying&quot;&gt;Building vs Multiplying&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Before starting, please keep in mind that a lot here will obviously be oversimplified for the sake of argument. Hopefully, it should still give you some insights on how to approach the different ways people can add value in a team.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In any given team we’ll have people bringing clear direct value, and others increasing the global output of said team. No group is inherently better than the other and, in order to succeed, a company will need both. It’s important to recognize that, even if some people might directly produce less, they can still be of great value to a team.&lt;/p&gt;

&lt;p&gt;• A “&lt;strong&gt;builder&lt;/strong&gt;” produces some amount of “value” every week. For engineers, this can be features going to production, bugs fixed , etc. It can be hard to exactly measure, but it’s more visible.&lt;/p&gt;

&lt;p&gt;• A “&lt;strong&gt;force multiplier&lt;/strong&gt;” will add x2 to the people they work with because they will help other people produce value faster, more efficiently or with higher quality. This can be done through mentoring, PRs, removal of blockers &amp;amp; bottlenecks, communication improvements , etc.&lt;/p&gt;

&lt;p&gt;It’s usually not one or the other but more two scales. One really senior engineer will be a really good “builder”, but will also be increase the team’s output by providing really good pull reviews. A decent engineering manager will mostly spend her time removing roadblocks for her team, but she will also be able to open up a code editor and write a feature if need be.&lt;/p&gt;

&lt;h2 id=&quot;multiplying-not-only-a-manager-trait&quot;&gt;Multiplying: Not Only a Manager Trait&lt;/h2&gt;

&lt;p&gt;It’s easy to say that only managers or project managers are multipliers: they don’t build things directly themselves and are mostly facilitators. However there are way more people that can improve the productivity of the team.&lt;/p&gt;

&lt;p&gt;I’d say that there are 3 skills that one can have that will bring value beyond building features:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Technical expertise&lt;/li&gt;
  &lt;li&gt;Good communication &amp;amp; influence on culture&lt;/li&gt;
  &lt;li&gt;Ability to build and have people follow good processes&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;technical-expertise&quot;&gt;Technical Expertise&lt;/h3&gt;

&lt;p&gt;Anyone with in depth knowledge of a technical field can improve everybody’s life and output by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Spending a non trivial amount of time efficiently mentoring other people. This helps them learn faster, in turn improving what they can accomplish for the team.&lt;/li&gt;
  &lt;li&gt;Being involved in architectural decisions and big picture engineering strategy. This reduces the technical debt, the time spent fixing bugs and increases the velocity.&lt;/li&gt;
  &lt;li&gt;Writing great technical documentation and clearly expressing their thoughts and designs, allowing other engineers to get up to speed faster on any topics and not loose track of important decisions.&lt;/li&gt;
  &lt;li&gt;Motivating a group of people thanks to their technical abilities. It could also help with recruitment. It’s always inspiring to work alongside talented people.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;good-communication--influence-on-culture&quot;&gt;Good Communication &amp;amp; Influence on Culture&lt;/h3&gt;

&lt;p&gt;Someone with great communication skills can also help drive the productivity of the entire team up by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Improving team morale, creating a more pleasant environment to be in, meaning that fewer people will leave. A good atmosphere is also important to attract qualified people. It’s also way better for everybody’s mental health to have a positive and friendly work culture.&lt;/li&gt;
  &lt;li&gt;Facilitating discussions and generally preventing conflicts.&lt;/li&gt;
  &lt;li&gt;Helping people to get in contact across groups, acting as a networker of sorts. This can help breaking knowledge silos and get a good company-wide dynamic going.&lt;/li&gt;
  &lt;li&gt;Being involved in building the team and/or company culture, which is very important for long term success. This can mean starting small workgroups, have lunches with people from various departments or start a company blog and convince people persuade.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ability-to-build-good-procedures&quot;&gt;Ability to Build Good Procedures&lt;/h3&gt;

&lt;p&gt;Some people really can optimise things by defining procedures or best practices. They can too improve the team’s output by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Helping technical and communication experts formalise their knowledge into actionable procedures.&lt;/li&gt;
  &lt;li&gt;Automatize actions that can be, and help with the adoption of new tools.&lt;/li&gt;
  &lt;li&gt;Talking to people in other companies to see how they organise, and bring this in-house.&lt;/li&gt;
  &lt;li&gt;Advocate from internal promotion of already in place best practices. For instance, if a team has success with a daily standup meeting, maybe the other teams could benefit from at least trying it!&lt;/li&gt;
  &lt;li&gt;Identify and bring up organisational issues and sub-optimisations that the management team have missed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;team-composition&quot;&gt;Team Composition&lt;/h2&gt;

&lt;p&gt;It’s interesting to see how, depending on the team and context, you will need more or less of these two kinds of people. By keeping in mind the different ways people will bring value, you can really improve your team composition and output.&lt;/p&gt;

&lt;p&gt;To illustrate, I’ll use an arbitrary and simplistic number to represent the direct output of a person. It doesn’t mean anything, but you can imagine it be story points, milestones reached or whatever you use to monitor the advancement of a project.&lt;/p&gt;

&lt;h3 id=&quot;small-team&quot;&gt;Small Team&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alexandra (Associate Engineer) &lt;/td&gt;
      &lt;td&gt;+5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob (Engineer)&lt;/td&gt;
      &lt;td&gt;+15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie (Engineering Manager)&lt;/td&gt;
      &lt;td&gt;x2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Team output&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;40&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;In this situation the engineering manager is focused on management and is not shipping features. This allows the two engineers to move faster thanks to Charly clearing roadblocks ahead of them. However Charly is a great backend engineer as well, so it might make more sense for him to code instead of spending his time managing:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alexandra (Associate Engineer)&lt;/td&gt;
      &lt;td&gt;+5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob (Engineer)&lt;/td&gt;
      &lt;td&gt;+15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charly (Engineering Manager)&lt;/td&gt;
      &lt;td&gt;+30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Team output &lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt; 50 &lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This way, we get a higher team output. However this is not as simple. This will surely deliver short term value, but in the long term Alexandra &amp;amp; Bob might get frustrated or will plateau because of their manager not spending time with them. A good balance could be spending half and half:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alexandra (Associate Engineer)&lt;/td&gt;
      &lt;td&gt;+5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob (Engineer)&lt;/td&gt;
      &lt;td&gt;+15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charly (Engineering Manager)&lt;/td&gt;
      &lt;td&gt;+15, x0.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Team output &lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt; 45 &lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The output here is actually better than originally and we have a more sustainable organisation. It will be a bit more challenging for Charly who will have to juggle between his managerial duties and coding features, but since the team is still small it’s probably doable.&lt;/p&gt;

&lt;h3 id=&quot;large-team&quot;&gt;Large Team&lt;/h3&gt;

&lt;p&gt;In the case of a large team, any multiplier will have a massive effect. Let’s take this team:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alexandra (Associate Engineer)&lt;/td&gt;
      &lt;td&gt;+5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob (Engineer)&lt;/td&gt;
      &lt;td&gt;+15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Christian (Senior Engineer)&lt;/td&gt;
      &lt;td&gt;+20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Dany (Associate Engineer)&lt;/td&gt;
      &lt;td&gt;+5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Elisa (Engineer)&lt;/td&gt;
      &lt;td&gt;+10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Franz (Engineer)&lt;/td&gt;
      &lt;td&gt;+15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Team output &lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt; 70 &lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;There is no way that any individual contributor will be able to bring +70 value, but any multiplier will bring a lot.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alexandra (Associate Engineer)&lt;/td&gt;
      &lt;td&gt;+5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob (Engineer)&lt;/td&gt;
      &lt;td&gt;+15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Christian (Senior Engineer)&lt;/td&gt;
      &lt;td&gt;+20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Dany (Associate Engineer)&lt;/td&gt;
      &lt;td&gt;+5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Elisa (Engineer)&lt;/td&gt;
      &lt;td&gt;+10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Franz (Engineer)&lt;/td&gt;
      &lt;td&gt;+15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Gabriel (Staff Engineer)&lt;/td&gt;
      &lt;td&gt;+15, x1.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Heidy (Engineering Manager)&lt;/td&gt;
      &lt;td&gt;x1.8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt; Team output &lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt; 190 &lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Here having two people working as force multipliers has a massive impact.&lt;/p&gt;

&lt;h2 id=&quot;more-options-than-going-into-management&quot;&gt;More Options Than Going Into Management&lt;/h2&gt;

&lt;p&gt;The great news with this, is that you can have larger impact without going into management! For instance senior engineers can improve their technical expertise further into staff or principle positions, mentoring new hires and making sure best practices are clearly shared and followed.&lt;/p&gt;

       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Is Remote Work Necessarily Asynchronous?</title>
     <link href="https://marcgg.com/blog/2020/05/25/remote-distributed-synchronous-asynchronous/"/>
     <updated>2020-05-25T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2020/05/25/remote-distributed-synchronous-asynchronous</id>
     <content type="html">
       &lt;p&gt;A lot of people tend to confuse people working remotely and people working asynchronously. While it’s often the case that people not co-located in a single office will prefer asynchronous communication, that’s not a given. I’ve seen people all working in an open space still favouring Slack &amp;amp; quiet hours over shoulder tapping, and teams working at home reaching for their phone every time something needs to be discussed.&lt;/p&gt;

&lt;p&gt;This is especially visible with companies forced into remote work during the COVID crisis, as a lot of them simply converted their physical meetings to conference calls. This will usually spell disaster, as they will lose a lot of productivity, leading to more meetings, more frustration, and a general feeling that remote doesn’t work for them.&lt;/p&gt;

&lt;p&gt;To better define organisations, I feel like it’s useful to split a team’s approach into two dimensions: policy with regard to remote and if the team works mostly synchronously or asynchronously.&lt;/p&gt;

&lt;h2 id=&quot;remote-work&quot;&gt;Remote Work&lt;/h2&gt;

&lt;p&gt;I try to avoid saying things like “truly remote” or “real remote”, and instead order the remote adoption of organisations on a scale that goes like this:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/remote-work-scale.png&quot; alt=&quot;Scale of remote friendliness from co-located to fully distributed&quot; style=&quot;padding: 5px; width: 700px;&quot; /&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Co-located team&lt;/strong&gt;: There is an office and all employees are required to work there.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Team allowing remote work&lt;/strong&gt;: There is an office and all employees usually work there. However they can also work from home sometimes.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Remote-friendly team&lt;/strong&gt;: There is an office, but not everyone need to work there. Some people are working partially or entirely remotely.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mostly distributed team&lt;/strong&gt;: There is an office, but only a small percentage of the company works there.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Fully distributed team&lt;/strong&gt;: There is no physical office and people do not work in the same location, even if they can sometimes gather in the same place for particular events.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can also add the fact that some company have multiple office. Each office can have a different approach to remote, but usually people can move between offices.&lt;/p&gt;

&lt;h2 id=&quot;synchronous-vs-asynchronous&quot;&gt;Synchronous vs Asynchronous&lt;/h2&gt;

&lt;p&gt;Let’s define quickly what the two approaches are. Of course, it’s not one or the other, but a scale.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;A synchronous team&lt;/strong&gt; will use meetings and brainstorms to move projects forward. The team will favour personal interactions directly either in person, over the phone or via video conference. The organisation is fine with paying the overheads in time spent &amp;amp; lost of focus because of the increased productivity of collaborative synchronous work.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;An asynchronous team&lt;/strong&gt; will prefer emails, chat and documentation over meetings and calls. The team usually values long period of uninterrupted time, and deems this more productive than the alternative. They are willing to invest into communication to make up for the reduced amount of direct discussions.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A team is co-located or fully remote doesn’t mean it will be working in a way or another. This is why some companies can be fully remote but require their employee to be within a certain time zone, or at least be fully available in the usual working hours of a time zone.&lt;/p&gt;

&lt;p&gt;On the other hand, co-located companies can prefer individual offices, or quiet hours in open spaces. They can also track and reduce the number of meetings to a minimum in order to maximise time focused on tasks.&lt;/p&gt;

&lt;p&gt;The decision could also depend on the person and role. Managers tend to be more synchronous and engineers asynchronous, with a bit of both when the two groups interact. In this situation it’s usually important to keep in mind the &lt;a href=&quot;http://www.paulgraham.com/makersschedule.html&quot;&gt;manager vs maker schedule issues&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Each approach can and has worked depending on the type and scale of the company. For instance a brand new startup could benefit from their founders brainstorming synchronously in an office for a few months to kickstart their project. On the other hand, a larger company can leverage remote work to hire in other cities and reach new talents. Finally a company with complex software engineering work can benefit from a mostly asynchronous culture in order to maximise focus and leave developers in a flow state.&lt;/p&gt;

&lt;p&gt;To add my two cents, I don’t think a company that is co-located and synchronous is the way to go anymore. Everyone should allow some remote work at the very least, and prefer asynchronous communication when possible to avoid having too many meetings. Founders should take this into consideration when starting their projects, and existing companies should evolve their process - even after the COVID crisis.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>The Certainty of Failure</title>
     <link href="https://marcgg.com/blog/2020/05/22/certainty-of-failure/"/>
     <updated>2020-05-22T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2020/05/22/certainty-of-failure</id>
     <content type="html">
       &lt;p&gt;Everyone makes mistakes, that should be a given. Knowing this, the question becomes not “if” one will slip, but “when”. Of course, experience and working hard can help in reducing the number of errors, but there’s no way for someone to have an absolutely perfect track record.&lt;/p&gt;

&lt;p&gt;This is why I feel like an interesting way to look at any significant problem I’ve created is to think to myself: “good news, it’s my fault”. Since I put myself in this situation, I can fix the part under my control and possibly avoid the problem next time.&lt;/p&gt;

&lt;p&gt;It doesn’t always feel good to admit to have messed up in some fashion, and the first reaction can be to deflect blame. However identifying mistakes quickly is an obvious first step for improving over time, and hopefully not repeating the same errors over and over again. It’s also more empowering to look at what we can control instead of undergoing a situation with no way to fix it.&lt;/p&gt;

&lt;p&gt;In an organisation, when a mistake is made, it’s unhealthy to either conclude that it’s no one’s fault, or go to another extreme and say that only one person is to blame. For instance if the intern deletes the production database by running a poorly written script, the intern messed up… but their manager didn’t check their work, the senior engineer didn’t read the script before merging it into master, the SRE team didn’t secure the production access, the CTO let all of this happen and the CEO hired the CTO!&lt;/p&gt;

&lt;p&gt;Because of this, as a manager, it can be helpful to remind teammates that errors are bound to happen and that everyone involved has a bit of responsibility when a mistake is made. If my direct report fails, I fail, my boss fails and so on. To make sure to move forward effecitently, we all need to look at where we messed up and do better next time by training more, paying more attention to details, improving communication and so on.&lt;/p&gt;

&lt;p&gt;It’s not about pointing fingers, judging the ability of people and figuring out who to fire, it’s about being open and honnest about the certainty of failure at some point and reacting appropriately. Ignoring this fact and expecting perfection form yourself &amp;amp; your direct reports is exhausting and unproductive. It would also lead to people hiding errors and trying to fix them alone, which is never a good situation.&lt;/p&gt;

&lt;p&gt;It’s also not about always trying to fix every single error, in some cases we have no choice but to let some minor mistakes go depending on the situation, and not stress too much over them.&lt;/p&gt;

&lt;p&gt;This mindset alongside other measures can help create a team culture where people don’t hesitate to share their failure and learn quickly from them. In turn, this can allow for things like blameless retrospectives, more psychological safety for all and a quicker adoption of best practices through sharing experience.&lt;/p&gt;

       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Circular Progress Bar &amp; Timer with SwiftUI</title>
     <link href="https://marcgg.com/blog/2020/05/06/circular-progressbar-clock-swiftui/"/>
     <updated>2020-05-06T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2020/05/06/circular-progressbar-clock-swiftui</id>
     <content type="html">
       &lt;p&gt;I’ve tried a few times to find a better way to do mobile development. In 2010 I started using &lt;a href=&quot;https://www.appcelerator.com/Titanium/&quot;&gt;Titanium&lt;/a&gt; to auto generate simple mobile apps. Later, in 2012, I gave &lt;a href=&quot;/blog/2012/10/22/custom-slider-ios-rubymotion/&quot;&gt;RubyMotion&lt;/a&gt; a go. A year later, I used &lt;a href=&quot;/blog/2013/08/29/appgyver-steroids-iphone-hybrid-javascript/&quot;&gt;Steroids.js&lt;/a&gt; and &lt;a href=&quot;/blog/2014/04/09/phonegap-steroids-hybrid-native-app-tips/&quot;&gt;PhoneGap&lt;/a&gt; to &lt;a href=&quot;/blog/2014/05/06/quantified-self-iphone-app-track-mood-day/&quot;&gt;release my first iOS app&lt;/a&gt;… but I was never really happy about these technologies. After seeing SwiftUI it felt like a massive improvement over the current state of iOS development, so I decided to try it out. I have to say that it’s almost everything I wanted, only missing the cross platform aspect.&lt;/p&gt;

&lt;p&gt;To learn the framework, I’m currently working on an app to coach you during &lt;a href=&quot;https://en.wikipedia.org/wiki/Shadowboxing&quot;&gt;shadow boxing&lt;/a&gt; sessions, and I though I would share how to build a small component I had to build.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/first_seconds_h.gif&quot; alt=&quot;Circular progressbar with SwiftUI&quot; style=&quot;padding: 5px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;I’ll first share the entire Swift file and then give some details about parts of it.&lt;/p&gt;

&lt;h2 id=&quot;just-give-me-the-code&quot;&gt;Just Give Me The Code&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: Keep in mind that I’m still new to the technology. The code organisation can be improved and there are some refactoring to be made. For instance you probably don’t want to handle your state like this in a full fledge application, and the timer just floats in the middle of the file :) Don’t hesitate to leave a comment with your improvement suggestions.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/marcgg/3a86f635586a1eaf5fc2edccebd3758b.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;timer-logic&quot;&gt;Timer Logic&lt;/h2&gt;

&lt;p&gt;There is a timer that will tigger an event every second to show progress. We could also have plugged it into a task progress or a simple button incrementing a variable.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;	&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;timer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Timer&lt;/span&gt;
	 &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;every&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;common&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	 &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;autoconnect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then we can add an &lt;code class=&quot;highlighter-rouge&quot;&gt;onReceive&lt;/code&gt; that will increment a &lt;code class=&quot;highlighter-rouge&quot;&gt;counter&lt;/code&gt; until we get to a certain point we’ll call &lt;code class=&quot;highlighter-rouge&quot;&gt;countTo&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;	&lt;span class=&quot;nf&quot;&gt;onReceive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
	 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;countTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;swiftui-views&quot;&gt;SwiftUI Views&lt;/h2&gt;

&lt;h3 id=&quot;clock-view&quot;&gt;Clock View&lt;/h3&gt;

&lt;p&gt;We can create a new &lt;code class=&quot;highlighter-rouge&quot;&gt;Clock: View&lt;/code&gt; that will display the counter. With some minor maths and padding we can turn the counter from an integer to something with minutes and seconds, as visible in &lt;code class=&quot;highlighter-rouge&quot;&gt;counterToMinutes()&lt;/code&gt;. We could have used a time object, but I liked the versatility of the integer here.&lt;/p&gt;

&lt;h3 id=&quot;progresstrack-view&quot;&gt;ProgressTrack View&lt;/h3&gt;

&lt;p&gt;This view is the “track” of the progress bar, meaning what is displayed when the progress bar is not filled. We’re using the fact that &lt;a href=&quot;https://stackoverflow.com/a/56787080/90691&quot;&gt;we need an overlay to have a stroke effect on a shape&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;progressbar-view&quot;&gt;ProgressBar View&lt;/h3&gt;

&lt;p&gt;This one is where the entire circular progress is made. Worth noting is the color changing to green when it’s complete:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;nf&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;green&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orange&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/final_seconds.gif&quot; alt=&quot;Circular progressbar with SwiftUI&quot; style=&quot;padding: 5px; width: 300px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;We also use a custom &lt;code class=&quot;highlighter-rouge&quot;&gt;StrokeStyle&lt;/code&gt; to have a rounded tip on the progress bar.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Generating Custom Image Previews For Social Media</title>
     <link href="https://marcgg.com/blog/2020/04/22/automatic-image-preview/"/>
     <updated>2020-04-22T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2020/04/22/automatic-image-preview</id>
     <content type="html">
       &lt;p&gt;When sharing a link on social media, the site often displays an image to make it more appealing. However on my blog I decided to keep things simple, often not having any header image or illustrations. This means my blog is &lt;a href=&quot;/assets/blog/pagespeed_marcgg.png&quot;&gt;faster to load&lt;/a&gt; and I don’t spend time browsing stock picture websites to find something somewhat related to what I’m talking about.&lt;/p&gt;

&lt;p&gt;The problem is that in most cases sharing my articles will look like this:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/preview_fail.png&quot; alt=&quot;Social media preview&quot; style=&quot;padding: 5px; width: 500px&quot; /&gt;&lt;/div&gt;

&lt;p&gt;It’s not that bad, but after years I decided to do something about it. Of course I could open Photoshop, create a few images and call it a day, but that &lt;s&gt;would be way too simple&lt;/s&gt;
 wouldn’t scale™.&lt;/p&gt;

&lt;h2 id=&quot;making-it-look-nice&quot;&gt;Making It Look Nice&lt;/h2&gt;

&lt;p&gt;I’m a terrible visual designer, so I needed to do something simple. I also wanted to avoid only having a random stock picture of people in suits shaking hands or a sunset, and instead have something more customised. I figured a way to go about it would be to generate an image with some text on top of some kind of background.&lt;/p&gt;

&lt;h3 id=&quot;tweaking-stock-images&quot;&gt;Tweaking Stock Images&lt;/h3&gt;

&lt;p&gt;There are a lot of good quality stock images out there. My issue with them is that they look very generic. In order to make them appear more distinct, I decided to run a selection through &lt;a href=&quot;https://duotone.shapefactory.co/&quot;&gt;Duotone&lt;/a&gt; to make them match the simplistic color palette of my blog.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/preview_duotone.jpg&quot; alt=&quot;Using duotone&quot; style=&quot;padding: 5px; width: 700px&quot; /&gt;&lt;/div&gt;

&lt;p&gt;There’s not much color on my blog, but I do have a gradient on top of the page (wow!). I decided to turn use this gradient to add a border. I made a quick photoshop template and processed a bunch of duotoned stock images through it. I also added a small Gaussian blur to the images so that they don’t take the attention away from the text.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/photoshop-template.png&quot; alt=&quot;Simple photoshop template&quot; style=&quot;padding: 5px; width: 700px&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Once I ran through this process a couple of times, I realised that I really didn’t like to do it. I also didn’t want to find a new image and go through this whenever I wrote a new article. The value added is small, and I much prefer focusing on writing things than optimise my social media presence. So instead I used the category system already in place in my blog and created a background per category.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/category_backgrounds.png&quot; alt=&quot;Tagging system and backgrounds&quot; style=&quot;padding: 5px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;This way all “Management” articles will have the same background, saving me the trouble of building a new image for each article. This feels fine to me because the images will be customised with the preview text.&lt;/p&gt;

&lt;h3 id=&quot;adding-text&quot;&gt;Adding Text&lt;/h3&gt;

&lt;p&gt;At first I wanted to display the article’s title. However some of them were very long and I would have to make the font very small to get the text to fit. Doing this was also just repeating what was displayed in the linked title below, not bringing anything new.&lt;/p&gt;

&lt;p&gt;I decided instead to write a new “preview title”, which would be a way smaller version of the main article title. For instance “Engineering Team Meeting: Format &amp;amp; Topic Ideas” would become “Engineering Team Meeting”. In the future I will also try to experiment with catchier titles for this image and see how this performs.&lt;/p&gt;

&lt;h3 id=&quot;the-result&quot;&gt;The Result&lt;/h3&gt;

&lt;p&gt;There are of course a lot to improve, including finding better photos, adjusting the duotone contrast, making the border look nicer… but I think that’s an improvement over having no image at all so I’ll keep it for now!&lt;/p&gt;

&lt;h4 id=&quot;seen-on-twitter&quot;&gt;Seen On Twitter&lt;/h4&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/preview_example.png&quot; alt=&quot;Social media preview&quot; style=&quot;padding: 5px; width: 500px&quot; /&gt;&lt;/div&gt;

&lt;h4 id=&quot;a-few-examples&quot;&gt;A Few Examples&lt;/h4&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/result_preview.jpg&quot; alt=&quot;Social media preview&quot; style=&quot;padding: 5px; width: 750px&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;how-to-automate&quot;&gt;How to Automate&lt;/h2&gt;

&lt;p&gt;Since I didn’t want to generate images manually using Photoshop each time I wrote a new article, I created a small Ruby script to do it for me.&lt;/p&gt;

&lt;h3 id=&quot;figuring-out-what-text-to-write&quot;&gt;Figuring Out What Text To Write&lt;/h3&gt;

&lt;p&gt;I use &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; for my blog, meaning that all my articles are written in markdown and have a set of customisable attributes. I used this fact and added a “social media preview” attribute to the &lt;a href=&quot;https://jekyllrb.com/docs/front-matter/&quot;&gt;front matter&lt;/a&gt; section of the articles.&lt;/p&gt;

&lt;p&gt;To illustrate, here is how my &lt;a href=&quot;/blog/2020/04/14/creating-my-manager-readme/&quot;&gt;Manager README article&lt;/a&gt;’s attributes look like:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/front-matter.png&quot; alt=&quot;Markdown header example&quot; style=&quot;padding: 5px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Once I decided on the format, and went back and wrote the preview text, I needed to programatically go through all articles and find the category and tag.&lt;/p&gt;

&lt;p&gt;At first I wanted to load up Jekyll to use their parsing capabilities, but it turned out to be more painful than expected. To move faster and save me the headaches, I went back to regular expressions. This is obviously less than optimal, but it did the trick.&lt;/p&gt;

&lt;p&gt;Note that I also kept the posts’ file names as their unique identifier.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;FOLDER_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;../_posts/&quot;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;MESSAGE_PATTERN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^socialmediapreview: &quot;([&amp;amp;a-zA-Z0-9]()_ !\/\?\.:;=+$%éèà\-']*)&quot;$/&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;TAG_PATTERN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^tag: &quot;?([&amp;amp;a-zA-Z0-9]()_ ]*)&quot;?$/&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;FOLDER_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.md&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;file_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;FOLDER_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MESSAGE_PATTERN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TAG_PATTERN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;generate_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;adding-text-over-an-image-programatically&quot;&gt;Adding Text Over an Image Programatically&lt;/h3&gt;

&lt;p&gt;To generate the images I used ImageMagick. I described this process in more details in this article: &lt;a href=&quot;/blog/2020/04/11/add-text-image-rmagick-imagemagick/&quot;&gt;Add Text Over an Image with Ruby&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;figuring-out-font-size&quot;&gt;Figuring Out Font Size&lt;/h4&gt;

&lt;p&gt;I wanted the text to take up as much space as possible, but since all the preview messages would be different, it wouldn’t make sense to just have one font size. To solve this, I came up with this small tweak based on text length that worked for my situation:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pointsize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;175&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is not perfect since, in non fixed-spaced fonts, letters like&lt;code class=&quot;highlighter-rouge&quot;&gt;M&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;W&lt;/code&gt; are way bigger than &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;… but this solution seemed a decent in between. To improve, I should add a lenght factor depending on the type of characters in the message.&lt;/p&gt;

&lt;h4 id=&quot;generating-the-images&quot;&gt;Generating The Images&lt;/h4&gt;

&lt;p&gt;The whole thing is pretty straightforward, basically calling this &lt;code class=&quot;highlighter-rouge&quot;&gt;generate_image(file_name, message, tag)&lt;/code&gt; method containing the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Magick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ImageList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./backgrounds/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;downcase&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Magick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;annotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gravity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Magick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CenterGravity&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pointsize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;175&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#1c1c1c&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;font&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/path/to/font/OpenSans-ExtraBold.ttf&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jpeg&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;../assets/previews/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EXTENSION&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once this is done I can just run the script and it will regenerate all the preview images.&lt;/p&gt;

&lt;h3 id=&quot;letting-twitterlinkedinfacebook-know&quot;&gt;Letting Twitter/Linkedin/Facebook Know&lt;/h3&gt;

&lt;p&gt;Finally, once the assets were generated, I needed to make the information available to the social media platforms. I didn’t want to actually display the image on the articles, so I only put the information in the header of all my post articles using the &lt;code class=&quot;highlighter-rouge&quot;&gt;og:image&lt;/code&gt; tag &lt;a href=&quot;https://developers.facebook.com/docs/sharing/webmasters/#markup&quot;&gt;as described here&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/setup_card.png&quot; alt=&quot;Setup card header&quot; style=&quot;padding: 5px; width: 90%&quot; /&gt;&lt;/div&gt;

&lt;p&gt;To know if the assets were properly read, I had to use each platform’s debugger tool:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.facebook.com/tools/debug/&quot;&gt;Facebook Sharing Debugger&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/post-inspector/&quot;&gt;Linked Post Inspector&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cards-dev.twitter.com/validator&quot;&gt;Twitter Card Validator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Debugging this part was a bit annoying as I needed to push a release every time to see if the various sites understood my changes. I could have setup some kind of tunnel or use &lt;a href=&quot;https://ngrok.com/&quot;&gt;ngrok&lt;/a&gt; but I got lazy which ended up costing me more time. Platforms like Twitter also had a very weird cache management system which made the whole process last way more painful than it should have been.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The whole image generation process is now working fine - maybe you even came to this article through a link featuring one of these previews!&lt;/p&gt;

&lt;p&gt;It obviously took me more time to automate than to do manually, but it was way more fun to do it this way :) I also believe that &lt;a href=&quot;/blog/2015/09/30/automate-repetitive-tasks/&quot;&gt;time spent is not the only measure triggering a need for automation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A few things that I should improve:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Make it look better. Clearly the border is not as cool looking as I wanted, the duotone colors could be nicer… on this part I know that I’ll need help :)&lt;/li&gt;
  &lt;li&gt;Trigger the script automatically on file change instead of manually before releasing.&lt;/li&gt;
  &lt;li&gt;Refactor the script a bit, making it cleaner and more defensive. I could also figure out a way to not regenerate all images each time, with some state management.&lt;/li&gt;
  &lt;li&gt;Use proper parsing instead of regular expressions.&lt;/li&gt;
  &lt;li&gt;Have a better local setup to work with this, probably with a tunnel to get quicker feedback from social media sites.&lt;/li&gt;
&lt;/ul&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Writing my Manager README</title>
     <link href="https://marcgg.com/blog/2020/04/14/creating-my-manager-readme/"/>
     <updated>2020-04-14T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2020/04/14/creating-my-manager-readme</id>
     <content type="html">
       &lt;p&gt;I’ve always liked &lt;a href=&quot;https://twitter.com/orenellenbogen&quot;&gt;Oren Ellenbogen&lt;/a&gt;’s idea of having a &lt;a href=&quot;https://managerreadme.com/&quot;&gt;Manager README&lt;/a&gt; or a document similar to what &lt;a href=&quot;https://randsinrepose.com/archives/how-to-rands/&quot;&gt;Michael Lopp displays on his site&lt;/a&gt;. After some time, I finally wrote something and shared it internally, and I’ve now decided to make it public.&lt;/p&gt;

&lt;p&gt;If you’re wondering what this is all about, why I think it’s useful and how I wrote mine, keep reading. If you just want to read the document itself, you can &lt;a href=&quot;/manager-readme/&quot;&gt;click here and check it out now&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-manager-readme&quot;&gt;What Is a Manager README?&lt;/h2&gt;

&lt;p&gt;A manager README is a document that a manager can give to their direct reports to help kickstart the working relationship. This is by no means a replacement for actually learning about the other person, or a way of avoiding discussions. It’s just a solution for speeding things up and making them more intentional.&lt;/p&gt;

&lt;p&gt;The content itself is free-form, but often showcases what the manager values, what their expectations are going to be or how they prefer to communicate. Personally, I don’t consider the format to be of great importance. I’ve seen everything ranging from &lt;a href=&quot;https://docs.google.com/presentation/d/1F2PWxQ-sKJ1uAlrhU9ULXOVmH-CW6dw_ufMzbFLAWHA/edit#slide=id.p&quot;&gt;slides&lt;/a&gt; to &lt;a href=&quot;https://docs.google.com/document/d/1sx5ssYb_xMrmwPpyjD5xP7RvQ7cHweDYlRGn2SXztKw/edit#heading=h.g1q7u9cc1uha&quot;&gt;Google Docs&lt;/a&gt;, and even &lt;a href=&quot;https://managerreadme.com/readme/muness&quot;&gt;dedicated websites&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally, I think that any good manager README needs to be a living document. I’m sure that mine won’t look the same in a few years, so it’s important to keep it up to date and to make sure your readers keep challenging the content.&lt;/p&gt;

&lt;h2 id=&quot;why-write-one&quot;&gt;Why Write One?&lt;/h2&gt;

&lt;p&gt;This document is supposed to help with a few things, including faster onboarding and public visibility over your management style. Personally, I decided to actually sit down and write one for a few reasons.&lt;/p&gt;

&lt;p&gt;Firstly, &lt;strong&gt;I greatly prefer explicit communication over implicit communication&lt;/strong&gt;. If I’m your manager, I know that I will have a significant impact on your life at work and your ability to succeed professionally. Because of this, I don’t want my personality quirks to get in your way. If we are going to work together for a while, I’d much rather show you right away how I usually do things. You’ll quickly know where I stand, and we can debate what we disagree on. Being more explicit will also save you the effort of guessing what I’m thinking or what I’m expecting from you.&lt;/p&gt;

&lt;p&gt;Secondly, &lt;strong&gt; the exercise of writing a README document is really engaging in itself&lt;/strong&gt;. Spending a few hours on this document forces you to really think about how you work. It is a great opportunity to challenge whether your behaviour really does match your values. It’s easy to say: “I value work/life balance”, but do you really? Do you have examples where you’ve showcased this?&lt;/p&gt;

&lt;p&gt;On top of this, once the document is shared, it &lt;strong&gt;makes you accountable&lt;/strong&gt; to what you wrote. The README is the way I intend to operate but, being human and all, I will most likely deviate and make various mistakes. This is why mine starts by:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you see a discrepancy between this document and my behaviour, please tell me.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Finally, I think that publicising this document should &lt;strong&gt;help future people working in my team, or future employers, know what kind of a manager I am&lt;/strong&gt;. This way, if there is any disagreement on some fundamental matter, all parties involved can avoid painful months that usually conclude by someone terminating the working relationship.&lt;/p&gt;

&lt;h2 id=&quot;limitations&quot;&gt;Limitations&lt;/h2&gt;

&lt;p&gt;Personally I consider my Manager README as an additional tool I can use to lead my team. It’s just like one on ones, performance reviews, staff meetings and so on. Like any tool, it can’t do everything, has its limitations and can produce more harm than good when used poorly. For instance 1:1s are often considered a must have, but if you only use them to get a status report, you are not really building relationships.&lt;/p&gt;

&lt;p&gt;First, writting this document is not an alternative to actually talking and listening to your people. It can speed up some things, but it shouldn’t replace being there for each individual in your team and act in an reliable manner day after day. Writing “I am available for the team” is a good start, but actually being available is what you need to do.&lt;/p&gt;

&lt;p&gt;Another issue is that being vocal your issues is not an excuse to avoid working on self improvement, and does not absolve you of any bad behavior. Just because you let people know you would misbehave doesn’t make it ok. It’s also worth noting that as a manager, you must assume that the power dynamic will make it that people will have trouble calling you out when you do it.&lt;/p&gt;

&lt;p&gt;On the content side, I think it’s a given no one really know themselves perfectly, me included. Because of this fact, the README will have flaws and points that are just not true. While this is acurrate, the document has to only one piece of the working relationship between the manager and their reports. As trust builds during the years spent working together, the people in the team should be able to challenge the manager more and bring the document closer and closer to reality. This, of course, requires the manager to be open to criticism and have a willingness to improve themselves.&lt;/p&gt;

&lt;h2 id=&quot;how-i-wrote-mine&quot;&gt;How I Wrote Mine&lt;/h2&gt;

&lt;p&gt;To start, I decided to make something that is greatly applicable to my current job, but which can still be read and and make sense to someone outside of my company. Some parts, including the work-from-home policy and certain tools, are specific to my company, but I think the README still gives the general intent.&lt;/p&gt;

&lt;p&gt;Then I tried to strike a balance between theoretical ideas, like the qualities I value, and really practical things such as the best way to reach me.&lt;/p&gt;

&lt;p&gt;Once I was done with the first draft, I sent it to a few people who had worked with me for a while to get their opinion, and changed a couple of things based on their feedback.&lt;/p&gt;

&lt;p&gt;Finally, I shared it with my direct reports and some other managers who were curious. Now, I only update the content every couple of months, depending on what I’ve learned, the feedback I get and how my view on the points in question evolves.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Add Text Over an Image with Ruby</title>
     <link href="https://marcgg.com/blog/2020/04/11/add-text-image-rmagick-imagemagick/"/>
     <updated>2020-04-11T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2020/04/11/add-text-image-rmagick-imagemagick</id>
     <content type="html">
       &lt;p&gt;If you want to programatically add a text to an image with Ruby, using &lt;a href=&quot;https://github.com/rmagick/rmagick&quot;&gt;RMagick&lt;/a&gt; is a simple and quick way to get it done. There is nothing new here, and there are a few articles explaining how to do it already. However when I had to get it to work it for a side project, I ran into some minor issues with the code already published, so I figured I’d share what I did myself!&lt;/p&gt;

&lt;h2 id=&quot;installing-rmagick-and-imagemagick&quot;&gt;Installing RMagick and ImageMagick&lt;/h2&gt;

&lt;p&gt;RMagick uses &lt;a href=&quot;https://imagemagick.org/index.php&quot;&gt;ImageMagick&lt;/a&gt; behind the scene, so you’ll need to install it.  When I did it I had some issues with the installation steps provided, especially when it came to generating jpg on MacOS. Using this command instead fixed the problems:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install imagemagick --build-from-source
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then you can install &lt;a href=&quot;https://bundler.io/&quot;&gt;bundler&lt;/a&gt; and setup your &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https://rubygems.org'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rmagick'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;One the file is created, you can run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install bundler
bundle install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;…and you should be all set.&lt;/p&gt;

&lt;h2 id=&quot;coding&quot;&gt;Coding&lt;/h2&gt;

&lt;p&gt;In the same folder, add your source image &lt;code class=&quot;highlighter-rouge&quot;&gt;background.jpg&lt;/code&gt; and a new Ruby file &lt;code class=&quot;highlighter-rouge&quot;&gt;image_generation.rb&lt;/code&gt;. Now to write the actual code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;RMagick&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Magick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ImageList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;background.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Magick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;annotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gravity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Magick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CenterGravity&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Text positioning&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pointsize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Font size&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#1c1c1c&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Font color&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;font&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/absolutepath/Font.ttf&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Font file; needs to be absolute&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jpeg&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;generated.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Destination image&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To run the script, simply go &lt;code class=&quot;highlighter-rouge&quot;&gt;ruby image_generation.rb &lt;/code&gt; and that should generate a new image, &lt;code class=&quot;highlighter-rouge&quot;&gt;generated.jpg&lt;/code&gt;!&lt;/p&gt;

&lt;h3 id=&quot;going-further&quot;&gt;Going Further&lt;/h3&gt;

&lt;p&gt;You can change position by adjusting the &lt;a href=&quot;https://rmagick.github.io/draw.html#gravity&quot;&gt;gravity&lt;/a&gt; and the positioning passed to the &lt;code class=&quot;highlighter-rouge&quot;&gt;annotate&lt;/code&gt; method. All the documentation is &lt;a href=&quot;https://rmagick.github.io/draw.html#annotate&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/gravity.gif&quot; alt=&quot;Gravity with ImageMagick&quot; style=&quot;padding: 5px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;I tried to keep the example really simple and copy/pastable. If you want to change the text formatting, there are a lot of options available. Just know that in a lot of cases, if you make a mistake, the changes won’t be applied but &lt;strong&gt;you will not get any error message&lt;/strong&gt;. This is especially confusing when you are trying to do some really minor alterations.&lt;/p&gt;

&lt;p&gt;You can find the different possibilities &lt;a href=&quot;https://rmagick.github.io/draw.html&quot;&gt;in the documentation&lt;/a&gt; and play around to get something that looks the way you want.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Misuse of update/update! in Ruby on Rails</title>
     <link href="https://marcgg.com/blog/2020/04/08/rails-update-bang/"/>
     <updated>2020-04-08T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2020/04/08/rails-update-bang</id>
     <content type="html">
       &lt;p&gt;One of my pet peeves when reviewing Ruby on Rails code is the usage of &lt;a href=&quot;https://api.rubyonrails.org/classes/ActiveRecord/Persistence.html#method-i-update&quot;&gt;update&lt;/a&gt; and &lt;a href=&quot;https://api.rubyonrails.org/classes/ActiveRecord/Persistence.html#method-i-update-21&quot;&gt;update!&lt;/a&gt;, or any &lt;code class=&quot;highlighter-rouge&quot;&gt;ActiveRecord::Persistence&lt;/code&gt; method and it’s bang (&lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt;) counterpart.&lt;/p&gt;

&lt;h2 id=&quot;typical-usage&quot;&gt;Typical Usage&lt;/h2&gt;

&lt;p&gt;As a reminder, &lt;code class=&quot;highlighter-rouge&quot;&gt;update&lt;/code&gt; will return false if a validation error occurs and &lt;code class=&quot;highlighter-rouge&quot;&gt;update!&lt;/code&gt; will raise instead. The way it’s normally used is as follow:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;display_success&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;react_to_problem&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# or&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# raises is invalid&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;usage-to-avoid&quot;&gt;Usage to Avoid&lt;/h2&gt;

&lt;p&gt;On the other hand, here is something to avoid:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;some_action&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;some_other_action&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;silent-failure&quot;&gt;Silent Failure&lt;/h3&gt;

&lt;p&gt;If this action succeeds, it’s all good. However &lt;strong&gt;if it fails and not save the record, it will do it silently&lt;/strong&gt; and could cause some disastrous side effects down the line. Silent failures are the worst kind of failures as it makes debugging a nightmare since the problem could be anywhere in the code.&lt;/p&gt;

&lt;p&gt;Of course there are situations where it is acceptable. For instance you have a corrupted database and only want to update the valid records in a script… then yes, under these circumstances you don’t really care that the invalid record is not updated. However I would argue that this is quite an implicit behaviour and your code won’t &lt;a href=&quot;/blog/2018/05/15/expressing-intent-comments-ruby/&quot;&gt;express your intent&lt;/a&gt; unless you add comments, so why not spend the extra couple of minutes to graciously handle it?&lt;/p&gt;

&lt;p&gt;Finally, even if there are some cases where this wouldn’t cause major issues, there is still an overwhelming number of situations where you’ll want to know that something didn’t happen as expected.&lt;/p&gt;

&lt;h3 id=&quot;how-to-fix&quot;&gt;How To Fix&lt;/h3&gt;

&lt;p&gt;This is why you should either raise using &lt;code class=&quot;highlighter-rouge&quot;&gt;update!&lt;/code&gt; or react when the persistence method returns &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;, like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# or&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;react_to_failure&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Could be as simple as logging what happened&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;using-a-linter&quot;&gt;Using a Linter&lt;/h3&gt;

&lt;p&gt;If you agree and don’t want to have this discussion on every PR, you can use &lt;a href=&quot;https://github.com/rubocop-hq/rubocop&quot;&gt;Rubocop&lt;/a&gt;’s linting. Simply add the &lt;a href=&quot;https://github.com/rubocop-hq/rubocop-rails&quot;&gt;Rails extension&lt;/a&gt; and use the &lt;code class=&quot;highlighter-rouge&quot;&gt;SaveBang&lt;/code&gt; cop by setting the following configuration:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Rails/SaveBang:
  Enabled: true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Engineering Team Meeting: Format &amp; Topic Ideas</title>
     <link href="https://marcgg.com/blog/2020/04/06/engineering-team-meeting-ideas/"/>
     <updated>2020-04-06T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2020/04/06/engineering-team-meeting-ideas</id>
     <content type="html">
       &lt;p&gt;When I started managing the engineering department at my company, I wanted to have an interesting team meeting involving the entire team. My objective at the time was to set up a meeting that people would look forward to, going beyond simple team &amp;amp; company updates. It’s now been a few years since the first, and while not all presentations are a complete success, I’m pretty happy with the way it turned out.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/engineering_presentation_examples.jpg&quot; alt=&quot;A few slides from Getaround/Drivy engineering meetings&quot; style=&quot;padding: 5px; width:90%;&quot; /&gt;&lt;br /&gt;&lt;em&gt;A few slides from recent engineering meetings in my company (&lt;a href=&quot;/assets/blog/engineering_presentation_examples.jpg&quot; target=&quot;_blank&quot;&gt;large&lt;/a&gt;)&lt;/em&gt;&lt;/div&gt;

&lt;p&gt;If you don’t already have a similar meeting and want to give this format a try in your team, here is how I’ve done it! Of course it will important to adapt to your team and company, but this could help you get started.&lt;/p&gt;

&lt;h2 id=&quot;format&quot;&gt;Format&lt;/h2&gt;

&lt;p&gt;For duration, I went with 1 hour every two weeks. If we didn’t have daily standup meetings, I would have gone with something weekly instead. The meeting itself is held in the office, but is friendly to people working from home that can follow the presentation, present themselves or ask questions.&lt;/p&gt;

&lt;p&gt;Laptops are not allowed except one person monitoring the production. If someone has something critical to do that absolutely can’t wait, I usually prefer that they stay at their desk to do it in good conditions instead of going to the presentation.&lt;/p&gt;

&lt;p&gt;It’s also worth noting that I always keep a buffer after the meeting so that I can be available for followup discussions. It’s also great to have quick feedback on what was presented.&lt;/p&gt;

&lt;h3 id=&quot;agenda&quot;&gt;Agenda&lt;/h3&gt;

&lt;p&gt;The agenda is almost always as follow:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I talk about whatever is relevant currently (10-20 minutes depending on the context)&lt;/li&gt;
  &lt;li&gt;2 technical leads present the progress made in their respective fields (5 minutes each)&lt;/li&gt;
  &lt;li&gt;We see a few presentations from members of the team (5 to 20 minutes each), trying to alternate domains to not have 3 talks about backend development for instance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When the team was smaller, we would also do quick brainstorms and discussions about engineering or organisational topics. However, as we grew, it quickly became messy and unproductive, so we dropped this part.&lt;/p&gt;

&lt;h3 id=&quot;evolution--variations&quot;&gt;Evolution &amp;amp; Variations&lt;/h3&gt;

&lt;p&gt;Every now and then, I send out surveys to ask people their feedback about the format itself. Based on this I might change something or try new ideas. A recent evolution was to start recording the meeting and share it to people who missed it, and I still need to make even more improvements on the microphone setup.&lt;/p&gt;

&lt;p&gt;I also try something different sometimes, like a brainstorming or a Q&amp;amp;A session if a topic warranted it.&lt;/p&gt;

&lt;h2 id=&quot;content-ideas&quot;&gt;Content Ideas&lt;/h2&gt;

&lt;h3 id=&quot;updates&quot;&gt;Updates&lt;/h3&gt;

&lt;p&gt;For my section, I tend to talk about the following topics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Company economics, performances &amp;amp; numbers&lt;/li&gt;
  &lt;li&gt;Recruitment pipeline, new positions &amp;amp; new hires&lt;/li&gt;
  &lt;li&gt;Competitors &amp;amp; industry news&lt;/li&gt;
  &lt;li&gt;Employee survey answers &amp;amp; takeaways&lt;/li&gt;
  &lt;li&gt;Evolution of the team’s rituals&lt;/li&gt;
  &lt;li&gt;Various presentations around the company mission&lt;/li&gt;
  &lt;li&gt;A quick note on what I’ve been up to that is worth sharing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If I want to dig deeper in other topics, I would set it up as any other presentation in the third section of the meeting.&lt;/p&gt;

&lt;h3 id=&quot;tech-lead-updates&quot;&gt;Tech Lead Updates&lt;/h3&gt;

&lt;p&gt;Each main engineering domains, data engineering, backend, frontend, mobile  and SRE, are each lead by one person. Each week, two of them present their purely technical roadmap progressing in parallel of the main product roadmap. Here, we are not focused on features being shipped, the product evolutions being shared during another meeting.&lt;/p&gt;

&lt;p&gt;At this point you might have noted that I don’t split the team by technology. This is because I really like the idea of having people listening to presentations about topics they are not experts on. For instance it’s interesting to see mobile engineers learn about SRE topics, or React developers look at Ruby testing best practices. There’s a lot to be learned by expanding one’s field of view!&lt;/p&gt;

&lt;h3 id=&quot;presentations&quot;&gt;Presentations&lt;/h3&gt;

&lt;p&gt;The presentations are a great moment to showcase something interesting happening in the team, the company or the technology space.&lt;/p&gt;

&lt;p&gt;I think it’s important to know what’s happening day to day and make sure that everybody uses the best practices, so there’s a lot of that. However it’s also necessary to zoom out and look elsewhere for inspiration. For this reason, I try to mix topics that are really practical with some that are more long term and don’t necessarily have a concrete application in the company.&lt;/p&gt;

&lt;h4 id=&quot;day-to-day&quot;&gt;Day To Day&lt;/h4&gt;

&lt;p&gt;Topics that can have an impact on the day to day:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How a specific feature was built, including the various tradeoffs that were made along the way. It’s also interesting to dig into how the team followed up on a specific feature, the data gathered and how we could do better next time.&lt;/li&gt;
  &lt;li&gt;Updates from other departments or a deep dive into an interesting project they completed. If possible it’s nice to get a guest from this department to be able to answer followup questions.&lt;/li&gt;
  &lt;li&gt;Reminders of best practices around topics like security, data privacy or performance.&lt;/li&gt;
  &lt;li&gt;How to develop, test and debug on a specific platform, showcasing the tools available.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/incident-management/postmortem/blameless&quot;&gt;Post mortem&lt;/a&gt; presentation after a significant production issue, including the timeline and what happened, the impact and what we are going to do to avoid this moving forward.&lt;/li&gt;
  &lt;li&gt;How we integrated with a partner or a vendor, and the new capabilities it brings. It’s good to also present the various tradeoffs made, limitations of the newly built integration.&lt;/li&gt;
  &lt;li&gt;An interesting refactoring, coding trick or development practice that the team could adopt.&lt;/li&gt;
  &lt;li&gt;Explanations of a new piece of software, tooling or infrastructure that can be used by the team. This usually goes hand in hand with a reference to a new piece of documentation or a followup email summing it up.&lt;/li&gt;
  &lt;li&gt;Evolutions of technologies we already use and possible sunsetting / deprecation of others.&lt;/li&gt;
  &lt;li&gt;In depth presentation of structural decisions, like the testing strategy or general deployment approach.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;longer-term&quot;&gt;Longer Term&lt;/h4&gt;

&lt;p&gt;Topics aiming at looking beyond what we are doing every day, but could become relevant at some point:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Digging into a new technology, language or open source library we could use eventually.&lt;/li&gt;
  &lt;li&gt;Insights gained from brainstormings &amp;amp; long term thinking from people inside the team, or from other departments.&lt;/li&gt;
  &lt;li&gt;In depth look at some methodology like TDD, user research, zero downtime releases… this can be something we already do, but it’s always good to repeat the reason we’re doing it while thinking about what we could improve.&lt;/li&gt;
  &lt;li&gt;Deep dive into a specific part of the technical stack or a given tool. For instance how to really leverage Git or how do we use Terraform to manage access rights.&lt;/li&gt;
  &lt;li&gt;Feedback from people who went to a conference, ideally getting people to watch videos of the talks that happened there.&lt;/li&gt;
  &lt;li&gt;External speakers presenting an interesting thing their company does. This one is harder to set up because of schedule constraints, but when it’s possible to do it’s great.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;In my opinion the best way to get started is to just do it. No need to plan elaborate setups or perfectly designed slide decks. Just do it and let the format grow organically by listening to feedback and trying variations until you find something that works for you and your team.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Podcast Episodes to Listen to During Lockdown</title>
     <link href="https://marcgg.com/blog/2020/03/30/podcasts-episodes-for-quarantine/"/>
     <updated>2020-03-30T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2020/03/30/podcasts-episodes-for-quarantine</id>
     <content type="html">
       &lt;p&gt;This quarantine period is a good time to get into podcasts. It’s a good way to listen to something interesting while staying active around the house, not glued in front of a screen.&lt;/p&gt;

&lt;p&gt;However when getting into a new podcast, it’s hard to know where to start. Not all episodes are equally good, and listening to the latest one is usually not the best way to get into it. So instead of recommending an entire podcast, I’ll recommend specific episodes that I enjoyed.&lt;/p&gt;

&lt;h2 id=&quot;science-design--technology&quot;&gt;Science, Design &amp;amp; Technology…&lt;/h2&gt;

&lt;p&gt;99% Invisible is a podcast about the small details of design and architecture. One episode I like is talking about the importance of concrete and called &lt;a href=&quot;https://99percentinvisible.org/episode/built-on-sand/&quot;&gt;Built on Sand&lt;/a&gt;. Another one is &lt;a href=&quot;https://99percentinvisible.org/episode/children-of-the-magenta-automation-paradox-pt-1/&quot;&gt;Children of the Magenta&lt;/a&gt; and talks about how a plane crashed because the pilots got so used to have an automated system that they couldn’t react when it failed.&lt;/p&gt;

&lt;p&gt;Radiolab has a lot of interesting episodes with great production quality, but if you don’t know about CRISPR you can have a listen at &lt;a href=&quot;https://www.wnycstudios.org/podcasts/radiolab/articles/antibodies-part-1-crispr&quot;&gt;their take on the matter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Recode-Decode can be a hit or miss for me, but it’s clear that there are some great interviews like &lt;a href=&quot;https://www.stitcher.com/podcast/vox/recode-decode/e/42997290?autoplay=true&quot;&gt;Ash Carter, United States Secretary of Defense&lt;/a&gt; or &lt;a href=&quot;https://www.stitcher.com/podcast/vox/recode-decode/e/60996574?autoplay=true&quot;&gt;Alex Stamos, the former Chief Security Officer at Facebook&lt;/a&gt;. There is also the discussion with &lt;a href=&quot;https://www.vox.com/recode/2019/5/22/18634612/anand-giridharadas-billionaires-philanthropy-zuckerberg-bezos-kara-swisher-decode-podcast-interview&quot;&gt;Anand Giridharadas&lt;/a&gt; about his interesting take on billionaire philanthropy.&lt;/p&gt;

&lt;h2 id=&quot;society-culture-history&quot;&gt;Society, Culture, History…&lt;/h2&gt;

&lt;p&gt;This American Life is a great podcast that most people know, but the quality can vary. My two all time favourites are &lt;a href=&quot;https://www.thisamericanlife.org/388/rest-stop&quot;&gt;Rest Stop&lt;/a&gt;, where nine reporters spend two full days at a New York State Thruway, and &lt;a href=&quot;https://www.thisamericanlife.org/513/129-cars&quot;&gt;129 Cars&lt;/a&gt; where they spend a month in a car dealership.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://stownpodcast.org/&quot;&gt;S Town&lt;/a&gt;, starting at &lt;a href=&quot;https://stownpodcast.org/chapter/1&quot;&gt;chapter one&lt;/a&gt;. This one is a strange documentary about a man in a small town in Alabama and a possible murder.&lt;/p&gt;

&lt;p&gt;If you’re into really long form podcasts and want a different take on history, then maybe take a look at Hardcore History. I’d recommend &lt;a href=&quot;https://www.dancarlin.com/product/hardcore-history-wrath-of-the-khans-series/&quot;&gt;the one about Gengis Khan&lt;/a&gt; or &lt;a href=&quot;https://www.dancarlin.com/product/hardcore-history-50-blueprint-for-armageddon-i/&quot;&gt;Blueprints for Armageddon&lt;/a&gt; talking about World War I.&lt;/p&gt;

&lt;p&gt;I don’t always like Joe Rogan episodes, but &lt;a href=&quot;https://www.youtube.com/watch?v=PNocQzhPyac&quot;&gt;this interview of Glenn Villeneuve&lt;/a&gt; who lived alone by hunting and fishing in Alaska was really interesting.&lt;/p&gt;

&lt;p&gt;More Perfect is a podcast about the US legal system, which is fascinating for a European like me who didn’t know a thing about it. All episodes have something interesting, but I’ll recommend &lt;a href=&quot;https://www.wnycstudios.org/podcasts/radiolab/articles/radiolab-presents-more-perfect-gun-show&quot;&gt;The Gun Show&lt;/a&gt; focused on the second amendment.&lt;/p&gt;

&lt;p&gt;🇫🇷 In French I’d recommend the episode of &lt;a href=&quot;https://soundcloud.com/nouvelles-ecoutes/la-poudre-episode-38-anne-hidalgo&quot;&gt;La Poudre with Anne Hidalgo&lt;/a&gt; which is a great overview of her career. I also like the episode of &lt;a href=&quot;https://louiemedia.com/emotions/tag/syndrome+de+l%27imposteur&quot;&gt;Émotions about imposter syndrome&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;management-entrepreneurship&quot;&gt;Management, Entrepreneurship…&lt;/h2&gt;

&lt;p&gt;If you’re into management techniques, I generally recommend listening to Manager Tools. To give you a sense of what they do, you can listen to &lt;a href=&quot;https://www.manager-tools.com/2016/09/no-second-emails&quot;&gt;No Second Emails&lt;/a&gt; or &lt;a href=&quot;https://www.manager-tools.com/2005/07/the-single-most-effective-management-tool-part-1&quot;&gt;their episode about one on ones&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;How I Built This is a podcast focused on the interview of an entrepreneur. I’d recommend listening to the episodes about &lt;a href=&quot;https://www.stitcher.com/podcast/national-public-radio/how-i-built-this/e/patagonia-yvon-chouinard-48508362&quot;&gt;Patagonia&lt;/a&gt; and &lt;a href=&quot;https://www.stitcher.com/podcast/how-i-built-this/e/51626348&quot;&gt;Starbucks&lt;/a&gt;. The one about &lt;a href=&quot;https://www.stitcher.com/podcast/national-public-radio/how-i-built-this/e/compaq-computers-rod-canion-50232383&quot;&gt;Compaq&lt;/a&gt; is also worth a listen.&lt;/p&gt;

&lt;p&gt;I’m not a particular fan of this podcast, but I liked &lt;a href=&quot;https://peterattiamd.com/jasonfried/&quot;&gt;this interview with Jason Fried&lt;/a&gt; on The Drive where he talks about his view on success.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Process For Recruiting Software Engineers</title>
     <link href="https://marcgg.com/blog/2020/03/23/recruitment-interviews-startup/"/>
     <updated>2020-03-23T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2020/03/23/recruitment-interviews-startup</id>
     <content type="html">
       &lt;p&gt;Recruiting is one of the most important task a team leader can have. A bad hire can destroy the dynamic of a good team, and a great hire can multiply the everyone’s velocityl.&lt;/p&gt;

&lt;p&gt;I’ve tried a lot of ideas after years of recruiting software engineers, first as a technical interviewer, then as a hiring manager and finally as the lead of the entire engineering department. In this article I won’t give you a process that works out of the box, but instead a few steps to setup one for your team.&lt;/p&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting Started&lt;/h2&gt;

&lt;h3 id=&quot;when-to-add-a-process&quot;&gt;When to Add a Process&lt;/h3&gt;

&lt;p&gt;Some people do not believe in spending time setting up a clear recruitment process, preferring going with their instinct. I don’t disagree for some cases. For instance this makes total sense when you are recruiting a couple of people for a small structure.&lt;/p&gt;

&lt;p&gt;However, if you are recruiting at a larger scale, you will quickly see the limits of this approach. The person with the “instinct” becomes a massive bottleneck, slowing down everything. The rest of the team is unable to efficiently participate and gets frustrated. Finally the candidates can feel the issue and the conversion rate goes down.&lt;/p&gt;

&lt;p&gt;I’d say that, if you hire more than 5 people a year, it’s worth investing into a simple process.&lt;/p&gt;

&lt;h3 id=&quot;objectives-of-having-a-process&quot;&gt;Objectives of Having A Process&lt;/h3&gt;

&lt;p&gt;Defining a process helps reaching certain objectives. Here are the ones I’ve set for myself.&lt;/p&gt;

&lt;h4 id=&quot;impacting-the-candidate&quot;&gt;Impacting the Candidate&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Clear process and expectations&lt;/strong&gt;. A candidate should know what they are getting into.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt; Pleasant experience &lt;/strong&gt; even if this doesn’t end with a hire. Ideally someone who isn’t hired refers a friend or won’t hesitate to apply again after a year or two.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Fast turnaround&lt;/strong&gt;. The recruitment process is stressful, there is no need to make people wait for answers on top of this.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Feedbacks during the process&lt;/strong&gt;, both ways, to avoid disappointments. If it’s going poorly for the candidate, the recruiter should know about it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;impacting-the-company&quot;&gt;Impacting the Company&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;More hires at the expected quality&lt;/strong&gt;, obviously!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Better predictability&lt;/strong&gt;. It is useful to know what can be the time and energy required to hire someone.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pleasant interviewer experience&lt;/strong&gt;. We need to keep in mind that a lot of people involved in the process are usually not recruiters by trade, and therefore we have to make it easier on them.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Improve employer brand&lt;/strong&gt;, to ease future hires.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;testing-the-candidate&quot;&gt;Testing The Candidate&lt;/h2&gt;

&lt;h3 id=&quot;figuring-out-whats-important&quot;&gt;Figuring Out What’s Important&lt;/h3&gt;

&lt;p&gt;Before setting up your applicant tracking system or defining your recruitment process, the most important thing is to know what kind of person you want to hire. If you don’t, you’ll end up planning the wrong interviews, checking the wrong skills and in the end wasting everybody’s time or making a wrong hire.&lt;/p&gt;

&lt;p&gt;To get there, make a clear list of skills you want to check and the kind of person you think would fit in your company/team. Then use the interviewing process to check against this.&lt;/p&gt;

&lt;p&gt;If you have it, it’s great to be able to leverage things like company culture documents or team objectives. If you don’t, consider setting these up before starting to hire.&lt;/p&gt;

&lt;h3 id=&quot;recruitment-funnel&quot;&gt;Recruitment Funnel&lt;/h3&gt;

&lt;p&gt;Over the past few years I’ve tried a lot of different processes,   and the one thing that works is having a real funnel with objectives for each step.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/hiring-steps.jpg&quot; alt=&quot;Recruitment funnel&quot; style=&quot;padding: 5px; width: 600px&quot; /&gt;&lt;/div&gt;

&lt;p&gt;The exact steps can change, and there is no one optimal setup.&lt;/p&gt;

&lt;h4 id=&quot;defining-the-steps&quot;&gt;Defining The Steps&lt;/h4&gt;

&lt;p&gt;There are a lot of things that can be done, but to illustrate this, here are a few example steps that I’ve used or seen companies used:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Screening call&lt;/li&gt;
  &lt;li&gt;Take home assignment&lt;/li&gt;
  &lt;li&gt;On site pairing&lt;/li&gt;
  &lt;li&gt;Lunch with the team&lt;/li&gt;
  &lt;li&gt;Meet your future manager&lt;/li&gt;
  &lt;li&gt;Technical interview&lt;/li&gt;
  &lt;li&gt;Fit interview&lt;/li&gt;
  &lt;li&gt;Reference check&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You then need to order them, define the time spent on each and so on.&lt;/p&gt;

&lt;h4 id=&quot;setting-objectives-for-each-step&quot;&gt;Setting Objectives For Each Step&lt;/h4&gt;

&lt;p&gt;Once you have decided on the various steps, you need to decide of the objective of each step. This is crucial, because in order to be effective you have to make sure you did test what you were planning on testing.&lt;/p&gt;

&lt;p&gt;What you really don’t want is this kind of conversation:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;Hiring Manager:&lt;/span&gt; So, how did the technical interview go with the candidate?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;Interviewer:&lt;/span&gt; It went great! I’ve given the recommendation to hire.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;HM:&lt;/span&gt; Great, we need strong developers in the team to tackle project XYZ.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;Int:&lt;/span&gt; Hm… I don’t know about that. We couldn’t really get to the coding part of the interview.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;HM:&lt;/span&gt; What do you mean?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;Int:&lt;/span&gt; The candidate didn’t really know the language we use here, so instead we chatted a bit about the company and our current projects. They seem really interested in joining and have a great attitude!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here the interviewer didn’t have clear objectives for the technical interview. This step should be focused on figuring out on determining the candidate’s technical skills, not assessing the motivation.&lt;/p&gt;

&lt;p&gt;When defining objectives, remember to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Keep them realistic and simple &lt;/strong&gt;. It’s very hard to get a sense of someone during a one hour interview, so don’t expect the impossible from your interviewers.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Have a set of objectives around showcasing the position &lt;/strong&gt; as well. You are assessing the candidate, but keep in mind that the candidate is also assessing the company and the position.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Share them explicitly&lt;/strong&gt;, it shouldn’t be an oral tradition.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Check that they are followed&lt;/strong&gt; by shadowing some random interviews, setting up feedback sessions , etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Personally I like to write objectives as questions to be answered. To illustrate here are a few examples of objectives to assess the candidate:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Are they motivated to join the company?&lt;/li&gt;
  &lt;li&gt;Do they show interest in solving users’ problems?&lt;/li&gt;
  &lt;li&gt;Will they work well with their manager?&lt;/li&gt;
  &lt;li&gt;Do they fit our values?&lt;/li&gt;
  &lt;li&gt;Do I see this person in my team?&lt;/li&gt;
  &lt;li&gt;Can this person fit in the organization and evolve?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;… and a few examples of objectives to showcase the company and/or position:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Provide an interesting challenge to the candidate&lt;/li&gt;
  &lt;li&gt;Give more context to the candidate&lt;/li&gt;
  &lt;li&gt;Showcase our work environment and mission&lt;/li&gt;
  &lt;li&gt;Address any remaining doubts the candidate could have&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;expectations-for-the-interviewers&quot;&gt;Expectations for the Interviewers&lt;/h2&gt;

&lt;h3 id=&quot;general-guidelines&quot;&gt;General Guidelines&lt;/h3&gt;

&lt;p&gt;There are a lot of things interviewers need to get right, and it can take years of practice to be a confident interviewer. Here are the advices I usually share to people new to it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Focus on the objective&lt;/strong&gt;, rate candidates based on it only.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Always sell the position &amp;amp; the company&lt;/strong&gt;, regardless of the candidate. It might not be a fit today, but it might be one tomorrow.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Let the candidate answer&lt;/strong&gt; and don’t be afraid of silence. It’s easy to try to fill in uncomfortable blanks in the conversation.&lt;/li&gt;
  &lt;li&gt;You need to &lt;strong&gt; be sure of your recommendation&lt;/strong&gt;, so dig deep to turn orange flags into red or green.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Contribute to improve the process&lt;/strong&gt;, and share any issues that could be addressed.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Don’t mistake enthusiasm for ability. Don’t mistake quietness for a lack of motivation.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Rate regardless of time spent&lt;/strong&gt;. If you had a 20 minutes phone call that went very well, you should give a “hire” recommendation. The hiring manager will know the context and use your feedback accordingly.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Do not share your opinion with other interviewers&lt;/strong&gt; and do not try to read other people’s feedback. Stay unbiased.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Don’t be influenced by the context&lt;/strong&gt;. Being understaffed doesn’t mean we should hire anybody&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Have a few recurring questions&lt;/strong&gt;, &lt;a href=&quot;http://marcgg.com/blog/2017/01/22/job-interview-questions/&quot;&gt;this way you’ll be able to compare candidates&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;expected-output&quot;&gt;Expected Output&lt;/h3&gt;

&lt;p&gt;Then you need to define what kind of output you want out of the interviewers, most likely a “hire/no hire” answer. I like what some applicant tracking system do, rating on a scale from 1 to 4 as it removes the ability to say “I don’t know”.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt; ✓ ✓ Strong yes &lt;/strong&gt;. This person is really great at what I’ve been tasked to test. I’m very much looking forward to work with them.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt; ✓ Yes &lt;/strong&gt;. This person is good at what I’ve been tasked to test. I’ve seen a couple of minor issues, but nothing too problematic.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt; ✗ No &lt;/strong&gt;. This person is not good enough at what I’ve tested. I’m not completely confident it would go well if we were to hire them.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt; ✗ ✗ Strong no &lt;/strong&gt;. The person is bad at what I’ve tested, or I couldn’t even test it because of major fit issues with this person. I can’t see them here.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course this is just the recommendation of the interviewers, the final call rests into either the hands of the hiring manager or some kind of hiring committee. It’s perfectly possible for someone with a couple of “no” to get hired, if the other interviews went really well.&lt;/p&gt;

&lt;p&gt;Finally I also like to ask for a paragraph or two to explain their decision.&lt;/p&gt;

&lt;h3 id=&quot;onboarding-interviewers&quot;&gt;Onboarding Interviewers&lt;/h3&gt;

&lt;p&gt;I think that interviewing should be an opt-in process. There is little value in having someone talk to candidates if they don’t want to do it.&lt;/p&gt;

&lt;p&gt;For those who want to start helping hire, here are a few things that can help get started:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Have documentation with use case examples, question templates, interviewing techniques , etc.&lt;/li&gt;
  &lt;li&gt;Spend some time briefing the person before an interview, and more time debriefing after.&lt;/li&gt;
  &lt;li&gt;Setup some shadowing sessions, where a new interviewer follows the lead of a more experienced one.&lt;/li&gt;
  &lt;li&gt;Involve recruiters in the process to help explain interviewing techniques.&lt;/li&gt;
  &lt;li&gt;Setup reverse shadowing sessions, where a new interviewer leads an interview but is watched by a well meaning more experienced interviewer.&lt;/li&gt;
  &lt;li&gt;Gather feedback from newly onboarded interviewers to improve the process.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;measuring&quot;&gt;Measuring&lt;/h2&gt;

&lt;p&gt;Like everything, it’s important to measure what you are doing. A few metrics that are interesting to follow:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Time to hire&lt;/li&gt;
  &lt;li&gt;Conversion rate (segmented by step and position)&lt;/li&gt;
  &lt;li&gt;Candidate satisfaction rate (segmented by hired/not hired)&lt;/li&gt;
  &lt;li&gt;Interviewers satisfaction rate&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Overall recruiting is hard and as for most things there is no silver bullet. However I still hope this article will help you improve your process!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>One on One Meeting Opening Lines</title>
     <link href="https://marcgg.com/blog/2019/11/30/one-on-one-openers/"/>
     <updated>2019-11-30T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2019/11/30/one-on-one-openers</id>
     <content type="html">
       &lt;p&gt;I have weekly one on ones with my direct reports. The objective is to build a good relationship and remove immediate roadblocks.&lt;/p&gt;

&lt;p&gt;The format I follow is currently 30 minutes and heavily inspired by &lt;a href=&quot;https://www.manager-tools.com/2005/07/the-single-most-effective-management-tool-part-1&quot;&gt;Manager Tools&lt;/a&gt; and &lt;a href=&quot;https://amzn.to/2Y6WW8M&quot;&gt;The Effective Manager&lt;/a&gt; book. It looks like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;10 minutes for them.&lt;/strong&gt; They can talk about whatever they’d like. If it’s important to them, it’s important to me. This can mean discussing ongoing projects, company positioning, technical areas or even personal topics.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;10 minutes for me &lt;/strong&gt; with the same idea in mind.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;10 minutes for the long term&lt;/strong&gt;, basically discussions to avoid any surprises during yearly performance reviews.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the beginning of every one on one, it’s important to have a clear way for both parties to go from chit-chat to the actual meeting. For the few years I’ve been doing it, I found that the sentence I’d use would have an impact on the type of discussions we’d end up having.&lt;/p&gt;

&lt;p&gt;That seems trivial, but since I’m having A LOT of one on ones, I’ve tried different openers to see what would work best. Here is what I’ve seen:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“What’s going on?” often leads to discussions about ongoing projects and reporting.&lt;/li&gt;
  &lt;li&gt;“How are you?” gives more personal discussions, or can result in “I’m good, what about you?” which defeats the purpose of kickstarting the conversation by giving them the lead.&lt;/li&gt;
  &lt;li&gt;“How is X going?” “Any news on Y?” are generally to be avoided because they really narrow the discussion to what I want discussed.&lt;/li&gt;
  &lt;li&gt;“What’s on your mind?” tends to have people talk about what is going on &lt;em&gt;today&lt;/em&gt;, when the discussion should be broader.&lt;/li&gt;
  &lt;li&gt;Saying nothing doesn’t usually work with most people, leading to an awkward start or a meeting that never properly “starts” - which can be fine now and then.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My favorite way to begin the conversation nowadays is &lt;strong&gt;“What do you want to talk about?”&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This reminds us that the objective of the first ten minutes is to let them speak and share what is relevant to them. When they finish speaking, I’ll often ask “is there anything else you’d like to talk about?” to make sure that we’re not skipping something important.&lt;/p&gt;

&lt;p&gt;Obviously every person is different, but it feels like having this opener makes for smoother one on ones in most cases. Of course it’s completely clear to my direct reports that I say this one sentence on purpose, but I find that more humorous than anything and people have been either neutral or joking about it so I’d say it’s fine!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>The Developer / Manager Feedback Loop Difference </title>
     <link href="https://marcgg.com/blog/2019/02/04/management-feedback-loop/"/>
     <updated>2019-02-04T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2019/02/04/management-feedback-loop</id>
     <content type="html">
       &lt;p&gt;Most software engineers turned managers I’ve met struggle with the same issue in their first weeks on the job and usually end up saying something like: “I couldn’t get any work done this week!”.  Of course everybody expects to have more meetings, move  to a &lt;a href=&quot;http://www.paulgraham.com/makersschedule.html&quot;&gt;manager schedule&lt;/a&gt;, but most are not prepared enough to the major change in feedback loop that occurs.&lt;/p&gt;

&lt;h2 id=&quot;the-developer-feedback-loop&quot;&gt;The Developer Feedback Loop&lt;/h2&gt;

&lt;p&gt;Building software can get frustrating, but it’s also very rewarding. Before a developer’s involvement there’s a bug or a feature missing… once they’re done the problem is fixed! On top of this, you get to focus on writing code most of your day and almost always have a few commits to show for it.&lt;/p&gt;

&lt;p&gt;Overall the feedback loop is quick and simple with milestones such as:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Your tests go from red to green&lt;/li&gt;
  &lt;li&gt;The project compiles&lt;/li&gt;
  &lt;li&gt;Your PR gets approved and released&lt;/li&gt;
  &lt;li&gt;A given library is succesfully updated&lt;/li&gt;
  &lt;li&gt;Performances improve in your app and you have the graphs to prove it&lt;/li&gt;
  &lt;li&gt;The number of errors reduces in a given area&lt;/li&gt;
  &lt;li&gt;You can see usage numbers for something you’ve built&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Overall development has a lot of situations where either it functions or it doesn’t, making success and failure clear. Another cool part is that your work can easily be showcased to others and you can generally say “look at what I built!”.&lt;/p&gt;

&lt;h2 id=&quot;the-manager-feedback-loop&quot;&gt;The Manager Feedback Loop&lt;/h2&gt;

&lt;p&gt;As a manager it is quite different. You are not required to build things directly, but instead empower your team to do it as well as possible.&lt;/p&gt;

&lt;p&gt;To achieve this, you might spend more time attending meetings or talking to people without any direct visible result. You will also work on very long term plans where you will notice the benefits only after months or years. You’re also not the one “actually” building the software, so it’s easy to think that you’re not &lt;em&gt;really&lt;/em&gt; being productive.&lt;/p&gt;

&lt;p&gt;It’s good to note that you’re not suddently useless, instead it’s a lot of perception change due to the fact that the feedback loop is different. It’s more subtle and on a longer time frame… and in most cases, if you do things right, no one might even notice! Instead of a couple of features in front of happy users each week, you could have to wait a year to see that Alice became more productive thanks to your guidance, or that Bob really grew into his new role as technical lead thanks to your reorganisation of the team.&lt;/p&gt;

&lt;p&gt;In this case the feedback loop is longer and harder to measure:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A person in your team improves over time faster than they would have without you&lt;/li&gt;
  &lt;li&gt;Technical choices are proven to be right year after years&lt;/li&gt;
  &lt;li&gt;People better understand the context they’re building software in, objectives are clear&lt;/li&gt;
  &lt;li&gt;The team remains productive and focused&lt;/li&gt;
  &lt;li&gt;Turnover stays low, people are generally happy&lt;/li&gt;
  &lt;li&gt;Project are delivered on time&lt;/li&gt;
  &lt;li&gt;No one is working crazy hours to reach objectives&lt;/li&gt;
  &lt;li&gt;There are not many complaints from your team&lt;/li&gt;
  &lt;li&gt;External &amp;amp; internal clients are consistently happy&lt;/li&gt;
  &lt;li&gt;There’s a general feeling of moving forward&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This isn’t a bad thing, it’s only a difference to keep in mind. In order to avoid being stressed out or depressed, new managers need to understand this concept as soon as possible so that they can focus on what matters instead dreading this feeling of unproductivity. This is &lt;a href=&quot;/blog/2017/08/22/starting-with-management/&quot;&gt;an entire new position&lt;/a&gt;, it’s normal to take a bit of time to get a good feel for it.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Regression Testing For Data</title>
     <link href="https://marcgg.com/blog/2018/10/22/regression-testing-for-data-ruby/"/>
     <updated>2018-10-22T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2018/10/22/regression-testing-for-data-ruby</id>
     <content type="html">
       &lt;p&gt;Making sure that data stays valid is not a trivial task. For simple requirements, like “this column is not null” or “this field is unique”, you of course just use the database constraints and that’s it. Same goes for type validation.&lt;/p&gt;

&lt;p&gt;However when you want to check for something more complex, like &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;any user created after June 4th in the UK should have the new terms of services accepted, unless they came through this specific ad campaign&quot;&lt;/code&gt;, then it all changes. Depending on your database you could use stored procedures, but this is often harder to write, version and maintain.&lt;/p&gt;

&lt;p&gt;You could also assume that your data will never get corrupted, and validations directly in the code can do the trick… but I think that’d be way too optimistic. Bugs happen all the time, and it’s best to plan for the worst.&lt;/p&gt;

&lt;h2 id=&quot;monitoring-to-detect-anomalies&quot;&gt;Monitoring To Detect Anomalies&lt;/h2&gt;

&lt;p&gt;Personally I like using database constraints as much as possible and be really defensive when writing any code changing data. However since no one is perfect I also like to &lt;a href=&quot;/blog/2016/07/04/monitoring-bugs/&quot;&gt;rely on monitoring to detect anomalies&lt;/a&gt;. For instance a big drop in conversion at signup could allow us to notice a bug on the signup process.&lt;/p&gt;

&lt;p&gt;This is where the &lt;a href=&quot;https://github.com/drivy/checker_jobs&quot;&gt;checker job gem&lt;/a&gt; comes in. It provides a simple DSL to express axioms about our data and be notified if they are not verified. This way you can quickly notice when something is going wrong and fix the data and the incriminated code right away.&lt;/p&gt;

&lt;h2 id=&quot;using-the-checker-jobs-gem&quot;&gt;Using The Checker Jobs Gem&lt;/h2&gt;

&lt;p&gt;To get an email if there are invalid users you would do this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;	&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserChecker&lt;/span&gt;
	  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CheckerJobs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;

	  &lt;span class=&quot;n&quot;&gt;notify&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;to: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello@marcgg.com&quot;&lt;/span&gt;

	  &lt;span class=&quot;n&quot;&gt;ensure_no&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:user_with_invalid_tos_state&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	    &lt;span class=&quot;c1&quot;&gt;# some code that returns invalid users in an array&lt;/span&gt;
	  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You then have to run this checker regularly using your favorite task scheduler solution. For instance using &lt;a href=&quot;https://github.com/mperham/sidekiq&quot;&gt;Sidekiq&lt;/a&gt; and &lt;a href=&quot;https://github.com/nickelser/zhong&quot;&gt;Zhong &lt;/a&gt;it would look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;	&lt;span class=&quot;no&quot;&gt;Zhong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;schedule&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	 &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;checkers&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	   &lt;span class=&quot;n&quot;&gt;every&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;check users&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	     &lt;span class=&quot;no&quot;&gt;Sidekiq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;enqueue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UserChecker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
	 &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you prefer another method of being notified, the gem also supports &lt;a href=&quot;https://www.bugsnag.com/&quot;&gt;Bugsnag&lt;/a&gt; and &lt;a href=&quot;https://github.com/drivy/checker_jobs/tree/master/lib/checker_jobs/notifiers&quot;&gt;is setup in a way allowing to have multiple notifiers&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;good-tradeoff-between-speed-of-development--stability&quot;&gt;Good Tradeoff Between Speed of Development &amp;amp; Stability&lt;/h2&gt;

&lt;p&gt;We’ve been using this for a while now at Drivy and it has proven very useful. It speeds up development quite a bit since it gives developers confidence that the data won’t be silently corrupted, and it allows us to fix any issue very quickly. Other options would have been too time consuming (complex stored procedures) or too brittle (no/manual checks).&lt;/p&gt;

&lt;p&gt;This is why &lt;a href=&quot;https://drivy.engineering/checker-jobs/&quot;&gt;we decided to open source it recently&lt;/a&gt;, so if you find the idea interesting, please give it a try and let us know what you think!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Committing All The Time</title>
     <link href="https://marcgg.com/blog/2018/06/11/git-commit-all-the-time/"/>
     <updated>2018-06-11T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2018/06/11/git-commit-all-the-time</id>
     <content type="html">
       &lt;p&gt;I tend to commit a lot when I’m working on a git branch. A &lt;em&gt;lot&lt;/em&gt;. I’d say every fifteen minutes on something I’ll add a new quick commit to track my progress. I started doing it a few years back as it felt like the logical extension of compulsively pressing &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd+S&lt;/code&gt; every time I made a change.&lt;/p&gt;

&lt;h2 id=&quot;why-commit-often&quot;&gt;Why Commit Often?&lt;/h2&gt;

&lt;p&gt;This approach doesn’t only fit my OCD, it also has some great advantages in my opinion:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Never lose large chunks of work&lt;/strong&gt;. Since I’m always committing and pushing, my computer could burn and I would have at worse half an hour of work only stored locally.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Easily go back in time &lt;/strong&gt;. If you’ve ever tried to &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd+Z&lt;/code&gt; yourself out of a bad spot, but couldn’t because the change spanned over multiple files, then you know the struggle. This problem simply goes away when you commit at every small milestone. Big issue with your latest changes? Just &lt;code class=&quot;highlighter-rouge&quot;&gt;git reset --hard&lt;/code&gt; and start over.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Share ongoing progress&lt;/strong&gt;. If I want to show what I’ve written recently to a colleague, I have no issue just committing and pushing to Github right away. My git history is messed up locally anyways, so who cares?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Leverage your CI to run tests&lt;/strong&gt;. If you can commit often, you can push often and run the entire test suite on your preferred CI. This is often faster than running it locally, and ensures you won’t have a surprise later in your development process.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Be able to see the various steps taken&lt;/strong&gt;. Since I’m committing every time I reach some kind of simple milestone, I get a nice history of what I’ve had to do to reach this result.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;clean-up-before-merging&quot;&gt;Clean Up Before Merging&lt;/h2&gt;

&lt;p&gt;To be quick, I don’t shy away from commit messages like &lt;code class=&quot;highlighter-rouge&quot;&gt;wip&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;fixed tests&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;fixed tests for real&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;module XYZ kinda works&lt;/code&gt;. Of course by doing so, I always end up with a terrible git history that is only relevant to me.&lt;/p&gt;

&lt;p&gt;Obviously that’s not good.&lt;/p&gt;

&lt;p&gt;My thinking here is that, as long as I’m alone on my git branch, I can do whatever I want. However, once I decide to either ask for a PR or merge back into &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;, I’ll have to clean my history into comprehensive commits following the project’s conventions. It’s really easier than you’d think, and if you’re not familiar with this I recommend reading: “&lt;a href=&quot;https://drivy.engineering/git-rebase-edit-history/&quot;&gt;Editing your git history with rebase for cleaner pull requests&lt;/a&gt;“by &lt;a href=&quot;https://twitter.com/intrepidd&quot;&gt;Adrien Siami&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have some practice it doesn’t take long, and being able to rewrite your history is valuable because we all end up typing &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -m &quot;Fix tests for real this time&quot;&lt;/code&gt; at some point.&lt;/p&gt;

&lt;h2 id=&quot;try-it-out-&quot;&gt;Try It Out :)&lt;/h2&gt;

&lt;p&gt;Overall committing a lot allows me to make sure I don’t build yourself into a corner or lose work, while forcing me to always think about how to present my git history to the world once it’s ready to be merged.&lt;/p&gt;

&lt;p&gt;If that sounds like something interesting to you, try it out and let me know!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Expressing Intent Without Comments In Ruby</title>
     <link href="https://marcgg.com/blog/2018/05/15/expressing-intent-comments-ruby/"/>
     <updated>2018-05-15T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2018/05/15/expressing-intent-comments-ruby</id>
     <content type="html">
       &lt;p&gt;There’s an endless discussion going on between programmers about the utility of comments and how to express intent in code.  Let’s push it a bit further and see a few different ways of how to clearly define that a variable is an ordered array of names. I’m focusing here on what Ruby provides, other languages have other features to deal with this question.&lt;/p&gt;

&lt;h2 id=&quot;not-using-comments&quot;&gt;(Not) Using Comments&lt;/h2&gt;

&lt;p&gt;Let’s say we’re working with an array that is supposed to be ordered.&lt;/p&gt;

&lt;p&gt;If we use a comment, it makes it very clear that there is a catch with this array.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# The array is ordered&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Alice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Bob&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Charles&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Danny&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However a comment like this is not directly related to the code: we have nothing making sure that it stays near the variable. It’s also local: if the variable is used later on, you can’t know what information the developers updating the code will have. An option is to change the variable name to something more explicit.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;ordered_names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Alice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Bob&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Charles&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Danny&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is better because you don’t even need to clarify: the code speaks for itself.&lt;/p&gt;

&lt;h2 id=&quot;going-further-adding-defensiveness&quot;&gt;Going Further, Adding Defensiveness&lt;/h2&gt;

&lt;p&gt;The problem with the approaches above is that the fact that the array is ordered is just indicative. It does express intent but we are never sure that the array is actually sorted. If we want this safety, we have the option to add a simple class doing the check for us.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;OrderedNames&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:values&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array_of_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Array not sorted&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sorted?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array_of_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array_of_names&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sorted?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each_cons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is way more verbose and in some cases it would be overkill since it costs time to write, test and maintain. However it can be a good approach if having an ordered array is very important and the code using the array is not defensive itself.&lt;/p&gt;

&lt;p&gt;Of course this is just an example for the sake of argument, and in a lot of case you can just rely on existing structures, like &lt;a href=&quot;https://ruby-doc.org/stdlib-1.9.3/libdoc/set/rdoc/SortedSet.html&quot;&gt;SortedSet&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;why-bother&quot;&gt;Why Bother?&lt;/h2&gt;

&lt;p&gt;Expressiveness in code is very important as we spend way more time reading code than writing it. A few minutes spent trying to figure out the best way to express your intent can result in days of productivity saved over the lifetime of a project. It’s then a matter of defining what &lt;a href=&quot;https://drivy.engineering/code_simplicity_reading_levels/&quot;&gt;narrative&lt;/a&gt; you want to optimise and what tools you have at your disposal to do so.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Building a Custom Monitor Stand</title>
     <link href="https://marcgg.com/blog/2018/04/03/desk-monitor-stand/"/>
     <updated>2018-04-03T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2018/04/03/desk-monitor-stand</id>
     <content type="html">
       &lt;p&gt;I’ve bought a new desk as well as a new monitor, so I’ve decided to improve my setup. The desk is a simple &lt;a href=&quot;https://www.ikea.com/us/en/catalog/products/S79046038/&quot;&gt;Ikea Hilver table&lt;/a&gt;,  but I built the monitor stand. Since I wanted to keep track of what I did, I took some pictures and I figured I could share them here… to be honest I’m not a good handyman, so I’m not sure if it’ll be useful to anyone but here you go!&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;/assets/blog/desk/main_hd.jpg&quot;&gt;&lt;img src=&quot;/assets/blog/desk/main_ld.jpg&quot; alt=&quot;Home desk with a custom monitor stand&quot; style=&quot;padding: 0px; width: 700px;&quot; /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;Note that it is heavily inspired by &lt;a href=&quot;https://ugmonk.com/2017/04/12/how-i-designed-a-super-productive-desk-setup/&quot;&gt;Jeff Sheldon&lt;/a&gt;’s stand, but I didn’t use raw wood because I felt a simple melamine white panel would look better with the bamboo desk. I also didn’t want to use the &lt;a href=&quot;https://www.ikea.com/us/en/catalog/products/60263574/&quot;&gt;Capita legs&lt;/a&gt; because they would make my monitor way too high and hurt my neck in the long run, so instead I built custom legs.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Disclaimer: This article was a nightmare to write in english, I couldn’t find proper translations for woodworking terms I only knew in French like “tasseaux”, “double filetage”, “chant thermocolant”, “niveau”… so don’t hesitate to correct me in the comments!&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-material&quot;&gt;The Material&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Melamine white panel 80cm x 25cm, 6.95€&lt;/li&gt;
  &lt;li&gt;Leftover pine wood approx. 2m, 2€&lt;/li&gt;
  &lt;li&gt;Double threaded bolts, 2.79€&lt;/li&gt;
  &lt;li&gt;Thermobonding decorative film, 5.40€&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-to-build-it&quot;&gt;How To Build It&lt;/h2&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/1n.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;I bought really simple leftover piece of pine already cut like this.  In order to build the legs I just had to cut it into 4 pieces of 5cm each - instead of 10cm for the smaller legs I found out at retailers.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/2n.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Be careful when measuring! The sad thing is that I only have this really old school saw that destroys everything in its path. It did the job, but I was happy to have a bit more wood than I actually needed.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/3n.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;The raw four legs.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/4n.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Since the saw did quite a number on the wood, some sanding was needed to smooth everything out. If the leg was too damaged but still working I saved it for the less visible back of the monitor stand.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/5n.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Testing if everything is level… success!&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/6n.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Now drilling into the legs.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/7n.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Then to add the double thread bolt.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/8n.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;There might be a better way to do it, but I used pliers to screw it to the legs.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/9n.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;There are some minor imperfections, but that’s fine since they are mostly going to be underneath the panel.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/10n.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Now to measure where to add the legs. I decided to offset them a lot from the edge of the panel. This in addition to their color really close to the bamboo should make them barely visible.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/11n.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Protip: use a piece of tape to know exactly how far to drill!&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/12n.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Screwing the legs, then testing the level again.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/12bn.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Since it’s a white panel, I wanted to use decorative film on the sides to hide the wood. The one I found was thermobonding, so I had to use an iron. To avoid damaging it, I put a piece of paper between the iron and the film.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/13n.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Then to remove the extra material with a cutter.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/14n.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;If it’s not very precise, it doesn’t feel correct.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/desk/15n.jpg&quot; alt=&quot;Building a custom monitor stand&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Looking good!&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;/assets/blog/desk/final_side_hd.jpg&quot;&gt;&lt;img src=&quot;/assets/blog/desk/final_side.jpg&quot; alt=&quot;Home desk with a custom monitor stand&quot; style=&quot;padding: 0px; width: 700px;&quot; /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;Underneath the monitor stand I can hide a &lt;a href=&quot;https://amzn.to/2IomcP7&quot;&gt;USB hub&lt;/a&gt; where I plug the mouse and keyboard so I don’t have too many wires going around, but I’ll probably get a wireless mouse and keyboard soon. On top of it I store a few things, including my &lt;a href=&quot;https://amzn.to/2H78gcU&quot;&gt;bluetooth speaker&lt;/a&gt;. I didn’t invest into bigger speakers because I mostly use &lt;a href=&quot;https://amzn.to/2InSOZe&quot;&gt;my tacky gaming headset&lt;/a&gt;. My monitor is &lt;a href=&quot;https://amzn.to/2In5iQB&quot;&gt;a simple 24’’ HP&lt;/a&gt; and on the side you can see my &lt;a href=&quot;https://amzn.to/2JcnbmE&quot;&gt;2012 Macbook Pro&lt;/a&gt; that’s still holding up very well.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Simplify Your Git Flow</title>
     <link href="https://marcgg.com/blog/2018/04/02/simplify-git-flow/"/>
     <updated>2018-04-02T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2018/04/02/simplify-git-flow</id>
     <content type="html">
       &lt;p&gt;When consulting, I often see so small teams struggle with git because they seem to expect that a good flow has to be a complicated. Usually this is because they saw &lt;a href=&quot;/assets/blog/git-flow-complex.png&quot;&gt;this git-flow schema&lt;/a&gt; at some point when researching various solutions and thought they needed all of this to be able to ship in good conditions.&lt;/p&gt;

&lt;p&gt;I’d like to argue in this article that &lt;strong&gt;most small agile teams releasing a web app can be effective with only a very simple git flow if they invested in automated testing&lt;/strong&gt;. I’ve implemented a simpler approach to git in many small teams and it has always made things better. Developers are more empowered because they can easily use the flow and there is no need for additional tooling.&lt;/p&gt;

&lt;h2 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h2&gt;

&lt;p&gt;Of course some organisations do need something like git-flow, it has its merits. So please keep in mind that, if you are in one of these situations, you won’t find my article helpful:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Your current flow works for you.&lt;/li&gt;
  &lt;li&gt;You are not building a web application.&lt;/li&gt;
  &lt;li&gt;You are in a larger development team with a dedicated QA team.&lt;/li&gt;
  &lt;li&gt;You can’t ship to production a few times a week because of reasons outside of the development team’s control.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s also worth saying that a better git flow will not fix everything. Please invest in automated tests, pull requests, &lt;a href=&quot;/blog/2016/07/04/monitoring-bugs/&quot;&gt;monitoring&lt;/a&gt;, code quality. Learn to &lt;a href=&quot;https://drivy.engineering/best-practices-for-large-features/&quot;&gt;deal with large features&lt;/a&gt;, &lt;a href=&quot;/blog/2018/03/20/splitting-releases/&quot;&gt;ship smaller things&lt;/a&gt; and aim at &lt;a href=&quot;https://drivy.engineering/continuous-integration/&quot;&gt;continuous delivery&lt;/a&gt;. It will most likely help in the long run.&lt;/p&gt;

&lt;h2 id=&quot;proposed-git-flow&quot;&gt;Proposed Git Flow&lt;/h2&gt;

&lt;p&gt;I &lt;a href=&quot;/blog/2016/02/22/git-flow-heroku-pipelines/&quot;&gt;already wrote about this&lt;/a&gt;, but here is an even more simplified version, since even my first version looked a bit complicated to some.&lt;/p&gt;

&lt;h3 id=&quot;releasing&quot;&gt;Releasing&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The latest version of &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; is always deployed to a staging environment.&lt;/li&gt;
  &lt;li&gt;When coding, use feature branches. Only merge them on &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; when they are ready to be deployed. Don’t leave too much code waiting on branches.&lt;/li&gt;
  &lt;li&gt;If you can deploy feature branches on a new staging environment to test them, perfect! However you can probably get by with just the one staging.&lt;/li&gt;
  &lt;li&gt;Don’t stay too long on a feature branch, or at least rebase often. Squash your commits into something that makes sense to your teammates. Rebasing is easier than it seems, give it a try!&lt;/li&gt;
  &lt;li&gt;When you release to production, tag the latest commit and promote staging to production.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;hotfixing&quot;&gt;Hotfixing&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;If you need to hotfix, create a branch from the latest tagged version and release this. You don’t need to have an always deployable &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Don’t forget to merge your hotfix back into master.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;more-details&quot;&gt;More Details&lt;/h3&gt;

&lt;p&gt;If you need more details to be convinced, you can take a look at my previous article: “&lt;a href=&quot;/blog/2016/02/22/git-flow-heroku-pipelines/&quot;&gt;Simple Git Flow With Heroku Pipelines&lt;/a&gt;”.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/git-flow-drivy.jpg&quot; alt=&quot;Proposed git flow example&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;br /&gt;&lt;em&gt;Extract from the article&lt;/em&gt;&lt;/div&gt;

&lt;h2 id=&quot;frequently-asked-questions&quot;&gt;Frequently Asked Questions&lt;/h2&gt;

&lt;h3 id=&quot;doesnt-master-always-needs-to-be-deployable&quot;&gt;Doesn’t master always needs to be deployable?&lt;/h3&gt;

&lt;p&gt;It’s better if it is, but really you can get by without it. You can perfectly hotfix by using tags, thus removing the need for a &lt;code class=&quot;highlighter-rouge&quot;&gt;develop&lt;/code&gt; branch.&lt;/p&gt;

&lt;h3 id=&quot;should-i-use-merge-commits&quot;&gt;Should I use merge commits?&lt;/h3&gt;

&lt;p&gt;I don’t think we need for a strong process here. It’s basically up to you and your team to decide what you prefer in term git history readability. Personally I use merge commits if a branch has multiple commits while trying to have short lived branches with only one commit.&lt;/p&gt;

&lt;h3 id=&quot;what-version-scheme-should-i-use&quot;&gt;What version scheme should I use?&lt;/h3&gt;

&lt;p&gt;If your version number is only used by your small team, it doesn’t really matter, use what makes sense to you. If it’s used by more people, I’d recommend &lt;a href=&quot;https://semver.org/&quot;&gt;SEMVER&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;rebasing-is-hard-wont-it-mess-up-my-branches&quot;&gt;Rebasing is hard, won’t it mess up my branches?&lt;/h3&gt;

&lt;p&gt;It seems complicated at first, but after a few times you’ll get used to it and see its benefits. Overall it’s quite simple and there are tons of great tutorials out there.&lt;/p&gt;

&lt;h3 id=&quot;i-can-only-test-when-deploying-to-staging-how-can-i-follow-this-flow&quot;&gt;I can only test when deploying to staging, how can I follow this flow?&lt;/h3&gt;

&lt;p&gt;If this is the case and you can’t easily spin a new staging machine for each feature branch, then this flow isn’t for you just yet. I would advise you to invest in ways to test locally and write automated tests as well.&lt;/p&gt;

&lt;h3 id=&quot;what-if-someone-merges-something-broken-into-master&quot;&gt;What if someone merges something broken into master?&lt;/h3&gt;

&lt;p&gt;This is a situation every person in the team should try to avoid, but if it happens you can simply revert the commit.&lt;/p&gt;

&lt;p&gt;If the commit is not revertable because of a destructive migration for instance (something that should be avoided, but that’s another story), then freeze releases until it’s fixed. This situation shouldn’t happen often if your team is careful and only merge things that are not broken or are at least revertable.&lt;/p&gt;

&lt;h3 id=&quot;my-git-flow-works-well-for-my-team-should-i-change-it&quot;&gt;My git flow works well for my team, should I change it?&lt;/h3&gt;

&lt;p&gt;Please don’t, use what works for you :)&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Start Shipping Smaller Things</title>
     <link href="https://marcgg.com/blog/2018/03/20/splitting-releases/"/>
     <updated>2018-03-20T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2018/03/20/splitting-releases</id>
     <content type="html">
       &lt;p&gt;Reducing the size of your releases is a great thing to do in order to improve the health of app. It’ll reduce the risk of bugs, simplify rollbacks and get your code in front of users quicker. It also makes for less stressful releases… no one likes to ship one month worth of code at once!&lt;/p&gt;

&lt;p&gt;However it’s hard to know how to ship smaller things, so a lot of people don’t even try to do it. If you’re in this situation, here is a way to start.&lt;/p&gt;

&lt;p&gt;Let’s say you are adding a new feature to an older section of your app. You look at the code and decide it needs some refactoring and more tests. Instead of doing the refactoring while building the new feature, do it before. Once the refactoring is ready, merge it into &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; and release it… and &lt;strong&gt;only then&lt;/strong&gt; start coding the feature. Same thing if you need to update a dependency to add a feature: release the update before actually building the feature.&lt;/p&gt;

&lt;p&gt;This is not much, but it’s in my opinion a good way to start thinking about splitting releases, which will help in the long run.&lt;/p&gt;

       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Where To Focus Software Quality Efforts</title>
     <link href="https://marcgg.com/blog/2018/03/18/software-quality-focus/"/>
     <updated>2018-03-18T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2018/03/18/software-quality-focus</id>
     <content type="html">
       &lt;p&gt;When building software it’s often hard to pinpoint where to focus efforts. We have to build the right thing, and to do it in the best way possible. A good thing to keep in mind is that not all parts of a codebase deserve the same attention.&lt;/p&gt;

&lt;p&gt;In some cases, it’s perfectly fine to follow &lt;a href=&quot;https://www.youtube.com/watch?v=f5I1iyso29U&quot;&gt;Sandi Metz’ advice&lt;/a&gt; and make a mess, and in other it’s best to be make it as perfect as possible.  In a world where we have all the time and resources possible, we could make everything just right… but for those of us who need to have a more realistic approach, here is a rule of thumb to decide where to focus efforts:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/code_change_schema.jpg&quot; alt=&quot;Where to focus effort when coding&quot; style=&quot;padding: 0px; width: 450px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;On one axis, we have &lt;strong&gt;the rate of change&lt;/strong&gt; of this area of your app. For instance you don’t change a lot the code that sends emails, but you A/B test your homepage every week. On the other we see &lt;strong&gt;the criticality&lt;/strong&gt;, the “how bad would it be it this broke” factor if you prefer.  If the login system fails, then you’re in trouble… but on the other hand if the internal weekly export crashes, you can probably finish your coffee before going and fix it.&lt;/p&gt;

&lt;p&gt;Of course this is more a range than a clear cut picture, and depending on your industry the “critical” to “minor” ratio could be very different.&lt;/p&gt;

&lt;h2 id=&quot;decisions&quot;&gt;Decisions&lt;/h2&gt;

&lt;p&gt;There are a lot of ways to achieve the directions mentioned in the schema, but here are a few pointers. Of course it goes without saying that you should always try to write tests, reduce coupling, update dependencies… all of this is to help you decide on what tradeoffs to make when you are short on time or ressources.&lt;/p&gt;

&lt;h3 id=&quot;minor--changes-rarely&quot;&gt;Minor / Changes Rarely&lt;/h3&gt;

&lt;p&gt;If something doesn’t change much and is not critical, it’s often ok to have less tests and take a bit more shortcuts. Maybe it’s the part of your codebase where junior developers learn the trade!&lt;/p&gt;

&lt;p&gt;Of course don’t throw quality out the window, but you probably don’t need to debate for days what the perfect pattern needs to be for this simple internal admin dashboard.&lt;/p&gt;

&lt;h3 id=&quot;minor--changes-often&quot;&gt;Minor / Changes Often&lt;/h3&gt;

&lt;p&gt;This part of your codebase needs to evolve quickly and you can probably tolerate a couple of bugs since this is a less important part of the application.&lt;/p&gt;

&lt;p&gt;Knowing this, it might become possible to ship and monitor production data for regressions instead of spending a long time doing QA. Another option could be having really strong end to end tests to make sure the main flow works well, but only write a few unit tests.&lt;/p&gt;

&lt;h3 id=&quot;critical--changes-rarely&quot;&gt;Critical / Changes Rarely&lt;/h3&gt;

&lt;p&gt;If you have critical code that doesn’t change often, it can be fine to isolate it and test it extensively. The code doesn’t need to be perfectly readable (even if it’s better if it is), but it needs to be stable and correct.&lt;/p&gt;

&lt;h3 id=&quot;critical--changes-often&quot;&gt;Critical / Changes Often&lt;/h3&gt;

&lt;p&gt;This is the business critical part of your application. Here you can feel free to go all out and use all the time you saved to make it very resilient. Use testing, lots of peer reviews, vetted design patterns, industry best practices… whatever makes sense for your organisation.&lt;/p&gt;

&lt;p&gt;This should be your best code, even if it changes often.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Tracking Short Term Tasks With Notebooks</title>
     <link href="https://marcgg.com/blog/2018/02/18/todo-list-notebook-system/"/>
     <updated>2018-02-18T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2018/02/18/todo-list-notebook-system</id>
     <content type="html">
       &lt;p&gt;Since I’ve moved from software development to engineering management, I have a lot more tasks popping up during the day and a lot of unsorted ongoing work. Obviously I don’t have the time to do everything right away, so I needed to find a way to handle this ongoing flow of short term topics.&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;

&lt;p&gt;I know that there are thousands of &lt;a href=&quot;https://evernote.com/&quot;&gt;apps&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Getting_Things_Done&quot;&gt;methodologies&lt;/a&gt; focused on this topic, but I wanted something that worked perfectly for me and fitted with the way I work. These were my requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Is optimised for short tasks needing to be completed within a couple of weeks&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Does not require a computer since I don’t want to always be carrying a computer with me&lt;/li&gt;
  &lt;li&gt;Does not require a phone since I don’t like typing on a phone&lt;/li&gt;
  &lt;li&gt;Allows me to simply push back tasks&lt;/li&gt;
  &lt;li&gt;Is easily browsable and retains history of modifications&lt;/li&gt;
  &lt;li&gt;Does not require much time to setup and maintain&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;notebooks--lists&quot;&gt;Notebooks &amp;amp; Lists&lt;/h2&gt;

&lt;p&gt;When working I always use small notebooks (9x14cm) and a &lt;a href=&quot;http://amzn.to/2y2NXeg&quot;&gt;4 colors pen&lt;/a&gt;. To facilitate future reading, I write the date I start using a new notebook on the first page. A notebook usually lasts me a couple of weeks because I also use them to write down ideas and discuss with other people.&lt;/p&gt;

&lt;h3 id=&quot;methodology&quot;&gt;Methodology&lt;/h3&gt;

&lt;p&gt;Here is how I keep track of tasks by using a notebook:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I write in blue the tasks as they come on a single page. If the task is really important, I circle it in red.&lt;/li&gt;
  &lt;li&gt;When I complete a task, I cross it off in blue.&lt;/li&gt;
  &lt;li&gt;Once the page gets full, I take 5 to 10 minutes to copy what is not yet completed to a new page. At this point I can decide not to copy a task if I consider it shouldn’t be in my short term scope. If that’s the case, I make a small note in black explaining why.&lt;/li&gt;
  &lt;li&gt;If I decide that a task still needs to be done but has a larger scope than expected, I’ll move it to another backlog, usually a Trello board.&lt;/li&gt;
  &lt;li&gt;When a page has been copied, I cross it in black to make it clear that it’s an old version.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-it-looks&quot;&gt;How It Looks&lt;/h3&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/note_todo.jpg&quot; alt=&quot;Using notebook for todo list&quot; style=&quot;padding: 0px; width: 700px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;This is an old page since it is crossed in black. Here reading the PR was an important task that I completed. I also completed 3 other tasks, but I decided to not work on the budget email because it was delayed. Finally 3 tasks were copied to another page to be completed later.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;advantages&quot;&gt;Advantages&lt;/h3&gt;

&lt;h4 id=&quot;backlog-tending&quot;&gt;Backlog Tending&lt;/h4&gt;

&lt;p&gt;At first glance, copying your entire todo list every couple of days doesn’t seem very efficient, but it allows me to stop for a few minutes and reconsider my priorities.  This is why I use small notebooks so that the pages fill quicker and I have to do some frequent backlog tending to figure out what I really should be doing.&lt;/p&gt;

&lt;p&gt;If I have dozens of items, it will be a pain to write again. This is usually a sign that I’m overcommitted or that I let very small tasks pile up. Instead of copying them, I’ll delegate or do them if they take less than 5 minutes. I can also decide to not do the task at all.&lt;/p&gt;

&lt;p&gt;All this is somewhat inspired by the way &lt;a href=&quot;https://www.atlassian.com/agile/kanban/wip-limits&quot;&gt;Kanban has a limit on certains columns&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;cleaning-up-very-small-tasks&quot;&gt;Cleaning Up Very Small Tasks&lt;/h4&gt;

&lt;p&gt;I often notice that I need to do a few very small tasks that would take less than 5 minutes to complete. These tasks usually end up costing more time and energy when you let them wait for a while, so I found it to be best to either do them quickly or not do them at all.&lt;/p&gt;

&lt;p&gt;Doing this frequent backlog tending allows me to just move quicker on this type of task.&lt;/p&gt;

&lt;h4 id=&quot;consciously-pushing-back-tasks&quot;&gt;Consciously Pushing Back Tasks&lt;/h4&gt;

&lt;p&gt;If I decide to still do a task, I need to write it again… and it’s way less fun than crossing completed tasks off! However I like the fact that this is a deliberate process. This way, keeping a task in my backlog has a small confort cost to me. It’s easy to leave a task for months in a backlog, but it’s really annoying to have to write the same task over and over.&lt;/p&gt;

&lt;p&gt;This situation forces me to stop believing that I’ll eventually complete a given task this week and realise that it will never be a priority. This way my backlog is really what I’m going to do next, not a long list of outdated ideas.&lt;/p&gt;

&lt;h4 id=&quot;easily-readable-history&quot;&gt;Easily Readable History&lt;/h4&gt;

&lt;p&gt;When going back through a notebook, I can see what tasks I’ve accomplished, what I pushed back and what I decided to never do:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Task crossed in blue: done&lt;/li&gt;
  &lt;li&gt;Black note on a task: abandoned&lt;/li&gt;
  &lt;li&gt;Task written a on different pages: pushed back&lt;/li&gt;
  &lt;li&gt;Same task circled in red on multiple pages: probably a problem&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I can also quickly browse through and visually get a picture of what happened recently, looking at the number of tasks completed or the amount of tasks circled in red.&lt;/p&gt;

&lt;h4 id=&quot;committing-information-to-memory&quot;&gt;Committing Information To Memory&lt;/h4&gt;

&lt;p&gt;I’ve read a lot that &lt;a href=&quot;http://www.npr.org/2016/04/17/474525392/attention-students-put-your-laptops-away&quot;&gt;writing down notes helps with information retention&lt;/a&gt;. I don’t know if it’s generally true, but it’s really the case for me.&lt;/p&gt;

&lt;p&gt;Writing and copying tasks allows me to retain more information and keep all the ongoing projects and topics in mind more easily, which helps to make quicker decision. I don’t have to dig into a todo list app to know what I have to do in the next couple of days. I also find it easier to remember what I did a few months back when working this way.&lt;/p&gt;

&lt;h3 id=&quot;limitations&quot;&gt;Limitations&lt;/h3&gt;

&lt;p&gt;Just like my &lt;a href=&quot;/blog/2017/10/09/paper-note-taking-meetings/&quot;&gt;note taking during 1 on 1 strategy&lt;/a&gt;, this methodology has a lot of limits. Paper notes are not searchable, not backed up in the cloud… but I feel like most limitations are not a real issue to me since I only use this for short term tasks, and after a few months the data is really valuable anymore. The only problem I saw so far is when I work remotely and forget to take my notebook with me… but it doesn’t happen often :)&lt;/p&gt;

&lt;p&gt;This system is also optimised for tasks that take a day maximum and need to be done short term, this is why I use other strategies for long term projects. I’m ok with not having a unified task system and actually prefer to optimise for the specificity of the short term tasks. However I know that some people enjoy a solution fitting all situations.&lt;/p&gt;

&lt;p&gt;Overall, clearly this system is not perfect, and is highly tailored to the way I work, but hopefully this article will still have insights that will help you improve the way you deal with tasks!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Note Taking During One on Ones</title>
     <link href="https://marcgg.com/blog/2017/10/09/paper-note-taking-meetings/"/>
     <updated>2017-10-09T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2017/10/09/paper-note-taking-meetings</id>
     <content type="html">
       &lt;p&gt;I’ve been experimenting with various note taking strategies when having my regular 30 minutes &lt;a href=&quot;https://www.manager-tools.com/2005/07/the-single-most-effective-management-tool-part-1&quot;&gt;one on ones&lt;/a&gt; (1:1s) with my team. After a few tries I think I’ve found one that fits the way I operate. Of course this is not meant to be used as is, since note taking is quite personal. However there might be something interesting to you! Of course if you have tricks or feedback, feel free to share them in the comments.&lt;/p&gt;

&lt;h2 id=&quot;why-i-try-to-avoid-laptops-during-one-on-ones&quot;&gt;Why I Try To Avoid Laptops During One on Ones&lt;/h2&gt;

&lt;h3 id=&quot;focus-and-discussion-flow&quot;&gt;Focus And Discussion Flow&lt;/h3&gt;

&lt;p&gt;Adding a laptop to a 1:1 makes me less focused, more open to interruptions or distractions. Notifications can pop up, I might want to check a particular point being discussed… when I really should be completely focused on the current conversation.&lt;/p&gt;

&lt;p&gt;Another problem is that it can feel awkward taking notes if the other person can’t see your screen. You can sometime make sure they get a view on what you are typing, but it can get physically impossible depending on the room situation. I also generally think that the computer acts as a wall between me and the other person. It feels more natural to just be taking notes on paper.&lt;/p&gt;

&lt;h3 id=&quot;information-retention&quot;&gt;Information Retention&lt;/h3&gt;

&lt;p&gt;It’s been said &lt;a href=&quot;http://journals.sagepub.com/doi/full/10.1177/0956797614524581&quot;&gt;a lot&lt;/a&gt; that &lt;a href=&quot;http://www.npr.org/2016/04/17/474525392/attention-students-put-your-laptops-away&quot;&gt;writing down notes helps with information retention&lt;/a&gt;, like in this Scientific American article “&lt;a href=&quot;https://www.scientificamerican.com/article/a-learning-secret-don-t-take-notes-with-a-laptop/&quot;&gt;A Learning Secret: Don’t Take Notes with a Laptop&lt;/a&gt;”. Regardless if it’s the case for everybody or not, I feel that it is true for myself: when I write down by hand, I tend to remember the information better.&lt;/p&gt;

&lt;h3 id=&quot;meeting-objectives&quot;&gt;Meeting Objectives&lt;/h3&gt;

&lt;p&gt;I’m trying to reduce as much as possible the number of meetings I attend, but when I attend them I want to be completely focused on the task at hand.&lt;/p&gt;

&lt;p&gt;In the case of a one on one, I want to have a meaningful and structured conversation with my direct report. The objective is to build a relationship, ensure they are on track &amp;amp; making progress. If there are tasks to be discussed further that will require a laptop, I’ll set up a followup ad-hoc meeting. In this other meeting I might use something different for notes, like a Google Document, because the goal of this meeting will be different.&lt;/p&gt;

&lt;h2 id=&quot;notebooks-to-the-rescue&quot;&gt;Notebooks To The Rescue&lt;/h2&gt;

&lt;p&gt;I love using notebooks. I fill a few every months with notes, schemas and random calculations. They are great to quickly lay down ideas, add drawings to make something more explicit and so on.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/notebook.jpg&quot; alt=&quot;Notebook&quot; style=&quot;padding: 0px; width: 700px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;For 1:1s however, it’s important to have a consistent and simple way to keep track of things, not just lay down random notes. Here is my method so far.&lt;/p&gt;

&lt;h3 id=&quot;one-notebook-per-person&quot;&gt;One Notebook Per Person&lt;/h3&gt;

&lt;p&gt;In order to avoid scattering notes around, I use one different notebook for each of my direct reports. This seems like the simplest and more efficient index to me, and when I go to a 1:1, I can just grab the person’s notebook and walk there!&lt;/p&gt;

&lt;h3 id=&quot;color-coding--identifying-deliverables&quot;&gt;Color Coding &amp;amp; Identifying Deliverables&lt;/h3&gt;

&lt;p&gt;I write with the simple &lt;a href=&quot;http://amzn.to/2y2NXeg&quot;&gt;4 colors pen&lt;/a&gt; seen on the picture above and use each color to quickly identify information.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Black: layout, dates, titles, separators&lt;/li&gt;
  &lt;li&gt;Green: what the other person needs to do (followup, deliverable…)&lt;/li&gt;
  &lt;li&gt;Red: what I need to do&lt;/li&gt;
  &lt;li&gt;Blue: actual notes about the discussion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Green and red stand out in the page because they are for actions &amp;amp; deliverables. This is good, because when I quickly scan my notes this is usually what I’ll be looking for. If I need to analyse further, for a performance review for instance, then I read most of the thing anyway.&lt;/p&gt;

&lt;p&gt;Note that if there is a critical deliverable, either expected from me or the other person, I will circle the item multiple times.&lt;/p&gt;

&lt;h3 id=&quot;page-organisation&quot;&gt;Page Organisation&lt;/h3&gt;

&lt;p&gt;For most of my note taking I like to use &lt;a href=&quot;http://amzn.to/2g21DiI&quot;&gt;small notebooks&lt;/a&gt; that I can keep in my pocket all day. However for 1:1s I prefer larger ones like these &lt;a href=&quot;http://amzn.to/2wFiU4j&quot;&gt;Clairefontaine 17x22cm&lt;/a&gt;. This way all my notes for a given week can fit into a single page and I can organise my content to be setup exactly the same every week without wasting space.&lt;/p&gt;

&lt;h4 id=&quot;left-page-preparation-notes&quot;&gt;Left Page: Preparation Notes&lt;/h4&gt;

&lt;p&gt;I use the left page for my preparation notes. I’ll write down what I want to discuss, questions I have, feedback or any relevant information I want to share.&lt;/p&gt;

&lt;p&gt;This is convenient because during the week if I remember something I want to mention to someone, I can just grab her notebook and make a small note on next week’s page. It’s also possible to write down future topics for discussions during the 1:1. If the topic is not discussed, I can just write it again and this way I get a simple way to see how many times I postponed a discussion.&lt;/p&gt;

&lt;h4 id=&quot;right-page-meeting-notes&quot;&gt;Right Page: Meeting Notes&lt;/h4&gt;

&lt;p&gt;I always write down the date on top of the page, but aside from this the page is used for “normal” note taking. I try to be concise, but I do like to write down some sentences verbatim to be able to easily recapture the feeling of the moment.&lt;/p&gt;

&lt;p&gt;Before ending the 1:1, I can easily use the color coding to scan this single page and make sure that we both agree on what we both need to be accomplishing this week.&lt;/p&gt;

&lt;h2 id=&quot;how-it-looks&quot;&gt;How It Looks&lt;/h2&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/notes1on1small.jpg&quot; alt=&quot;Note taking for one on ones&quot; style=&quot;padding: 0px; width: 700px;&quot; /&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;em&gt;Example of notes with fake informations, less shorthand and less french... but still a good representations of what I'm usually writing. You can see a larger version &lt;a href=&quot;/assets/blog/notes1on1.jpg&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;limitations&quot;&gt;Limitations&lt;/h2&gt;

&lt;p&gt;Of course, while this has some advantages, this is not perfect and has some drawbacks.&lt;/p&gt;

&lt;p&gt;For instance having to physically grab the notebooks can be problematic if I’m not at my desk. I’m also quite afraid to lose them, and will probably need to figure out a way to ensure they are backed up with solutions like &lt;a href=&quot;https://getrocketbook.co.uk/&quot;&gt;Rocketbook&lt;/a&gt;. This might be overkill, I still need to figure out my options.&lt;/p&gt;

&lt;p&gt;Another limit is that while I can type quite fast, I’m a bit slower when writing by hand. I’m still working on this by improving my shorthand and creating simple systems (like circled initials to reference people) to be able to write quicker and more effectively.&lt;/p&gt;

&lt;p&gt;The notebooks are also not searchable. I though this would be a big issue, but so far the indexing by person and the color system has been enough for me. I rarely have to browse back more than a couple of weeks, and if a topic is important it tends to come up multiple weeks in a row.&lt;/p&gt;

&lt;h3 id=&quot;still-a-success-in-my-opinion&quot;&gt;Still A Success, In My Opinion&lt;/h3&gt;

&lt;p&gt;Overall, despite the various limitations of this approach, I’m very happy about this quite low tech setup. It’s easier for me to take quick notes this way while staying focused on the conversation at hand.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Continous Integration at Drivy</title>
     <link href="https://marcgg.com/blog/2017/09/27/continous-integration/"/>
     <updated>2017-09-27T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2017/09/27/continous-integration</id>
     <content type="html">
       &lt;p&gt;Here is another article I wrote for &lt;a href=&quot;https://drivy.engineering&quot;&gt;Drivy’s engineering blog&lt;/a&gt;. I was thinking that a lot of company share where they are at in term of CI processes, but don’t really explain how they got there. In this post, I’ve went over almost five years of various iterations, from having nothing and shipping manually to building our own release tool.&lt;/p&gt;

&lt;p&gt;You can read about it here: &lt;a href=&quot;https://drivy.engineering/continuous-integration/&quot;&gt;Evolution Of Our Continuous Delivery Process&lt;/a&gt;&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Don't Simply Be The Manager You'd Love To Have</title>
     <link href="https://marcgg.com/blog/2017/09/04/manager-you-want/"/>
     <updated>2017-09-04T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2017/09/04/manager-you-want</id>
     <content type="html">
       &lt;p&gt;We’ve all had managers, some were good, some were bad, so of course when offered the opportunity to take on a leadership role it’s clear that we’d want to be on the “good” side of this spectrum… but what does it mean?&lt;/p&gt;

&lt;p&gt;The simplest answer would be “be someone that I would have loved being managed by”.&lt;/p&gt;

&lt;p&gt;Seems to be a good approach, however I’d like to argue that it is a very narrow way of looking at it. A style of management that worked for you might not be fitting for everyone in your team - unless you work with &lt;em&gt;very&lt;/em&gt; similar people.&lt;/p&gt;

&lt;p&gt;Let’s say you hate deadlines and feel like it’s a terrible way to motivate people: having a tight deadline stresses you out and you end up producing lesser quality work. So of course you enjoy a manager who can create space between deliverables and don’t set deadlines. As a manager, you’d then naturally do the same. However after a few months like this one of your direct report complains: they actually liked the deadlines. It was giving them a better sense of purpose, a clearer way to organise their time and more adrenaline… overall it was just more fun and productive for them to work with tight deadlines!&lt;/p&gt;

&lt;p&gt;What do you do then?&lt;/p&gt;

&lt;p&gt;In my opinion thinking &lt;em&gt;“I like to be managed this way so everybody in my team would like it too”&lt;/em&gt; is too simplistic of a position. You need to take the good traits you see in a lot of different people, figure out what approach would work for you and then adapt all of this to your team and the situation in order to keep your people happy and productive.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>The Beginner Mindset &amp; Moving To Management</title>
     <link href="https://marcgg.com/blog/2017/08/22/starting-with-management/"/>
     <updated>2017-08-22T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2017/08/22/starting-with-management</id>
     <content type="html">
       &lt;p&gt;It’s been a year since I’ve moved from being an individual contributor to managing a team of approximatively 14 developers. So far, this has been a very interesting and rewarding experience but, of course, it has also been a very challenging mission… there is so much to learn in order to be effective at this job! When making such a switch, it’s hard to even know where to start and what to be doing. It’s also very easy to fall back to what you know best: your previous role.&lt;/p&gt;

&lt;p&gt;In my case what helped tremendously was to embrace the fact that moving from senior engineer to manager wasn’t a step forward, but more like a side step on a different track. Something that could be summed up by this overly simplistic schema:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/management_progress.jpg&quot; alt=&quot;Management progress scheme&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;This might sound obvious to you, and some larger companies will even highlight this fact in their career progress paths. However, since I’ve mostly worked for small and early stage startups, everyone was focusing on actually building the company from scratch and not really building long term career paths! Because of this it was very tempting to think that being a software engineer with years of experience would make me a good manager.&lt;/p&gt;

&lt;p&gt;Of course some knowledge is carried over, of course, but in a lot of aspects it was quickly clear that I was just a complete beginner. Thinking like a junior manager makes it easier to be okay with looking up very simple resources, start learning from the beginning. Running effective staff meetings, conducting 1 on 1s, managing your own time… there are countless great advices on these topics, and accepting that you have to learn these first is important. I can’t overstate how having solid basis helps with confidence and reliability.&lt;/p&gt;

&lt;p&gt;It takes time and energy, but your previous background helps learning faster and improve quickly. It’s an investment worth making.&lt;/p&gt;

       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Blogging About Management</title>
     <link href="https://marcgg.com/blog/2017/08/20/blogging-about-management/"/>
     <updated>2017-08-20T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2017/08/20/blogging-about-management</id>
     <content type="html">
       &lt;p&gt;&lt;em&gt;Careful, this is a meta article about this blog! Continue at your own risk.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I’ve changed role at Drivy about a year ago, moving from having technical leadership over some areas to actually managing the entire engineering team.&lt;/p&gt;

&lt;p&gt;This has been insanely interesting and a great challenge… so more than once I’ve wanted to write articles about management topics. However, because of my lack of experience in this domain, it felt way harder to come up with a compelling article about leadership than about technical topics like &lt;a href=&quot;/blog/2016/11/01/javascript-audio/&quot;&gt;sounds in javascript&lt;/a&gt; or &lt;a href=&quot;/blog/2017/01/23/ruby-to-s-to-str/&quot;&gt;very specific Ruby details&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have given a few shots in the past at different topics, for instance project management with “&lt;a href=&quot;/blog/2015/08/27/deadlines-estimates-software-startup/&quot;&gt;Deadlines &amp;amp; Estimates in Startups&lt;/a&gt;” or recruitment with “&lt;a href=&quot;/blog/2016/08/02/developer-resume/&quot;&gt;Why Resumes Are Actually Helpful&lt;/a&gt;”, but never on management itself.&lt;/p&gt;

&lt;p&gt;In the coming year I’ve decided to push myself to share more about what I’ve been learning. In a lot of cases I’m pretty sure I’ll be stating the obvious to experienced managers… but, just like I’m okay having old articles like “&lt;a href=&quot;/blog/2013/04/22/what-i-learned-teaching-web/&quot;&gt;What I Learned While Teaching&lt;/a&gt;” that is very much pushing open doors, I’ve decided to be okay with more “naive” articles for a bit.&lt;/p&gt;

&lt;p&gt;One of my very early articles from early 2013 was “&lt;a href=&quot;/blog/2013/02/04/developers-teach-non-tech-startup/&quot;&gt;Developers, Share Your Technical Knowledge&lt;/a&gt;”. Reading it back, it needs a lot of improvements, but it lead me into very interesting projects teaching programming to &lt;a href=&quot;http://wifilles.org/&quot;&gt;teenagers&lt;/a&gt;,  entrepreneurs, &lt;a href=&quot;http://www.hec.edu/&quot;&gt;HEC&lt;/a&gt; students, &lt;a href=&quot;/blog/2016/03/14/birdly-ycombinator/&quot;&gt;coaching various early stage startups&lt;/a&gt; and &lt;a href=&quot;https://openclassrooms.com/courses/gerer-son-code-avec-git-et-github&quot;&gt;more&lt;/a&gt;… so I’d say that it was worth giving it a try!&lt;/p&gt;

&lt;p&gt;If you’ve been following this blog for the technical articles, don’t worry I’ll still be writing those! I’ve still got a lot of topics that I’ve left on the back-burner, and most of them are technical: matrix multiplication algorithms, precedence in Ruby, digging into rel-noopener, dealing with a monolith in production, building high-connectivity/low-data apps… as you can see there’s still a lot to be said!&lt;/p&gt;

&lt;p&gt;So all this to say, please bear with me and feel free to share feedback over &lt;a href=&quot;https://twitter.com/marcgg&quot;&gt;twitter&lt;/a&gt; or in the comments of my future articles! The first one is already up and is about &lt;a href=&quot;/blog/2017/08/22/starting-with-management/&quot;&gt;the importance of having a beginner mindset when first switching from a senior engineering role to management&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks :)&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Recruitment Process</title>
     <link href="https://marcgg.com/blog/2017/06/30/recruitment-process/"/>
     <updated>2017-06-30T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2017/06/30/recruitment-process</id>
     <content type="html">
       &lt;p&gt;I wrote on &lt;a href=&quot;https://drivy.engineering&quot;&gt;Drivy’s engineering blog&lt;/a&gt; an article about the way we conduct interviews to find the best candidates. It’s not a perfect flow, but we’ve had good feedback from people going through it and made some great hires, so I felt it would be worth sharing.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/team_working_at_drivy.jpg&quot; alt=&quot;People working in the Drivy offices&quot; style=&quot;padding: 0px; width: 650px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;You can read it there: &lt;a href=&quot;https://drivy.engineering/tech-recruitment-process/&quot;&gt;The Tech Recruitment Process At Drivy&lt;/a&gt;&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>How To Find Points Contained in a Polygon Using MySQL</title>
     <link href="https://marcgg.com/blog/2017/03/13/mysql-viewport-gis/"/>
     <updated>2017-03-13T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2017/03/13/mysql-viewport-gis</id>
     <content type="html">
       &lt;p&gt;MySQL was a bit late to the geospatial party compared to other databases like Postgres, but with the &lt;a href=&quot;https://dev.mysql.com/doc/relnotes/mysql/5.6/en/news-5-6-1.html&quot;&gt;5.6&lt;/a&gt; and then the &lt;a href=&quot;https://dev.mysql.com/doc/relnotes/mysql/5.7/en/&quot;&gt;5.7&lt;/a&gt; releases a lot of new &lt;a href=&quot;http://www.nationalgeographic.org/encyclopedia/geographic-information-system-gis/&quot;&gt;GIS&lt;/a&gt; features were finally implemented. For instance in 5.7 we got, among other:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ST_Distance_Sphere&lt;/code&gt; to compute the distance between two points on a sphere.&lt;/li&gt;
  &lt;li&gt;Spatial indexes for InnoDB&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://geojson.org/&quot;&gt;GeoJSON&lt;/a&gt; integration which is, quoting from the &lt;a href=&quot;https://tools.ietf.org/html/rfc7946&quot;&gt;RFC&lt;/a&gt;, “a geospatial data interchange format based on JSON.”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There’s a lot of interesting things we can now accomplish using these new fonctionnalities. Today I’ll showcase a very simple example on how to do a search using a &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/gis-class-polygon.html&quot;&gt;Polygon&lt;/a&gt;and a &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/gis-class-point.html&quot;&gt;Point&lt;/a&gt;. The goal here will be to answer the question “is this point in this city?”.&lt;/p&gt;

&lt;h2 id=&quot;defining-points&quot;&gt;Defining Points&lt;/h2&gt;

&lt;p&gt;First let’s create a “places” table with a name and a set of coordinates. However, instead of storing a latitude and a longitude as two different floats I’ll use a &lt;code class=&quot;highlighter-rouge&quot;&gt;Point&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`places`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AUTO_INCREMENT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`coordinates`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`id`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ENGINE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InnoDB&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHARSET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then let’s add a couple of places in Paris and one in New York for very basic testing. The way to store a new &lt;code class=&quot;highlighter-rouge&quot;&gt;Point&lt;/code&gt; is very straighforward:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`places`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`coordinates`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;Eiffel Tower&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POINT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;858271&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;293795&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`places`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`coordinates`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;Pere Lachaise&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POINT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;861131&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;394683&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`places`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`coordinates`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;Brooklyn&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POINT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;711089&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;73&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;948391&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;filtering&quot;&gt;Filtering&lt;/h2&gt;

&lt;p&gt;Let’s then try to answer the question “what places in my database are in Paris?”.&lt;/p&gt;

&lt;h3 id=&quot;filtering-with-stdistancesphere&quot;&gt;Filtering With &lt;code class=&quot;highlighter-rouge&quot;&gt;ST_Distance_Sphere&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;First let’s try to use MySQL’s &lt;code class=&quot;highlighter-rouge&quot;&gt;ST_Distance_Sphere&lt;/code&gt; to find the distance between two points. Let’s use the Louvre’s coordinates (48.861105, 2.335337) which is in the center of Paris. We can easily compute the distance using &lt;code class=&quot;highlighter-rouge&quot;&gt;ST_Distance_Sphere&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ST_Distance_Sphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coordinates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POINT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;861105&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;335337&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;places&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This gives us:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Eiffel Tower    4629.968479838098
Pere Lachaise   6598.960247905806
Brooklyn    8500637.22140377
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The distance returned is in metters, so everything checks out. If we want to see all points that are less than 10km from the Louvre, we can do:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;places&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ST_Distance_Sphere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coordinates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POINT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;861105&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;335337&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is a pretty good approximation to being in Paris, but that’s not perfect. What if I wanted to know if a point was really in Paris and not just close to the center of Paris?&lt;/p&gt;

&lt;h3 id=&quot;filtering-with-a-polygon-and--stcontains&quot;&gt;Filtering With a Polygon and  &lt;code class=&quot;highlighter-rouge&quot;&gt;ST_CONTAINS&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;First let’s define a very basic shape enclosing Paris. The coordinates I’ll be using here are a very rough approximation and I only define a rectangle, but that’ll work for this example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paris&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ST_GEOMFROMTEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'POLYGON(
(48.89 2.27, 48.89 2.42, 48.81 2.42, 48.81 2.27, 48.89 2.27)
  )'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;If you look closer, you’ll notice that the last point is the same as the first one and we have 5 points. This is because we need to “close” the polygon.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To double check the result, we can use &lt;a href=&quot;https://www.sequelpro.com/&quot;&gt;Sequel Pro&lt;/a&gt;’s preview feature and confirm how it looks:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/polygon_mysql.jpg&quot; alt=&quot;MySQL 5.7 polygon preview&quot; style=&quot;padding: 20px; width: 550px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Then we can use &lt;code class=&quot;highlighter-rouge&quot;&gt;ST_CONTAINS&lt;/code&gt; to ask all the places contained in the &lt;code class=&quot;highlighter-rouge&quot;&gt;@paris&lt;/code&gt; polygon:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;places&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ST_CONTAINS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paris&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coordinates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Of course I could have skipped the step where I defined &lt;code class=&quot;highlighter-rouge&quot;&gt;@paris&lt;/code&gt; and called &lt;code class=&quot;highlighter-rouge&quot;&gt;POLYGON&lt;/code&gt; directly in the query.&lt;/p&gt;

&lt;h2 id=&quot;performances&quot;&gt;Performances&lt;/h2&gt;

&lt;p&gt;Geospacial functions are fun to play with and since we can now &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/using-spatial-indexes.html&quot;&gt;use spatial indexes in InnoDB&lt;/a&gt;, they become actually usable in production. I won’t get into performances in this article, but I recommend reading the Percona article “&lt;a href=&quot;https://www.percona.com/blog/2016/02/03/new-gis-features-in-mysql-5-7/&quot;&gt;New GIS Features in MySQL 5.7&lt;/a&gt;”.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>The Difference Between to&amp;#95;s &amp; to&amp;#95;str In Ruby</title>
     <link href="https://marcgg.com/blog/2017/01/23/ruby-to-s-to-str/"/>
     <updated>2017-01-23T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2017/01/23/ruby-to-s-to-str</id>
     <content type="html">
       &lt;p&gt;If you ever looked at the available methods on some objects in Ruby, you might have noticed that there seems to be two different ways to cast an object to string: &lt;code class=&quot;highlighter-rouge&quot;&gt;to_s&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt;. However, most people only use &lt;code class=&quot;highlighter-rouge&quot;&gt;to_s&lt;/code&gt;… is it because it’s shorter or is &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt; functionally different?&lt;/p&gt;

&lt;p&gt;Short answer: they are indeed different.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note that this article focuses on &lt;code class=&quot;highlighter-rouge&quot;&gt;to_s&lt;/code&gt; vs  &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt;, but the logic applies as well to &lt;code class=&quot;highlighter-rouge&quot;&gt;to_int&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;to_ary&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;to_hash&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;to_regexp&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;to_sym&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;difference-in-scope-of-definition&quot;&gt;Difference In Scope Of Definition&lt;/h2&gt;

&lt;p&gt;First of, &lt;code class=&quot;highlighter-rouge&quot;&gt;to_s&lt;/code&gt; is defined on a lot of elements.
To demonstrate this, let’s create a new class &lt;code class=&quot;highlighter-rouge&quot;&gt;Demo&lt;/code&gt; and call &lt;code class=&quot;highlighter-rouge&quot;&gt;to_s&lt;/code&gt;
on a new instance of this class:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Demo&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Demo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This returns:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#&amp;lt;Demo:0x007fc49b05a408&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We could also call &lt;code class=&quot;highlighter-rouge&quot;&gt;to_s&lt;/code&gt; directly on the class and get a valid result as well since the &lt;code class=&quot;highlighter-rouge&quot;&gt;Class&lt;/code&gt; &lt;a href=&quot;https://ruby-doc.org/core-2.2.0/Class.html&quot;&gt;class is also an object&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; Class.to_s
=&amp;gt; &quot;Class&quot;
&amp;gt; Class.new.to_s
=&amp;gt; &quot;#&amp;lt;Class:0x007f8f5c02f5b0&amp;gt;&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;However if we try to do the same with &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt;, it won’t work because it’s not defined on a higher level class:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Demo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_str&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will return &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined method to_str for #&amp;lt;Demo:0x007fea8204e290&amp;gt; (NoMethodError)&lt;/code&gt;, meaning that we have to define it ourselves when creating a new class.&lt;/p&gt;

&lt;h2 id=&quot;difference-in-behavior&quot;&gt;Difference In Behavior&lt;/h2&gt;

&lt;p&gt;Alright, so the methods are not defined in the same way… but this is just a minor detail compared to the main difference between the two:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;to_s&lt;/code&gt; returns a string representation of an object&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt; is actually stating that the object behaves like a string!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;string-representation-of-an-object&quot;&gt;String Representation Of An Object&lt;/h3&gt;

&lt;p&gt;When calling &lt;code class=&quot;highlighter-rouge&quot;&gt;to_s&lt;/code&gt;, it will return some form of string representation of the object. Something easy to display.&lt;/p&gt;

&lt;p&gt;When creating a new class you can keep the default behaviour or build your own. For instance here’s how &lt;code class=&quot;highlighter-rouge&quot;&gt;to_s&lt;/code&gt; behaves on an integer:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# returns &quot;1100100&quot;&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# returns &quot;100&quot;&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# returns&quot;144&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here’s what it could look like if you were defining it yourself:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;
   &lt;span class=&quot;s2&quot;&gt;&quot;User: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It’s basically just a way to have a quick and nice way to display your objects that is going to be called when needed, for instance when using &lt;code class=&quot;highlighter-rouge&quot;&gt;puts&lt;/code&gt; or when interpolating with &lt;code class=&quot;highlighter-rouge&quot;&gt;#{}&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Here is &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Bob&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Returns &quot;Here is User: Bob&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;behaving-like-a-string&quot;&gt;Behaving Like A String&lt;/h3&gt;

&lt;p&gt;Calling &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt; should return a string-like object, behaving just like a &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;On the other hand when an object implements &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt;, it has way more consequences as it means that it will return something that behaves like a string. It’s basically saying that the class is not necessarily a &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;, but it can be used in the same way.&lt;/p&gt;

&lt;p&gt;Because of this, the only class in Ruby core implementing &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt; is &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;n&quot;&gt;rb_str_to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VALUE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rb_obj_class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rb_cString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str_duplicate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rb_cString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;http://apidock.com/ruby/Exception/to_str&quot;&gt;Exception&lt;/a&gt; used to implement &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt; as well but is was removed in Ruby 1.9, which is why it’s often mentioned as an example. The Ruby documentation was even wrong at the time of writing this article, so I wrote &lt;a href=&quot;https://github.com/ruby/ruby/pull/1517&quot;&gt;a PR to fix it&lt;/a&gt; that was merged.&lt;/p&gt;

&lt;p&gt;There are a lot of discussions regarding if a class should implement &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt; or not,  since it’s a strong signal that the class is really similar to a string and should behave as such. If this sounds interesting, you should take a look at this &lt;a href=&quot;https://bugs.ruby-lang.org/issues/7849&quot;&gt;Symbol#to_str&lt;/a&gt; discussion on the Ruby core tracker, or at &lt;a href=&quot;https://github.com/rails/rails/commit/188cc90af9b29d5520564af7bd7bbcdc647953ca&quot;&gt;this example in Rails&lt;/a&gt; of when &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt; is useful by &lt;a href=&quot;https://twitter.com/tenderlove&quot;&gt;Aaron Patterson&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;example-1-fixnum&quot;&gt;Example 1: Fixnum&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Fixnum&lt;/code&gt; does not define &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt;, so when we do this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;150&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We get &lt;code class=&quot;highlighter-rouge&quot;&gt;'+': no implicit conversion of Fixnum into String (TypeError)&lt;/code&gt;. This makes sense, but what would happen if we were to define &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt; on the &lt;code class=&quot;highlighter-rouge&quot;&gt;Fixnum&lt;/code&gt; class?&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Fixnum&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to_str&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The when we call:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;150&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We get &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;15042&quot;&lt;/code&gt;, which is quite surprising! It’s because &lt;code class=&quot;highlighter-rouge&quot;&gt;42&lt;/code&gt; was implicitly converted to a &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;example-2-user&quot;&gt;Example 2: User&lt;/h4&gt;

&lt;p&gt;Going back to our other example, we could add &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt;  to the &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; class and get the ability to use &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; to concatenate an instance of &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; with a string:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to_str&lt;/span&gt;
   &lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Say hello to &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Bob&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Displays &quot;Say hello to Bob&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;note-on-implicit--explicit-conversion&quot;&gt;Note On Implicit / Explicit Conversion&lt;/h2&gt;

&lt;p&gt;We can also say that &lt;code class=&quot;highlighter-rouge&quot;&gt;to_s&lt;/code&gt; is an explicit conversion and &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt; is an implicit conversion. I’m not going into the details of this, if you’d like to get more information I recommend reading &lt;a href=&quot;http://amzn.to/2iV2Ngq&quot;&gt;Confident Ruby&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Quoting directly from the book:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;to_s&lt;/code&gt; is an explicit conversion method. Explicit conversions represent conversions from classes which are mostly or entirely unrelated to the target class.&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt;, on the other hand, is an implicit conversion method. Implicit conversions represent conversions from a class that is closely related to the target class.&lt;/p&gt;

  &lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://amzn.to/2iV2Ngq&quot;&gt;Confident Ruby by Avdi Grimm&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;summing-it-up&quot;&gt;Summing It Up&lt;/h2&gt;

&lt;p&gt;That’s a lot of information, but let me sum it up quickly before finishing the article:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;to_s&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt; are &lt;strong&gt;very different&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;to_s&lt;/code&gt; is defined on most objects and returns a string representation of this object.&lt;/li&gt;
  &lt;li&gt;Defining &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt; on an object is very much like saying “this object behaves like a string”.&lt;/li&gt;
  &lt;li&gt;Calling &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt; should return a string-like object, not juste a representation of the object as a string.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note that both &lt;code class=&quot;highlighter-rouge&quot;&gt;to_s&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;to_str&lt;/code&gt; should return an instance of &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;, even when subclassing &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Asking The Same Questions As An Interviewer</title>
     <link href="https://marcgg.com/blog/2017/01/22/job-interview-questions/"/>
     <updated>2017-01-22T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2017/01/22/job-interview-questions</id>
     <content type="html">
       &lt;p&gt;When conducting job interviews, it’s important to have a few recurring questions.  Obviously I’m not saying to be completely robotic and only fill up a form with predetermined questions. Personnally I like saving around 30% of the interview time to pose the same 3 to 5 problems.&lt;/p&gt;

&lt;p&gt;If you always ask the same questions, you’re effectively making sure that every candidate gets the same opportunity to impress you. You also remove any doubts on your ability to express yourself clearly: if 100 people understood you right away before and one didn’t, it’s probably not because of the way you asked the question.  Finally it also makes comparaison between candidates easier.&lt;/p&gt;

&lt;p&gt;One of my favorite ones is asking “what task or project you accomplished in the past made you the most proud and why”. It’s a good way to find out candidate’s interests, how passionate they are about their craft, what they value, how they present their work and so on.&lt;/p&gt;

&lt;p&gt;I also like to present a very specific problematic that could occur on the job and ask how they would react to it. Something like “what if the printer seems broken and you absolutely need to print something in the next 2 hours”. It sounds very mundain (and it is), but you’d be surprised by the range of answers you’ll get.&lt;/p&gt;

&lt;p&gt;Finally, you should regularly review the questions you ask. If candidates always give you the same answer, it might be a good idea to mix it up since you’re not really learning anything new on them. On the other hand if no one seem to understand what you have in mind and you always have to repeat in different ways, maybe it’s time to drop this one.&lt;/p&gt;

       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Building A Multiplayer 8 Bits Sequencer</title>
     <link href="https://marcgg.com/blog/2016/11/21/chiptune-sequencer-multiplayer/"/>
     <updated>2016-11-21T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2016/11/21/chiptune-sequencer-multiplayer</id>
     <content type="html">
       &lt;p&gt;For this year &lt;a href=&quot;https://www.rubyrampage.com/&quot;&gt;Ruby Rampage&lt;/a&gt; (previously called Rails Rumble) hackathon I really wanted to build something using the new features of Rails 5. A few years ago I tried to build &lt;a href=&quot;/blog/2013/01/14/html5-nodejs-websockets-games-learning/&quot;&gt;a multiplayer HTML 5 game in two days&lt;/a&gt;, but I had to use NodeJS… now was the time to see if &lt;a href=&quot;http://edgeguides.rubyonrails.org/action_cable_overview.html&quot;&gt;ActionCable&lt;/a&gt;  was any better! I also was curious about the new improvements of the Web Audio API ever since I’ve read articles about it.&lt;/p&gt;

&lt;p&gt;I went ahead and after two days of work I managed to get a working site and deployed it on Heroku. You can &lt;a href=&quot;https://warm-escarpment-32217.herokuapp.com/&quot;&gt;try it out for yourself online&lt;/a&gt; or take a look at this quick demo video:&lt;/p&gt;

&lt;center&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/JZlsbC-7GZY&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;It only works on Chrome and runs on a free Heroku server, but it still handles a decent number of concurrent connections.&lt;/p&gt;

&lt;h2 id=&quot;building-the-sequencer&quot;&gt;Building The Sequencer&lt;/h2&gt;

&lt;p&gt;Since it was a hackathon, I had to cut some corners in terms of test coverage and general code quality. However I was always aiming to build a stable enough project, meaning the site should handle gracefully any bug, timeout or server restart.&lt;/p&gt;

&lt;h3 id=&quot;action-cable--websockets&quot;&gt;Action Cable &amp;amp; Websockets&lt;/h3&gt;

&lt;p&gt;Action Cable provides a simple way to deal with real-time features in a Rails application. It uses &lt;a href=&quot;http://redis.io/&quot;&gt;Redis&lt;/a&gt; a lot, so I had to use a free &lt;a href=&quot;https://redislabs.com/redis-cloud&quot;&gt;Redis Cloud&lt;/a&gt; instance. I also set up &lt;a href=&quot;http://puma.io/&quot;&gt;Puma&lt;/a&gt; since a threaded server is really the way to go when dealing with real-time.&lt;/p&gt;

&lt;p&gt;Overall the experience was nicer than what I used to with NodeJS and in a few hours I had a somewhat working multiplayer snake “game” that looked terrible:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/chiptune_step1.jpg&quot; alt=&quot;&quot; style=&quot;padding: 20px; width: 400px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;After a bit I realized that it was very hard to maintain the list of connected players and update it when they leave, get disconnected or just stop responding. It’s at this point that I started investing more time into getting a stable way of handling players, with a dedicated model and better integration with Redis. One challenge there was to link a request signature to a player, and make sure the link was properly persisted and updated at the right time.&lt;/p&gt;

&lt;p&gt;I &lt;a href=&quot;https://gist.github.com/marcgg/1f376b58ddca8ef45f47ee831dbc3c37&quot;&gt;shared some Ruby code here&lt;/a&gt; if you’re interested - but keep in mind that it’s “hackathon code”, so don’t go and just use this :)&lt;/p&gt;

&lt;h3 id=&quot;broadcasting&quot;&gt;Broadcasting&lt;/h3&gt;

&lt;p&gt;An error I made in the past when building a simple real-time multiplayer HTML 5 game was passing around too much information. In this situation, any network access can be a real problem as any millisecond lost is felt in the UI.&lt;/p&gt;

&lt;p&gt;This time I decided to only broadcast the changes and not the whole world, making the site way more responsive but complexifying the &lt;code class=&quot;highlighter-rouge&quot;&gt;draw&lt;/code&gt; method. I also made sure to clean up what was not used anymore, mostly using the very useful &lt;a href=&quot;http://www.redis.io/commands/expire&quot;&gt;EXPIRE&lt;/a&gt; method provided by Redis.&lt;/p&gt;

&lt;p&gt;Here’s a simple example with the &lt;code class=&quot;highlighter-rouge&quot;&gt;Note&lt;/code&gt; model, representing an active note in the sequencer:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/marcgg/47233a6ca0fe8cc126685bc2a635460c.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;And here is the very simplified version of the client side code handling broadcasts:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;room&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscriptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;RoomChannel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;room.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;received&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Routing&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;note&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;music&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;making-music-using-javascript&quot;&gt;Making Music Using Javascript&lt;/h3&gt;

&lt;p&gt;Once I had a somewhat working server connection, I had to get the client to actually produce sounds. The first version was very simple and used a sine wave to produce random bleeps and boops.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/chiptune_step2.jpg&quot; alt=&quot;&quot; style=&quot;padding: 20px; width: 400px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;During the rest of the hackathon I kept on tweaking this until I got the sound and timings I wanted. I talked more about it in this article: &lt;a href=&quot;/blog/2016/11/01/javascript-audio/&quot;&gt;Generate Sounds Programmatically With Javascript&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Overall, getting the different notes to sound good was the hardest part of this project, because there was the double challenge of understanding both the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API&quot;&gt;Web Audio API&lt;/a&gt; and picking notes that would fit with one another.&lt;/p&gt;

&lt;p&gt;I ended up with 3 instruments plus a kick and a snare. Each instrument is based on a simple signal (sawtooth, square and triangle) that is modified to give a better sound.  They are then given a full &lt;a href=&quot;https://en.wikipedia.org/wiki/Octave&quot;&gt;octave&lt;/a&gt; on complementary &lt;a href=&quot;https://youtu.be/TfDmVwz24lE?t=2m12s&quot;&gt;scales&lt;/a&gt;, meaning that even if people play totally random notes, it won’t be &lt;a href=&quot;https://youtu.be/fabeLu4-Ja0?t=23s&quot;&gt;dissonant&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;highScale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;D6&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;C6&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;B5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;A5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;G5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;F#5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;E5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;D5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;midScale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;F#4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;E4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;D4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;C4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;B3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;A3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;G3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;F#3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lowScale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;F#3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;E3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;D3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;C3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;B2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;A2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;G2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;F#2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;stability&quot;&gt;Stability&lt;/h3&gt;

&lt;p&gt;Running a real-time service on a free Heroku server that restarts randomly is challenging, but doable. I tried different approaches and ended with a simple yet effective way of dealing with this &lt;a href=&quot;https://cl.ly/1H0C3m2h123H&quot;&gt;as demonstrated in this screen recording&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/chiptune_reconnect.jpg&quot; alt=&quot;&quot; style=&quot;padding: 20px; width: 400px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Basically I would detect on the client side any sign that the server was poorly responding. If it was the case, the client would then retry and, if it failed again, the browser would simply reload the page after a delay. There was a couple of places in the flow where this could happen, so I had to handle all of them with custom messages to make the app feel responsive and stable. Of course all this is just an approximation for “real stability”, but from a user perspective it gave the impression that everything was running smoothly.&lt;/p&gt;

&lt;p&gt;Later on &lt;a href=&quot;https://twitter.com/marcgg/status/790187628859650048&quot;&gt;I tried with more clients connected&lt;/a&gt; and more random restarts / dropped connections and it worked fine.&lt;/p&gt;

&lt;h3 id=&quot;designing&quot;&gt;Designing&lt;/h3&gt;

&lt;p&gt;I decided to go for an old school design to match the 8 bits sound the project was producing. It was hard to get something that looked decent since design is really not my strong suit, but the result turned out ok in my opinon:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/chiptune_home.jpg&quot; alt=&quot;&quot; style=&quot;padding: 20px; width: 400px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;I also had fun &lt;a href=&quot;https://twitter.com/marcgg/status/790161693204705281&quot;&gt;designing a favicon&lt;/a&gt; and using &lt;a href=&quot;http://www.color-hex.com/color-palette/165&quot;&gt;palettes&lt;/a&gt; to pick colors that kind of matched together.&lt;/p&gt;

&lt;h3 id=&quot;playing&quot;&gt;Playing&lt;/h3&gt;

&lt;p&gt;In the last half day of the hackathon I was mostly tweaking the sound and design to get it just the way I wanted it. It was also very enjoyable to see people try out the app!&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/chiptune_playing.jpg&quot; alt=&quot;&quot; style=&quot;padding: 20px; width: 400px;&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Overall it was a very interesting project that was fun to build and is also fun to use every once in a while. When there is a lot of people playing it’s a real mess, but it was expected and is also very funny to watch.&lt;/p&gt;

&lt;p&gt;Something I didn’t anticipate was that, while I love coding with music, for this project I absolutely couldn’t. Instead I spent a couple of days listening to beepings and sine waves. The worse was when I introduced bugs and a piercing noise would destroy my ears.&lt;/p&gt;

&lt;p&gt;It’s also worth mentioning that I won the &lt;a href=&quot;https://twitter.com/rbrampage/status/795007525733023744&quot;&gt;popularity prize&lt;/a&gt; of the hackathon, so I’d say the whole experience was a success!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Generate Sounds Programmatically With Javascript</title>
     <link href="https://marcgg.com/blog/2016/11/01/javascript-audio/"/>
     <updated>2016-11-01T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2016/11/01/javascript-audio</id>
     <content type="html">
       &lt;script src=&quot;/assets/js/posts/music.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;During a recent hackathon, I decided to build &lt;a href=&quot;/blog/2016/11/21/chiptune-sequencer-multiplayer/&quot;&gt;a multiplayer 8 bits sequencer&lt;/a&gt; using sounds generated programatically with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API&quot;&gt;Web Audio API&lt;/a&gt;. I didn’t want to only use the HTML 5 &lt;code class=&quot;highlighter-rouge&quot;&gt;audio&lt;/code&gt; tag because I found it too limiting… but the first thing I discovered is that getting the right kind of sound is not straightforward at all, especially if you only have a very basic musical background like myself. So how exactly do you create a clear, ringing and nice sounding note?&lt;/p&gt;

&lt;p&gt;In this article I’ll give some pointers with usable code. I’ve also added examples that you can actually run &lt;a href=&quot;http://caniuse.com/#feat=audio-api&quot;&gt;if your browser supports it&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;produce-a-simple-beep&quot;&gt;Produce a Simple Beep&lt;/h2&gt;

&lt;p&gt;First let’s create a very basic beep using a &lt;a href=&quot;https://en.wikipedia.org/wiki/Sine_wave&quot;&gt;sinusoid&lt;/a&gt;. We’ll initiate an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext&quot;&gt;audio context&lt;/a&gt;, which is the central object for generating sound. Then we’ll create an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/OscillatorNode&quot;&gt;oscillator&lt;/a&gt; producing the sine wave. Finally we connect the oscillator to the context and start.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AudioContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createOscillator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sine&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;destination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example1()&quot;&gt;Play&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;js_stop_sound&quot;&gt;Stop&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You’ll notice that the sound produced here is not great. It seems like you let a phone off the hook and when you stop it, you hear a “click” and it’s not pleasant at all. This is because the human hear reacts this way as explained in this &lt;a href=&quot;http://alemangui.github.io/blog//2015/12/26/ramp-to-value.html&quot;&gt;great article&lt;/a&gt;. Basically when you stop the sound anywhere else than the zero crossing point, you’ll hear this clicking sound.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/audio_click.jpg&quot; alt=&quot;Clicking noise on a sine curve&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;getting-rid-of-the-clicking-sound&quot;&gt;Getting Rid Of The Clicking Sound&lt;/h2&gt;

&lt;p&gt;The best solution to get rid of this click is to ramp the sine wave down with an exponentional function, using &lt;code class=&quot;highlighter-rouge&quot;&gt;AudioParam.exponentialRampToValueAtTime()&lt;/code&gt; as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/exponentialRampToValueAtTime&quot;&gt;documented here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This time we need to add a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GainNode&quot;&gt;gain node&lt;/a&gt; to our oscillator. A gain node allows us to change the volume of a signal as explained in this schema from the documentation:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/gain.jpg&quot; alt=&quot;Gain node&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;The code to start the sound now looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AudioContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createOscillator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createGain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;destination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example2()&quot;&gt;Play&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to stop the sound we change the gain value, effectively reducing the volume. Note that we don’t ramp down to 0 since there is a limitation in this function where the value has to be positive.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exponentialRampToValueAtTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;0.00001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.04&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example2Stop(0.04)&quot;&gt;Stop&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can hear, the clicking sound is gone! But that’s not the only interesting thing that you can do with this exponential ramp down.&lt;/p&gt;

&lt;h2 id=&quot;set-a-ringing-effect&quot;&gt;Set A Ringing Effect&lt;/h2&gt;

&lt;p&gt;In the example above, we decided to stop the sound really quickly, in &lt;code class=&quot;highlighter-rouge&quot;&gt;0.04&lt;/code&gt; seconds. But what happens when we change this &lt;code class=&quot;highlighter-rouge&quot;&gt;X&lt;/code&gt; value?&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exponentialRampToValueAtTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.00001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example2()&quot;&gt;Play&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example2Stop(0.1)&quot;&gt;Stop (X=0.1)&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example2Stop(1)&quot;&gt;Stop (X=1)&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example2Stop(5)&quot;&gt;Stop (X=5)&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;hitting-notes&quot;&gt;Hitting Notes&lt;/h3&gt;

&lt;p&gt;Giving more time to the sound to fade out gives it a totally different feel. It gets more visible when we start and stop the signal right away:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example3('sine', 0.08)&quot;&gt;Start and stop quickly&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example3('sine', 1.5)&quot;&gt;Start and stop slowly&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first one sounds like a ticking noise when the other sounds like an actual note played on an instrument.&lt;/p&gt;

&lt;h3 id=&quot;various-oscilators&quot;&gt;Various Oscilators&lt;/h3&gt;

&lt;p&gt;So far we’ve been using a sine wave for our main signal, but we have other options:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/signals.png&quot; alt=&quot;Types of oscilators&quot; style=&quot;padding: 20px; width: 400px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;It’s enven more interesting when we start playing around with the type of oscilators by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;o.type = type&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example3('sine', 1.5)&quot;&gt;Sine&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example3('square', 1.5)&quot;&gt;Square&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example3('triangle', 1.5)&quot;&gt;Triangle&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example3('sawtooth', 1.5)&quot;&gt;Sawtooth&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;playing-actual-notes&quot;&gt;Playing Actual Notes&lt;/h2&gt;

&lt;p&gt;With the previous code, it becomes fairly simple to have a nice sounding note, but what exactly were we playing? That’s when you have to take frequency into account. For instance, the one people know is that A4 is 440Hz, but there are others.&lt;/p&gt;

&lt;h3 id=&quot;note-frequencies-in-hz&quot;&gt;Note Frequencies in Hz&lt;/h3&gt;

&lt;p&gt;With this table, you can easily create a mapping in your code to play any given note using its . For the hackathon I used a simple hash mapping that is available in this &lt;a href=&quot;https://gist.github.com/marcgg/94e97def0e8694f906443ed5262e9cbb&quot;&gt;gist&lt;/a&gt;.&lt;/p&gt;

&lt;table class=&quot;data_table&quot;&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;&lt;th&gt;C&lt;/th&gt;&lt;th&gt;C#&lt;/th&gt;&lt;th&gt;D&lt;/th&gt;&lt;th&gt;Eb&lt;/th&gt;&lt;th&gt;E&lt;/th&gt;&lt;th&gt;F&lt;/th&gt;&lt;th&gt;F#&lt;/th&gt;&lt;th&gt;G&lt;/th&gt;&lt;th&gt;G#&lt;/th&gt;&lt;th&gt;A&lt;/th&gt;&lt;th&gt;Bb&lt;/th&gt;&lt;th&gt;B&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;th&gt;0&lt;/th&gt;&lt;td&gt;16.35&lt;/td&gt;&lt;td&gt;17.32&lt;/td&gt;&lt;td&gt;18.35&lt;/td&gt;&lt;td&gt;19.45&lt;/td&gt;&lt;td&gt;20.60&lt;/td&gt;&lt;td&gt;21.83&lt;/td&gt;&lt;td&gt;23.12&lt;/td&gt;&lt;td&gt;24.50&lt;/td&gt;&lt;td&gt;25.96&lt;/td&gt;&lt;td&gt;27.50&lt;/td&gt;&lt;td&gt;29.14&lt;/td&gt;&lt;td&gt;30.87&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;th&gt;1&lt;/th&gt;&lt;td&gt;32.70&lt;/td&gt;&lt;td&gt;34.65&lt;/td&gt;&lt;td&gt;36.71&lt;/td&gt;&lt;td&gt;38.89&lt;/td&gt;&lt;td&gt;41.20&lt;/td&gt;&lt;td&gt;43.65&lt;/td&gt;&lt;td&gt;46.25&lt;/td&gt;&lt;td&gt;49.00&lt;/td&gt;&lt;td&gt;51.91&lt;/td&gt;&lt;td&gt;55.00&lt;/td&gt;&lt;td&gt;58.27&lt;/td&gt;&lt;td&gt;61.74&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;th&gt;2&lt;/th&gt;&lt;td&gt;65.41&lt;/td&gt;&lt;td&gt;69.30&lt;/td&gt;&lt;td&gt;73.42&lt;/td&gt;&lt;td&gt;77.78&lt;/td&gt;&lt;td&gt;82.41&lt;/td&gt;&lt;td&gt;87.31&lt;/td&gt;&lt;td&gt;92.50&lt;/td&gt;&lt;td&gt;98.00&lt;/td&gt;&lt;td&gt;103.8&lt;/td&gt;&lt;td&gt;110.0&lt;/td&gt;&lt;td&gt;116.5&lt;/td&gt;&lt;td&gt;123.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;th&gt;3&lt;/th&gt;&lt;td&gt;130.8&lt;/td&gt;&lt;td&gt;138.6&lt;/td&gt;&lt;td&gt;146.8&lt;/td&gt;&lt;td&gt;155.6&lt;/td&gt;&lt;td&gt;164.8&lt;/td&gt;&lt;td&gt;174.6&lt;/td&gt;&lt;td&gt;185.0&lt;/td&gt;&lt;td&gt;196.0&lt;/td&gt;&lt;td&gt;207.7&lt;/td&gt;&lt;td&gt;220.0&lt;/td&gt;&lt;td&gt;233.1&lt;/td&gt;&lt;td&gt;246.9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;th&gt;4&lt;/th&gt;&lt;td&gt;261.6&lt;/td&gt;&lt;td&gt;277.2&lt;/td&gt;&lt;td&gt;293.7&lt;/td&gt;&lt;td&gt;311.1&lt;/td&gt;&lt;td&gt;329.6&lt;/td&gt;&lt;td&gt;349.2&lt;/td&gt;&lt;td&gt;370.0&lt;/td&gt;&lt;td&gt;392.0&lt;/td&gt;&lt;td&gt;415.3&lt;/td&gt;&lt;td&gt;440.0&lt;/td&gt;&lt;td&gt;466.2&lt;/td&gt;&lt;td&gt;493.9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;th&gt;5&lt;/th&gt;&lt;td&gt;523.3&lt;/td&gt;&lt;td&gt;554.4&lt;/td&gt;&lt;td&gt;587.3&lt;/td&gt;&lt;td&gt;622.3&lt;/td&gt;&lt;td&gt;659.3&lt;/td&gt;&lt;td&gt;698.5&lt;/td&gt;&lt;td&gt;740.0&lt;/td&gt;&lt;td&gt;784.0&lt;/td&gt;&lt;td&gt;830.6&lt;/td&gt;&lt;td&gt;880.0&lt;/td&gt;&lt;td&gt;932.3&lt;/td&gt;&lt;td&gt;987.8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;th&gt;6&lt;/th&gt;&lt;td&gt;1047&lt;/td&gt;&lt;td&gt;1109&lt;/td&gt;&lt;td&gt;1175&lt;/td&gt;&lt;td&gt;1245&lt;/td&gt;&lt;td&gt;1319&lt;/td&gt;&lt;td&gt;1397&lt;/td&gt;&lt;td&gt;1480&lt;/td&gt;&lt;td&gt;1568&lt;/td&gt;&lt;td&gt;1661&lt;/td&gt;&lt;td&gt;1760&lt;/td&gt;&lt;td&gt;1865&lt;/td&gt;&lt;td&gt;1976&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;th&gt;7&lt;/th&gt;&lt;td&gt;2093&lt;/td&gt;&lt;td&gt;2217&lt;/td&gt;&lt;td&gt;2349&lt;/td&gt;&lt;td&gt;2489&lt;/td&gt;&lt;td&gt;2637&lt;/td&gt;&lt;td&gt;2794&lt;/td&gt;&lt;td&gt;2960&lt;/td&gt;&lt;td&gt;3136&lt;/td&gt;&lt;td&gt;3322&lt;/td&gt;&lt;td&gt;3520&lt;/td&gt;&lt;td&gt;3729&lt;/td&gt;&lt;td&gt;3951&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;th&gt;8&lt;/th&gt;&lt;td&gt;4186&lt;/td&gt;&lt;td&gt;4435&lt;/td&gt;&lt;td&gt;4699&lt;/td&gt;&lt;td&gt;4978&lt;/td&gt;&lt;td&gt;5274&lt;/td&gt;&lt;td&gt;5588&lt;/td&gt;&lt;td&gt;5920&lt;/td&gt;&lt;td&gt;6272&lt;/td&gt;&lt;td&gt;6645&lt;/td&gt;&lt;td&gt;7040&lt;/td&gt;&lt;td&gt;7459&lt;/td&gt;&lt;td&gt;7902&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;To implement this, we just need to add a frequency to our oscilator:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frequency&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;440.0&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;frequency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frequency&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If we change with the value of &lt;code class=&quot;highlighter-rouge&quot;&gt;frequency&lt;/code&gt;, we can play any note. For instance:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example4(261.6, 'sine')&quot;&gt;261.6Hz (C4)&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example4(440.0, 'sine')&quot;&gt;440Hz (A4)&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example4(830.6, 'sine')&quot;&gt;830.6Hz (G#5)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mix this with the ramp down timings and different signals, and you start to be able to create more interesting sounds.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example4(261.6, 'square')&quot;&gt;174.6Hz (F3) - Square&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example4(1109, 'sawtooth')&quot;&gt;1109Hz (C#6) - Sawtooth&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;js_play_sound&quot; data-source=&quot;example4(87.31, 'triangle')&quot;&gt;87.31 Hz (F2) - Triangle&lt;/a&gt;&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Kitchenless Restaurants</title>
     <link href="https://marcgg.com/blog/2016/10/17/kitchenless-restaurant/"/>
     <updated>2016-10-17T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2016/10/17/kitchenless-restaurant</id>
     <content type="html">
       &lt;p&gt;With all the changes in the way we order food, I’m wondering if we’re ever going to get to where restaurants will stop preparing food while still serving quality meals.&lt;/p&gt;

&lt;p&gt;If you really look at it, running a restaurant takes two vastely different sets of skills. First of all, you need to be able to cook tasty food in a consistent and timely manner. Then you also have to create a place where people will want to spend their lunch break or their diner date, creating an atmosphere and handling a team of people dealing with customers. Of course, there are restaurants with food so amazing you could eat it in a shack and others where the place looks so good you might even forget that what you’re eating is mediocre at best… but overall restaurants need to find a balance between the two aspects.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/kitchen.jpg&quot; alt=&quot;Kitchenless restaurant&quot; style=&quot;padding: 20px; width: 670px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;We know caterers, but they are often related to large scales orders such as weddings. Lately we are starting to see companies that only prepare food but have no place to actually eat it. They can rely on services like Deliveroo, Foodora, Uber Eats, Stuart and others to send their product to the customer and are able to reach more people by focusing on cooking. It really separates the food from the eating experience: less control on the presentation and general atmosphere. Deliveroo is even &lt;a href=&quot;https://techcrunch.com/2016/04/28/soul-kitchen/&quot;&gt;opening kitchen spaces&lt;/a&gt; to help restaurants &lt;a href=&quot;http://uk.businessinsider.com/deliveroo-planing-to-use-shipping-containers-to-fight-off-new-rivals-like-amazon-2016-5&quot;&gt;in areas with reduced supply&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Looking at this trend, it’s fair to wonder if we will see a significant number of places where you could eat but that wouldn’t have an onsite kitchen. Think of it as a modern food court.&lt;/p&gt;

&lt;h2 id=&quot;possible-experience&quot;&gt;Possible Experience&lt;/h2&gt;

&lt;p&gt;Everything would be focused on the eating experience, not really the food itself. So you would get a convenient app allowing you to book a table in advance, pick where you’d like to sit and so on. Of course you would be logged in, so the restaurant can remember what you ate, your visit paterns, your favorite seat and so on, in order to offer you a better service.&lt;/p&gt;

&lt;p&gt;When you show up at the place, it looks particularly nice and is more roomy than the average restaurant since they don’t need to have a large kitchen. There is no need to have a cooking staff or even respect food storage health requirements, so all the money is spent on the experience.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/restaurant.jpg&quot; alt=&quot;Kitchenless restaurant&quot; style=&quot;padding: 20px; width: 670px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;To monetize, the place takes a fee on every dish you order, but there is also a minimum spending fee on alcool or soft drinks and various partnerships with external kitchens. Since this is the only way for them to make money, the place works hard to increase how often you visit, sending you push notifications when they organize special events for instance.&lt;/p&gt;

&lt;p&gt;You are taken to your seat and order a bottle of wine. You then look at the menu, presented on a tablet: it’s a list of all the possible delivery options in this neighborhood and maybe a couple others that are exclusive to this kind of kitchenless restaurants. You pick delicious looking pasta and your date decides on sushi, and you are both pretty happy that you both could eat the kind of food you wanted this evening. You enter your order on the ipad and hand it back to the waiter.&lt;/p&gt;

&lt;p&gt;The place has a different entrance for deliveries, where a couple of persons welcome a constant flux of young people on bikes carrying the meals. They then store everything until they have a table’s full order. Once all the food has arrived, they place it on dishes, re-heat if needed thanks to an oven and a few micro waves, then take it to the customer.&lt;/p&gt;

&lt;p&gt;You don’t see any of this, and suddently both of your orders arrive at the same time. It’s a bit slower than in a traditionnal restaurant, but expectations changed and you were drinking wine while waiting, so you don’t really mind - especially since the place is a pleasure to stay at.&lt;/p&gt;

&lt;h2 id=&quot;is-this-going-to-happen&quot;&gt;Is This Going To Happen?&lt;/h2&gt;

&lt;p&gt;Depending on your opinion, this looks like the best world ever or a distopic nightmare.&lt;/p&gt;

&lt;p&gt;If this happened, we could see huge kitchen arround cities, shipping enormous quantities of somewhat normalized meals to weird “food consumption centers”… but it will open all kinds of opportunities as chefs would not be tied to a specific place and will be able to offer their food in different places, maybe supporting their new recipe experiments by also cooking burgers.&lt;/p&gt;

&lt;p&gt;We can now &lt;a href=&quot;https://plateculture.com/&quot;&gt;eat at a chef’s home&lt;/a&gt; or &lt;a href=&quot;https://labelleassiette.co.uk/&quot;&gt;have a vastly simplified catering experience&lt;/a&gt;, so I’m sure someone will try to make this concept work as well. However I’m very doubtful that it becomes the norm since for a lot of people you can’t entirely separate the food from the place it was cooked.&lt;/p&gt;

&lt;p&gt;Just like fast food, it might end up being just another option for consumers, with advantages and drawbacks.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Photos are under &lt;a href=&quot;https://creativecommons.org/licenses/by/2.0/&quot;&gt;Creative Common License&lt;/a&gt; and shot by &lt;a href=&quot;https://www.flickr.com/photos/hotels-paris-rive-gauche/&quot;&gt;Corinne Moncelli&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://www.flickr.com/photos/jseita&quot;&gt;Jun Seita&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>The Best Time To Arrive At A Startup Job Interview</title>
     <link href="https://marcgg.com/blog/2016/10/03/job-interview-time/"/>
     <updated>2016-10-03T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2016/10/03/job-interview-time</id>
     <content type="html">
       &lt;p&gt;I’ve spent &lt;a href=&quot;/blog/2016/08/02/developer-resume/&quot;&gt;a lot of time&lt;/a&gt; conducting job interviews over the past few years for the various startups I’ve been a part of. One of the things I noticed is that, while most people know that arriving late is never a good idea, a lot of candidates don’t realize that arriving too early is not the best move either.&lt;/p&gt;

&lt;p&gt;So what’s the perfect time to show up at your interview?&lt;/p&gt;

&lt;h2 id=&quot;arriving-too-early-gives-a-bad-first-impression&quot;&gt;Arriving Too Early Gives A Bad First Impression&lt;/h2&gt;

&lt;p&gt;If you arrive more than 15 minutes early, there’s a good chance that it will make your first contact with the company awkward and disturbing. The person you’re supposed to meet with will be working on something else and you’re interupting them… but they will feel obligated to come and say hello, find a way to entertain you and make sure you are confortable while you wait.&lt;/p&gt;

&lt;p&gt;This is especially true in a startup environement where there aren’t many people in the company. Everyone is often working in the same open space, right next to the sofa where you’ll be waiting. There’s also a good chance that your interviewer will be a couple of meters from you, rushing through their task to begin the interview earlier. The whole situation is just painful for every person involved.&lt;/p&gt;

&lt;p&gt;Your first chance to make a good impression is now tainted with awkwardness and disruption of the interviewer’s time. You’ve successfuly became that one friend that shows up way too early at the party while the hosts are still decorating.&lt;/p&gt;

&lt;h2 id=&quot;on-time-is-almost-too-late&quot;&gt;On Time Is Almost Too Late&lt;/h2&gt;

&lt;p&gt;Arriving late is the worst way to begin an interview. If this happens to you, even if you’re only two minutes late, you should apologize profusely and hope this isn’t an eliminating factor for the person you’ll be talking to. Note that “it took longer than expected” is not a valid answer, you should have planned better. You should also send a quick email stating that you’ll be a few minutes late.&lt;/p&gt;

&lt;p&gt;However, if you arrive at the exact time scheduled, then it’s almost the same as if you were late. You will probably have to take an elevator, talk to a receptionist, be guided to a meeting room and so on.&lt;/p&gt;

&lt;p&gt;While you were on time to show up at the company’s door, you’ll be late at the actual job interview and loose important face time with your interviewer.&lt;/p&gt;

&lt;h2 id=&quot;when-to-arrive-at-your-job-interview&quot;&gt;When To Arrive At Your Job Interview&lt;/h2&gt;

&lt;p&gt;I really think that &lt;strong&gt;the optimal arrival time is between 5 and 10 minutes early&lt;/strong&gt; depending on the company’s size. Usually more toward 5 minutes if it’s a startup and 10 minutes if it’s a larger group. This is how early you should have your first interaction with someone working for the company.&lt;/p&gt;

&lt;p&gt;Note that I didn’t say to arrive on the site 5-10 minutes early. As a matter of fact you should try to arrive at least 20-30 minutes early, just to make sure you won’t be late, but don’t go inside the building just yet. First, check where the door is. Then you can go for a quick walk, take a look the neighborhood where you could end up working, make sure your phone is on vibrate, grab a coffee or just find a seat somewhere and try to relax.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/interview_timeline.jpg&quot; alt=&quot;When to show up at a job interview&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Anything later than this and you run into the risk of showing up late. Remember that you might have to ask security for a badge, wait for an elevator and so on.  Anything earlier and you’ll disrupt your interviewer’s day that has to suddently stop working to deal with you. While not the worse situation, this is clearly not the best first impression you could give.&lt;/p&gt;

&lt;p&gt;It might seems like overthinking it, but if you’re interviewing with someone who have seen hundreds of candidates, every little detail counts.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Understanding Rails' Forgery Protection Strategies</title>
     <link href="https://marcgg.com/blog/2016/08/22/csrf-rails/"/>
     <updated>2016-08-22T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2016/08/22/csrf-rails</id>
     <content type="html">
       &lt;p&gt;Cross-site request forgery or &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;CSRF&lt;/a&gt; is a well known attack that has been &lt;a href=&quot;https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)_Prevention_Cheat_Sheet&quot;&gt;vastly documented&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To deal with this, Rails has the &lt;code class=&quot;highlighter-rouge&quot;&gt;RequestForgeryProtection&lt;/code&gt; module that gives access to &lt;code class=&quot;highlighter-rouge&quot;&gt;protect_from_forgery&lt;/code&gt;. It’s now set by default when you create a new Rails project and takes the form of a single line of code in the application controller:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;protect_from_forgery&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;with: :exception&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This &lt;code class=&quot;highlighter-rouge&quot;&gt;with&lt;/code&gt; parameter is actually the &lt;code class=&quot;highlighter-rouge&quot;&gt;forgery_protection_strategy&lt;/code&gt; parameter, it tells Rails how to behave when a CSRF attack is identified.&lt;/p&gt;

&lt;h2 id=&quot;the-different-forgery-protection-strategies&quot;&gt;The Different Forgery Protection Strategies&lt;/h2&gt;

&lt;p&gt;There are &lt;a href=&quot;https://github.com/rails/rails/blob/v5.0.0/actionpack/lib/action_controller/metal/request_forgery_protection.rb#L140-L198&quot;&gt;3 strategies&lt;/a&gt; currently built into the  &lt;code class=&quot;highlighter-rouge&quot;&gt;RequestForgeryProtection ::ProtectionMethods&lt;/code&gt; module of &lt;code class=&quot;highlighter-rouge&quot;&gt;ActionController&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;exception&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;null_session&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;reset_session&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;null_session&lt;/code&gt; strategy is the default one. The gotcha here is that by default Rails 5 generates the &lt;code class=&quot;highlighter-rouge&quot;&gt;ApplicationController&lt;/code&gt; file with the &lt;code class=&quot;highlighter-rouge&quot;&gt;exception&lt;/code&gt; strategy, but the default strategy &lt;a href=&quot;https://github.com/rails/rails/blob/v5.0.0/actionpack/lib/action_controller/metal/request_forgery_protection.rb#L125&quot;&gt;inside ActionPack&lt;/a&gt; is actually the &lt;code class=&quot;highlighter-rouge&quot;&gt;null_session&lt;/code&gt; one, which can be confusing.&lt;/p&gt;

&lt;h3 id=&quot;exception&quot;&gt;Exception&lt;/h3&gt;

&lt;p&gt;This is the one Rails 5 sets up by default. It will raise an exception if a CSRF attack occurs:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;protect_from_forgery&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;with: :exception&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This strategy ensures that the execution stops right after the &lt;code class=&quot;highlighter-rouge&quot;&gt;verify_authenticity_token&lt;/code&gt; check if the request is fraudulent.&lt;/p&gt;

&lt;h3 id=&quot;null-session&quot;&gt;Null Session&lt;/h3&gt;

&lt;p&gt;This strategy will not cause the app to crash but will instead &lt;a href=&quot;https://github.com/rails/rails/blob/v5.0.0/actionpack/lib/action_controller/metal/request_forgery_protection.rb#L147-L153&quot;&gt;nullify the session for the duration of the request&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;protect_from_forgery&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# or&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;protect_from_forgery&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;with: :null_session&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note that while this is now the default, Rails 3 didn’t generate the &lt;code class=&quot;highlighter-rouge&quot;&gt;ApplicationController&lt;/code&gt; file with the &lt;code class=&quot;highlighter-rouge&quot;&gt;with: :exception&lt;/code&gt; parameter, so you didn’t touch a thing and have an old app that you kept on updating, you might have the &lt;code class=&quot;highlighter-rouge&quot;&gt;null_session&lt;/code&gt; strategy set up and not even know it.&lt;/p&gt;

&lt;h3 id=&quot;reset-session&quot;&gt;Reset Session&lt;/h3&gt;

&lt;p&gt;The third strategy, &lt;code class=&quot;highlighter-rouge&quot;&gt;reset_session&lt;/code&gt;, simply calls the &lt;code class=&quot;highlighter-rouge&quot;&gt;reset_session&lt;/code&gt; of &lt;code class=&quot;highlighter-rouge&quot;&gt;@controller&lt;/code&gt; as you can see &lt;a href=&quot;https://github.com/rails/rails/blob/v5.0.0/actionpack/lib/action_controller/metal/request_forgery_protection.rb#L179-L187&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;protect_from_forgery&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;with: :reset_session&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;important-note-on-security&quot;&gt;Important Note On Security&lt;/h3&gt;

&lt;p&gt;It is very important to keep in mind that &lt;strong&gt;fraudulent requests will go through&lt;/strong&gt; with the &lt;code class=&quot;highlighter-rouge&quot;&gt;null_session&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;reset_session&lt;/code&gt; strategies. The only action taken by these strategies is to make sure the session is empty during the request.&lt;/p&gt;

&lt;p&gt;As an illustration here are the logs for a fraudulent request:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Started POST &quot;/posts&quot;
Processing by PostsController#create as */*
Can't verify CSRF token authenticity.
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.0ms)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I think that it is quite counter intuitive and might cause serious security concerns depending on your implementation. Brakeman even considers using other strategies &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/648&quot;&gt;to be an issue&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to learn more about this, Jason Yeo explains it in depth in his great article, “&lt;a href=&quot;https://blog.srcclr.com/when-rails-protect_from_forgery-fails/&quot;&gt;When Rails’ protect from forgery Fails&lt;/a&gt;”. If you’re unsure of your implementation, the safe approach is to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;exception&lt;/code&gt; strategy.&lt;/p&gt;

&lt;h2 id=&quot;building-a-custom-strategy&quot;&gt;Building A Custom Strategy&lt;/h2&gt;

&lt;p&gt;In some cases it can be interesting to build your own strategy. Let’s say you don’t want to return 500s when a CSRF attack occurs, but you still want to be warned or at least have better logs.&lt;/p&gt;

&lt;h3 id=&quot;how-it-works&quot;&gt;How It Works&lt;/h3&gt;

&lt;p&gt;First, let’s take a look at how all this works:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/csrf_rails.jpg&quot; alt=&quot;Google analytics drop&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;The requests goes through &lt;code class=&quot;highlighter-rouge&quot;&gt;verify_authenticity_token&lt;/code&gt;. If there is an issue, it then logs a warning and then calls the &lt;code class=&quot;highlighter-rouge&quot;&gt;handle_unverified_request&lt;/code&gt; method of the &lt;code class=&quot;highlighter-rouge&quot;&gt;forgery_protection_strategy&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;getting-an-exception&quot;&gt;Getting An Exception&lt;/h3&gt;

&lt;p&gt;First, let’s get a &lt;code class=&quot;highlighter-rouge&quot;&gt;InvalidAuthenticityToken&lt;/code&gt; exception. If you want to do it properly, you probably want to do this writing tests, but to demonstrate this I’ll be using &lt;a href=&quot;https://curl.haxx.se/&quot;&gt;curl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Start your server and call a POST action that has &lt;code class=&quot;highlighter-rouge&quot;&gt;protect_from_forgery&lt;/code&gt; activated using curl. This way you’re sure that you don’t have the proper &lt;a href=&quot;http://guides.rubyonrails.org/security.html#cross-site-request-forgery-csrf&quot;&gt;authenticity token&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl -X POST -I http://localhost:3000/secure_post_action
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You should see this in your logs:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Can't verify CSRF token authenticity.
Completed 422 Unprocessable Entity in 1ms (ActiveRecord: 0.0ms)
ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;adding-a-custom-forgery-protection-strategy&quot;&gt;Adding A Custom Forgery Protection Strategy&lt;/h3&gt;

&lt;p&gt;Now that we know how to quickly test, let’s add our new strategy.&lt;/p&gt;

&lt;p&gt;Any forgery propection strategy needs to be initalized with a controller and respond to &lt;code class=&quot;highlighter-rouge&quot;&gt;handle_unverified_request&lt;/code&gt;. So the bare minimum here is:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyStrategy&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle_unverified_request&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then you can use it by changing your controller code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;protect_from_forgery&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;with: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MyStrategy&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now you can get your strategy to do whatever you’d like and check the result by running the curl command. To give you ideas, here’s what I implemented on a project to get a bit more logs while still falling back on the &lt;code class=&quot;highlighter-rouge&quot;&gt;null_session&lt;/code&gt; strategy:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoggingForgeryStrategy&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@controller&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle_unverified_request&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;warn&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;handle_unverified_request&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;controller_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;action_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;params=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; - &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;null_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;handle_unverified_request&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;request&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;request&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;null_session&lt;/span&gt;
   &lt;span class=&quot;no&quot;&gt;ActionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RequestForgeryProtection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ProtectionMethods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;NullSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Why Resumes Are Actually Helpful</title>
     <link href="https://marcgg.com/blog/2016/08/02/developer-resume/"/>
     <updated>2016-08-02T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2016/08/02/developer-resume</id>
     <content type="html">
       &lt;p&gt;I’m a developer, but I’ve always spent time helping with recruitment for the various companies I’ve been a part of. I’m even doing that to a lesser extend as a consultant. Based on this experience, I think I can say that we should stop saying that a developer doesn’t need a resume of any kind and that Github alone is enough. I thought this was a closed subject, that we stopped believing that &lt;a href=&quot;http://anti-pattern.com/github-is-your-resume-now&quot;&gt;Github is your developer portfolio&lt;/a&gt;, but I still see people applying with a Github account and almost getting offended if I ask if they have at least a Linkedin profile.&lt;/p&gt;

&lt;p&gt;I’m not going into details regarding why not having something ressembling a resume is a poor idea on general. James Coglan already did it in the great article “&lt;a href=&quot;https://blog.jcoglan.com/2013/11/15/why-github-is-not-your-cv/&quot;&gt;Why GitHub is not your CV&lt;/a&gt;”, that can be summed up with this quote:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;So really, your GitHub profile displays two things: how ‘influential’ you are, and how easily you can be coerced into constantly working. It’s honestly about as relevant to a decent hiring decision as your Klout score.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;I also recommend Ashe Dryden’s article: “&lt;a href=&quot;https://www.ashedryden.com/blog/the-ethics-of-unpaid-labor-and-the-oss-community&quot;&gt;The Ethics of Unpaid Labor And The OSS Community&lt;/a&gt;“.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Instead in this article I’ll focus on why, if you apply to a job without something resembling a resume, you’re making the life of the person in front of you harder and generally make the whole process more painful than it needs to be.&lt;/p&gt;

&lt;h2 id=&quot;why-a-resume-is-useful-to-me&quot;&gt;Why A Resume Is Useful To Me&lt;/h2&gt;

&lt;p&gt;Of course, standing on the recruiter side, I can do without a perfectly formatted resume. However I do need a place to look up what you did before contacting me. A Linkedin page is fine, but it needs to be somewhat up to date and with more than just the company names. I don’t need this to be annoying, but because of multiple small problems that occurs when I don’t have this document.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: from now on if I mention “resume”, I really mean “something resembling a resume, meaning a timeline of experiences and list of skills with basic descriptions”. Linkedin is fine, so is a personnal website with a decent about me section.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;memory&quot;&gt;Memory&lt;/h3&gt;

&lt;p&gt;I can end up talking to a lot of people about a position, and my memory is not perfect. It’s great to have a document that I can check to remember if you spent 1 year or 2 at company X, or if you do speak fluent german or not.&lt;/p&gt;

&lt;p&gt;I have my notes, of course, but if I have to write down every single detail the interview process is going to be painful for the both of us. I’d rather listen to you and ask meaningful questions than write down the number of years you spent in a given company.&lt;/p&gt;

&lt;h3 id=&quot;multiple-interviewers&quot;&gt;Multiple Interviewers&lt;/h3&gt;

&lt;p&gt;I never hired a developer without having them see at least a couple more people than myself. In this case I often brief the other interviewers in order to not have the candidate repeat over and over their previous experiences. If I don’t have something resembling a resume, this becomes an more tedious task.&lt;/p&gt;

&lt;p&gt;Later, if you have a few interviewers seeing a few candidates, having a resume to look at when discussing is also more convevient. It’s a clearer starting point for discussion than just a name and our respective notes.&lt;/p&gt;

&lt;h3 id=&quot;better-interviews&quot;&gt;Better Interviews&lt;/h3&gt;

&lt;p&gt;Having a timeline of a candidate’s experiences is also a great way to guide a first interview. It’s easy to follow along when the candidate is explaining their background and previous positions. It also makes going back to something that was said earlier simpler, as company names, technologies, dates and projects are written down in front of me as we speak.&lt;/p&gt;

&lt;p&gt;Having a resume can also lead to better conversations. For instance I could notice a past experience in a company that I know about, or a piece of technology you used that I’m interested in. Candidates without this would have to mention their whole work experience out loud in order to get the same effect.&lt;/p&gt;

&lt;h2 id=&quot;why-github-often-wastes-my-time&quot;&gt;Why Github Often Wastes My Time&lt;/h2&gt;

&lt;p&gt;If you look at &lt;a href=&quot;https://github.com/marcgg?tab=repositories&quot;&gt;my github account&lt;/a&gt;, you’ll see that it’s a mess.&lt;/p&gt;

&lt;p&gt;There’s all kinds of randomness going on: my dotfiles, this site, a very old but somewhat popular jQuery plugin, terrible hackaton code, a few backups, a couple of forks that were merged (or not), projects I gave up on, projects still running, demo repositories for when I give classes…&lt;/p&gt;

&lt;p&gt;I don’t really mind though, because I wouldn’t apply to a job with this. Most developers are just like me in this, most of our best work is private… but still, why so many people send their Github account when there is nothing relevant on there?&lt;/p&gt;

&lt;p&gt;To be honest, I totally gave up on looking at Github unless the candidate explicitely points to a given repository. If I do browse the code on my own, it will &lt;em&gt;always&lt;/em&gt; ends in a discusion like this one:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;Me&lt;/span&gt;: I’ve looked at your Github account since you sent it with your application. On project Y I wondered why you made this choice…?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;Candidate&lt;/span&gt;: That’s an old project I don’t even remember.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;Me&lt;/span&gt;:  Okay, well on project Z I found a couple of situations where I felt like the code was subpar. What lead you to write it this way?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;Candidate&lt;/span&gt;: This project was done during a weekend, it’s hacked together so the code is terrible. I’d rather not talk about this one.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;Me&lt;/span&gt;: Is there a repository I could look at?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;Candidate&lt;/span&gt;: Not really, most of my best work is private.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;Me&lt;/span&gt;:  (ಠ_ಠ)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;looking-at-code&quot;&gt;Looking At Code&lt;/h2&gt;

&lt;p&gt;To make it clear, I do want to look at code a candidate wrote. I value that way more than what they could do “on paper”, their past experiences and the university they attended 5 years ago.&lt;/p&gt;

&lt;p&gt;That’s why I like to be able to look at relevant code rather than whatever is on the candidate’s Github. For instance, here’s what I usually ask a candidate to bring:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Code written during a previous job&lt;/li&gt;
  &lt;li&gt;Maintained open source code&lt;/li&gt;
  &lt;li&gt;Pet project actually running in production&lt;/li&gt;
  &lt;li&gt;Freelance work&lt;/li&gt;
  &lt;li&gt;A homemade technical test done before the interview&lt;/li&gt;
  &lt;li&gt;Technical tests made for other companies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From this starting point, we can then discuss tradeoffs, architecture choices, their understanding of the codebase, how they maintained it over time and so on.&lt;/p&gt;

&lt;p&gt;I also value code written in a context closer to their future day job more than what I could ask the candidate to write on the spot. That’s why I don’t make developers write code in front of me, under pressure or ask them to write actual code on whiteboards…&lt;/p&gt;

&lt;p&gt;I’d much rather discuss what they wrote in the past and other interesting technical topics. I feel like it makes for a more interesting interviewing experience and allows me to better judge how the candidate is going to perform in real situations:  someone can be very good at interview riddles and coding puzzles under pressure, but still be a terrible developer.&lt;/p&gt;

&lt;h2 id=&quot;experience-and-code&quot;&gt;Experience And Code&lt;/h2&gt;

&lt;p&gt;So really there are two subjects: past experiences and actual work accomplished. When I’m looking for a person to join my team, I want to know about about the two.&lt;/p&gt;

&lt;p&gt;If you’re a prolific open source developer or a very junior programmer, I might find both on your Github. However, if you’re like most people, it’s better to stick to a resume or update your Linkedin.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Bugmastery: The art of making sure you catch every bug in production</title>
     <link href="https://marcgg.com/blog/2016/07/04/monitoring-bugs/"/>
     <updated>2016-07-04T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2016/07/04/monitoring-bugs</id>
     <content type="html">
       &lt;p&gt;No one wants bugs in their app. Developers, end users, product owners… everybody agree on this one. However I’m always surprised by the number of companies that don’t pay much attention to production bugs.&lt;/p&gt;

&lt;p&gt;In this article I’ll try to explain how we handle bug monitoring at &lt;a href=&quot;https://www.drivy.com/&quot;&gt;Drivy&lt;/a&gt;, the company I’m currently working for. Of course, it’s not perfect: we’ve iterated quite a bit over the years, and we’ll continue doing so. If you see improvements we can make, please leave a comment!&lt;/p&gt;

&lt;h2 id=&quot;detecting-bugs&quot;&gt;Detecting Bugs&lt;/h2&gt;

&lt;p&gt;The first step of fixing bugs is knowing that they exist. The worst kind of problems are the ones that goes undetected for a long time!&lt;/p&gt;

&lt;h3 id=&quot;user-reports&quot;&gt;User Reports&lt;/h3&gt;

&lt;p&gt;If you only rely on user reports to find bugs, you’re going to have a bad time. However it’s important to keep an eye out for user reports.&lt;/p&gt;

&lt;p&gt;At Drivy we have a team dedicated to customer support, but they handle all kind of calls. On some occasions there will be reports of problems, so we created a Slack channel called #ask-a-tech where they can tell the development team about possible bugs.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/ask_a_tech.png&quot; alt=&quot;Bug report on slack&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;This is a simpler, lighter process than creating Jira or &lt;a href=&quot;http://www.fogcreek.com/fogbugz/&quot;&gt;Fogbugz&lt;/a&gt; to discuss between departments and it allows us to be quicker to respond while getting more information from the person in contact with the user. We’re still a somewhat small team so it still scales well.&lt;/p&gt;

&lt;p&gt;Of course we also worked on a frequently asked questions and known bugs section in our internal wiki:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/faq_tech.png&quot; alt=&quot;Bugs&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;bugtracking-apps&quot;&gt;Bugtracking Apps&lt;/h3&gt;

&lt;p&gt;More and more people use tools like &lt;a href=&quot;https://getsentry.com/welcome/&quot;&gt;Sentry&lt;/a&gt;,  &lt;a href=&quot;https://rollbar.com/&quot;&gt;Rollbar&lt;/a&gt; or &lt;a href=&quot;https://bugsnag.com/&quot;&gt;Bugsnag&lt;/a&gt;, to detect &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/HTTP/Response_codes&quot;&gt;500s&lt;/a&gt;. If you’re not using one, I highly encourage you to try it out. Most of them are very quick to setup and you’ll instantly get a better view over what’s going on in your app.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/bugsnag_blur.png&quot; alt=&quot;Bugsnag&quot; style=&quot;padding: 20px; width: 700px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;At Drivy we’ve been using Bugsnag and are quite happy with it. Before that we were using Exceptionnal (now &lt;a href=&quot;https://airbrake.io/&quot;&gt;Airbreak&lt;/a&gt;), but I really wouldn’t recommend it. I’ve also had a good experience with Sentry in the past.&lt;/p&gt;

&lt;h3 id=&quot;tracking-metrics&quot;&gt;Tracking Metrics&lt;/h3&gt;

&lt;p&gt;Sometimes a bug won’t simply cause a page to break, raising an easily catchable 500. Instead, they will drive away traffic over time, lower conversion, corrupt data or generally be an inconvenience to users.&lt;/p&gt;

&lt;p&gt;These bugs are way harder to detect.&lt;/p&gt;

&lt;p&gt;When possible, we try to get bugs to either crash or, at least, notify us. Still, we can never be sure we caught every edge cases. In order to be more confident, we monitor metrics that would be impacted by these problems. For instance if you have a bug in your Facebook login integration, you will see less successful users logging in from Facebook, but the site might not return a 500 on the login endpoint.&lt;/p&gt;

&lt;h4 id=&quot;universal-analytics&quot;&gt;Universal Analytics&lt;/h4&gt;

&lt;p&gt;We use &lt;a href=&quot;https://support.google.com/analytics/answer/2790010?hl=en&quot;&gt;Universal Analytics&lt;/a&gt; for a lot of different things, including &lt;a href=&quot;http://marcgg.com/blog/2015/05/26/ab-testing-in-real-life-google-analytics/&quot;&gt;A/B tests&lt;/a&gt; and custom event monitoring. With &lt;a href=&quot;https://support.google.com/analytics/answer/1320491?hl=en&quot;&gt;custom alerts&lt;/a&gt;, we are alerted if some important business KPIs go under a certain level that indicate a bug.&lt;/p&gt;

&lt;h4 id=&quot;redash&quot;&gt;re:dash&lt;/h4&gt;

&lt;p&gt;We also use &lt;a href=&quot;http://redash.io/&quot;&gt;re:dash&lt;/a&gt; to easily pull data from our &lt;a href=&quot;http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Replication.html&quot;&gt;replica database&lt;/a&gt; and create dashboards. This is used mainly for business KPIs, but it can also be used to build graphs used by developers in order to monitor a particular part of the app.&lt;/p&gt;

&lt;p&gt;For instance if the volume of a certain event changes or takes a new pattern, it can be detected at a glance.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/redash.jpg&quot; alt=&quot;Redash&quot; style=&quot;padding: 20px; width: 700px;&quot; /&gt;&lt;/div&gt;

&lt;h4 id=&quot;tracking-logs-with-logmatic&quot;&gt;Tracking Logs With Logmatic&lt;/h4&gt;

&lt;p&gt;In the past year we went from &lt;a href=&quot;https://logentries.com/&quot;&gt;Logentries&lt;/a&gt; to &lt;a href=&quot;http://logmatic.io/&quot;&gt;Logmatic&lt;/a&gt; and never looked back. Not only it is a great tool to debug production issues, but it is also allows us to create very detailed dashboards based on logs.&lt;/p&gt;

&lt;p&gt;For instance we use it to track how much time a given &lt;a href=&quot;http://sidekiq.org/&quot;&gt;Sidekiq&lt;/a&gt; job takes. This, in addition to their alerts feature allows us to make sure there isn’t some weird performance issue sneaking into a job.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/sidekiq_tracking.jpg&quot; alt=&quot;Sidekiq tracking&quot; style=&quot;padding: 20px; width: 300px;&quot; /&gt;&lt;/div&gt;

&lt;h4 id=&quot;time-based-metrics&quot;&gt;Time Based Metrics&lt;/h4&gt;

&lt;p&gt;We’re getting more and more into unifying time based dashboards with &lt;a href=&quot;https://github.com/influxdata/telegraf&quot;&gt;Telegraf&lt;/a&gt;, &lt;a href=&quot;https://influxdata.com/&quot;&gt;Influxdb&lt;/a&gt; and &lt;a href=&quot;http://grafana.org/&quot;&gt;Grafana&lt;/a&gt;. This way it reduces the number of dashboards one has to look at.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/monitoring_grafana.jpg&quot; alt=&quot;New Relic tracking&quot; style=&quot;padding: 20px; width: 700px;&quot; /&gt;&lt;/div&gt;

&lt;h4 id=&quot;custom-jobs&quot;&gt;Custom Jobs&lt;/h4&gt;

&lt;p&gt;In some cases monitoring outside the app is impossible or too costly. To still be certain that there are no bugs there, we also write custom jobs to check asynchronously if certain pieces of the app are behaving correctly and send us notifications if they don’t.&lt;/p&gt;

&lt;h4 id=&quot;performance-monitoring&quot;&gt;Performance Monitoring&lt;/h4&gt;

&lt;p&gt;I won’t get too much into general performance monitoring, because it’s another subject altogether. To sum it up, we use &lt;a href=&quot;https://newrelic.com/&quot;&gt;New Relic&lt;/a&gt; and the usual tracking related to our stack on &lt;a href=&quot;https://aws.amazon.com/cloudwatch/&quot;&gt;AWS&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/newrelic_perf.jpg&quot; alt=&quot;New Relic tracking&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;monitoring-bugs&quot;&gt;Monitoring Bugs&lt;/h2&gt;

&lt;p&gt;Having nice dashboards and robust tracking is one thing, but if you don’t look at them they’re pretty much worthless. On the other hand if you have too much information it becomes noise. You also have to make decisions regarding how much monitoring you want to be doing versus building new things.&lt;/p&gt;

&lt;h3 id=&quot;alertsusually&quot;&gt;AlertsUsually&lt;/h3&gt;

&lt;h4 id=&quot;pagerduty&quot;&gt;PagerDuty&lt;/h4&gt;

&lt;p&gt;When possible, we try to be notified by the various apps. We use &lt;a href=&quot;https://www.pagerduty.com/&quot;&gt;PagerDuty&lt;/a&gt; when possible. This way we can react as fast as possible when there is a real production breaking problem.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/pagerduty.jpg&quot; alt=&quot;Pagerduty&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;h4 id=&quot;others&quot;&gt;Others&lt;/h4&gt;

&lt;p&gt;A lot of the services I mentioned do send alerts, including Logmatic, New Relic, &lt;a href=&quot;https://aws.amazon.com/cloudwatch/&quot;&gt;Cloudwatch&lt;/a&gt; and so on. Here it’s really a matter of fine tuning the thresholds to make sure the notifications sent are real issues and not noise.&lt;/p&gt;

&lt;h3 id=&quot;reacting-to-a-production-breaking-bug&quot;&gt;Reacting To A Production Breaking Bug&lt;/h3&gt;

&lt;p&gt;If there is a problem so huge that the site is either down or severely degraded, we’ll be notified via PagerDuty and the person in charge at this point will take action and report everything that is going on in our #war-room Slack channel. This way everyone is kept in the loop.&lt;/p&gt;

&lt;p&gt;Thankfully it doesn’t happen often.&lt;/p&gt;

&lt;h3 id=&quot;dealing-with-500s-the-bugmaster&quot;&gt;Dealing With 500s: The Bugmaster&lt;/h3&gt;

&lt;p&gt;In 99.99% of the cases the 500s occurring on the site are isolated issues that, while annoying, only impact a reduced amount of users and don’t bring the site to a stop.&lt;/p&gt;

&lt;p&gt;However, until someone looks at what is happening, we don’t really know what is going on.&lt;/p&gt;

&lt;p&gt;This is why every week a developer is in charge of making sure that every crash on the website has been properly investigated. We call this person “the bugmaster”, and almost everyone in the team is in the rotation to take this role. To decide who is going to be the bugmaster for a given week, we built a simple script in a shared Google spreadhseet that sends an email to the team.&lt;/p&gt;

&lt;p&gt;When a 500 appears, it is sent to Bugsnag. The bugmaster then needs to check it out and decide what to do. They can spend a few minutes trying to reproduce the bug or discover the section of the codebase impacted.&lt;/p&gt;

&lt;p&gt;Then they can either take care of the bug themselves or assign it to someone else that knows more about it. To do this, Bugsnag has a convenient assignation feature and various filters to see every errors associated to you. We also built a bot to send reminders to the bugmaster for as long as the bug is unassigned.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/notif_assign.jpg&quot; alt=&quot;Slack assigning bug notif&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Once a bug has been assigned to a developer, they can either:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fix it right away&lt;/li&gt;
  &lt;li&gt;Create a Github issue to fix it later on&lt;/li&gt;
  &lt;li&gt;Re-assign it to someone&lt;/li&gt;
  &lt;li&gt;Send it back to the bugmaster if they don’t have any time to work on it right now&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While the bug is assigned to them and no action have been made, the developer will get Slack reminders.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/in_progress_bug.jpg&quot; alt=&quot;Snoozing bugs&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;If they decide to fix it later, they can “snooze” the bug. Snoozing means that they are going to be notified once an exception occurred again a given number of times (1, 10, 100 or 1000). It doesn’t mean that we fixed or decided to ignore the exception, but instead that we want to be aware of the frequency of this particular problem.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/snooze.png&quot; alt=&quot;Snoozing bugs&quot; style=&quot;padding: 20px; width: 300px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;The important thing here is that once a bug appears we make sure someone is aware of it and took some actions to make sure it’s under control.&lt;/p&gt;

&lt;p&gt;Because of this objective of triaging every crash in the product app, the bugmaster’s objective is to always be at inbox zero on bugs.&lt;/p&gt;

&lt;h4 id=&quot;note-on-not-reacting-right-away&quot;&gt;Note On Not Reacting Right Away&lt;/h4&gt;

&lt;p&gt;This might sound counter intuitive: if there is a bug, why not spend time right away to fix it?&lt;/p&gt;

&lt;p&gt;Well, firstly, we do not “snooze” every single exception without giving it some thought first. The decision to do this is a matter of criticality and focus. Any complex production site with enough traffic is going to raises 500s, it’s pretty much inevitable. However these exceptions are not equal and it’s up to a developer to decide what to do.&lt;/p&gt;

&lt;p&gt;Here are some examples where we think that snoozing can be appropriate:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Very weird exception happening for the first time on a non critical page. e.g.: UTF8 Encoding error from a bot on a SEO page&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;There was a deploy and a race condition occurred. e.g.: Missing attribute ‘name’ because a migration was still running&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;There is a known issue that is considered hard or time consuming to fix. Everybody knows about it and we’re going to get to it eventually.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fixing-bugs&quot;&gt;Fixing Bugs&lt;/h2&gt;

&lt;p&gt;Now for the fun part! I’m not going to go too much in depth here however, but it might be the subject of another blog post.&lt;/p&gt;

&lt;h3 id=&quot;shipping-quickly&quot;&gt;Shipping Quickly&lt;/h3&gt;

&lt;p&gt;If you reduce the cost of shipping code to production, you’ll do it more often and it’ll be easy to ship bug fixes and make users happy.&lt;/p&gt;

&lt;p&gt;For instance at Drivy we worked a lot on our deployment pipeline and nowadays we use a command line tool to release. Of course since we love Slack, everything is plugged into it:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/slack_cli.jpg&quot; alt=&quot;Drivy CLI&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;In general, I recommend to read “&lt;a href=&quot;https://zachholman.com/posts/deploying-software&quot;&gt;How to deploy software: Make your team’s deploys as boring as hell and stop stressing about it&lt;/a&gt;” by &lt;a href=&quot;https://twitter.com/holman&quot;&gt;Zach Holman&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;preventing-regressions&quot;&gt;Preventing Regressions&lt;/h3&gt;

&lt;p&gt;Once a bugfix has been made, it’s important to make sure it doesn’t happen again in slightly different circumstances. This is why every piece of code fixing a bug is usually paired with a few automated tests.&lt;/p&gt;

&lt;h2 id=&quot;avoiding-bugs&quot;&gt;Avoiding Bugs&lt;/h2&gt;

&lt;p&gt;Of course the best way to handle bugs is to not have them in the first place!&lt;/p&gt;

&lt;p&gt;To do so we have a lot of automated tests running on a CI server, small and very frequent deployments, code reviews, emphasis on code quality, &lt;a href=&quot;http://marcgg.com/blog/2016/02/22/git-flow-heroku-pipelines/&quot;&gt;an efficient yet simple Git flow&lt;/a&gt;, &lt;a href=&quot;https://zachholman.com/posts/deploying-software#prepare&quot;&gt;feature flags&lt;/a&gt;… as well as a team of people that want to ship code with as little bugs as possible.&lt;/p&gt;

&lt;p&gt;Overall I feel like the way we do things has evolved a lot over the years, but it is quite robust and it’s very rare when we are caught off guard by a serious bug. This gives an overall better end user experience, but it is also great to work on a project that feels stable and under control.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>First Impressions: Rails 5 on Google App Engine</title>
     <link href="https://marcgg.com/blog/2016/05/09/rails-app-engine/"/>
     <updated>2016-05-09T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2016/05/09/rails-app-engine</id>
     <content type="html">
       &lt;p&gt;The past week had two great news: &lt;a href=&quot;https://cloudplatform.googleblog.com/2016/05/Ruby-on-Google-App-Engine-goes-betaruntime.html&quot;&gt;Ruby on Google App Engine went beta&lt;/a&gt; and &lt;a href=&quot;https://rubygems.org/gems/rails/versions/5.0.0.rc1&quot;&gt;Rails 5.0.0.rc1 was released&lt;/a&gt;. I decided it was a good opportunity to try both!&lt;/p&gt;

&lt;p&gt;This article relates my experience trying to run a very basic Rails 5.0.0.rc1 application on the Google App Engine. As a reference, I’m fairly experienced with Rails but I never really used the Google App Engine before. It’s also worth mentionning that I’m used to platforms like Heroku, but I used Amazon solutions as well.&lt;/p&gt;

&lt;h2 id=&quot;basic-setup&quot;&gt;Basic Setup&lt;/h2&gt;

&lt;h3 id=&quot;account-creation&quot;&gt;Account Creation&lt;/h3&gt;

&lt;p&gt;I don’t want to spend any money for this test, so I digged into &lt;a href=&quot;https://cloud.google.com/appengine/docs/quotas&quot;&gt;Google’s pricing structure&lt;/a&gt; and they do announce a free tier with limited instance hours. Creating a “free trial” account does require a credit card, which worries me a bit, but they do say “Don’t worry, you will not be billed for the free trial”, so hopefuly I’ll be ok.&lt;/p&gt;

&lt;h3 id=&quot;setting-up-the-instance&quot;&gt;Setting Up The Instance&lt;/h3&gt;

&lt;p&gt;Right away they send me into a tutorial with some &lt;a href=&quot;http://cl.ly/1H2J2y2J461W&quot;&gt;UI issues&lt;/a&gt; but quite helpful nonetheless. First I need to create a VM instance and to do it I get to use a surprisingly simple UI. I also appreciate that I don’t need to dig into &lt;a href=&quot;https://en.wikipedia.org/wiki/Identity_management&quot;&gt;IAM&lt;/a&gt; right now which is great, I can just keep moving forward and don’t worry about it just yet.&lt;/p&gt;

&lt;p&gt;There is a lot of choices to be made, from the instance type, to the boot disk and boot disk type. It’s pretty great!&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/app_engine_instances.jpg&quot; alt=&quot;&quot; style=&quot;padding: 20px; width: 310px;&quot; /&gt;&lt;img src=&quot;/assets/blog/app_engine_disk.jpg&quot; alt=&quot;&quot; style=&quot;padding: 20px; width: 310px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;I decide to go on a micro instance running a stable version of Ubuntu on a SSD.&lt;/p&gt;

&lt;p&gt;At this point in the tutorial, they’re pushing me toward creating a separate frontend instance. That’s not really what I had in mind since I’m more a &lt;a href=&quot;http://martinfowler.com/bliki/MonolithFirst.html&quot;&gt;Start With A Monolith&lt;/a&gt; / &lt;a href=&quot;https://m.signalvnoise.com/the-majestic-monolith-29166d022228#.513x0buqb&quot;&gt;The Majestic Monolith&lt;/a&gt; kind of person. I therefore leave the guided tutorial and now I’m on my own.&lt;/p&gt;

&lt;p&gt;Browsing around the different admin pages makes me think that the UI goes from very clear to kind of bloated. The dashboard in particular is really intense at first, but it’s also customizable so I’m not really complaining.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/app_engine_dashboard.jpg&quot; alt=&quot;&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;building-the-app&quot;&gt;Building The App&lt;/h3&gt;

&lt;p&gt;Now that I have an instance seemingly running (some graphs are moving - that’s usually a good sign), I need to push some code to it! I quickly create a basic Rails 5 app on the current &lt;a href=&quot;https://twitter.com/schneems/status/728588592470052864&quot;&gt;release candidate&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rails _5.0.0.rc1_ new demo-rails-5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I then add a simple controller with an action and that’s it. No need to get fancy at this point.&lt;/p&gt;

&lt;h2 id=&quot;deploying&quot;&gt;Deploying&lt;/h2&gt;

&lt;h3 id=&quot;the-google-cloud-sdk&quot;&gt;The Google Cloud SDK&lt;/h3&gt;

&lt;p&gt;To do anything from there I need to install the SDK. The &lt;a href=&quot;https://cloud.google.com/sdk/docs/&quot;&gt;documentation&lt;/a&gt; is clear, but the installation is not as smooth as other projects like the &lt;a href=&quot;https://toolbelt.heroku.com/&quot;&gt;Heroku Toolbelt&lt;/a&gt;. It does seem more powerful, so it feels more like they traded off usability for customizability, which can make sense since Google’s offer is supposed to do a lot.&lt;/p&gt;

&lt;p&gt;Once all the configuration is over, including linking my Google account to my SDK, I can finally run the deploy command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gcloud preview app deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I like this part very much because they really take you by the hand and guide you through the things you need to be doing before releasing:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/app_engine_sdk.jpg&quot; alt=&quot;&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;It goes as far as creating an &lt;code class=&quot;highlighter-rouge&quot;&gt;app.yaml&lt;/code&gt; configuration file for you, with smart defaults based on your environment:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;api_version: 1
entrypoint: bundle exec rackup -p $PORT
runtime: ruby
vm: true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once this is done, the deploy really happens… and it’s very slow. To be fair they do warn that the first deploy is supposed to be slower, so we’ll see if it’s better later on.&lt;/p&gt;

&lt;p&gt;After a bit I get a success message. My app is on Google App Engine, and I even have a nice custom URL: &lt;a href=&quot;https://rails-5-test.appspot.com/&quot;&gt;https://rails-5-test.appspot.com/&lt;/a&gt; !&lt;/p&gt;

&lt;p&gt;Great! Let’s check it out!&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/app_engine_sdk.jpg&quot; alt=&quot;&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;“An unhandled lowlevel error occurred. The application logs may have details.” &lt;a href=&quot;https://s3.amazonaws.com/f.cl.ly/items/2a3y0e090f2P1Y1s1a31/Youre_tearing_me_apart_lisa-36704.gif?v=7a6cf7f4&quot;&gt;…&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;debugging-production&quot;&gt;Debugging Production&lt;/h3&gt;

&lt;h4 id=&quot;reading-logs&quot;&gt;Reading Logs&lt;/h4&gt;

&lt;p&gt;I have to find how to read my logs to figure out what’s going on, so I start looking.&lt;/p&gt;

&lt;p&gt;I first run into the &lt;code class=&quot;highlighter-rouge&quot;&gt;gets-log&lt;/code&gt; command, but it feels a bit complicated since I’m not sure exactly what logs are going to help me debug. I then find the &lt;code class=&quot;highlighter-rouge&quot;&gt;gcloud beta logging logs&lt;/code&gt; command that is supposed to list all the logs available, which is pretty great. To run it I have to install gcloud Beta Commands, so I install this as well. The command works, but I’m still a bit confused by what I’m supposed to do here and how I could find a way to stream my server’s output to my console.&lt;/p&gt;

&lt;p&gt;After a few minutes running in circles, I take a step back and find another ressource that was way more helpful: &lt;a href=&quot;https://cloud.google.com/appengine/articles/logging&quot;&gt;Using Cloud logging in App Engine apps&lt;/a&gt;. Apparently I can use a service called the &lt;a href=&quot;https://cloud.google.com/appengine/articles/logging#using_the_logs_viewer&quot;&gt;Logs Viewer&lt;/a&gt; to access my logs directly from the UI, so I decide to try it out.&lt;/p&gt;

&lt;p&gt;My first impression is that there are a LOT of things going on there. I thought that I only had one instance, but apparently there’s all kind of processes running on my account like a firewall or an autoscaler:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/app_engine_confused.jpg&quot; alt=&quot;&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;After fiddling with the various filters I end up finding the “just show me everything” setup:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/app_engine_logs.jpg&quot; alt=&quot;&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;At this point I see hits, so it’s a good start.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/app_engine_hits.jpg&quot; alt=&quot;&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;As it turns out I have a configuration issue:  &lt;code class=&quot;highlighter-rouge&quot;&gt;#&amp;lt;RuntimeError: Missing 'secret_key_base' for 'production' environment, set this value in 'config/secrets.yml'&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;environment-variables&quot;&gt;Environment Variables&lt;/h4&gt;

&lt;p&gt;Right now the problematic section of our &lt;code class=&quot;highlighter-rouge&quot;&gt;secrets.yml&lt;/code&gt; file looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;production:
  secret_key_base: &amp;lt;%= ENV[&quot;SECRET_KEY_BASE&quot;] %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For obvious security reasons I don’t want to just change the &lt;code class=&quot;highlighter-rouge&quot;&gt;secrets.yml&lt;/code&gt; to add the secret key and then commit it, so I have to figure out how to set an environment variable.&lt;/p&gt;

&lt;p&gt;Once again the &lt;a href=&quot;https://cloud.google.com/appengine/docs/flexible/ruby/runtime#environment_variables&quot;&gt;documentation&lt;/a&gt; is well done and easy to find. As it turns out &lt;a href=&quot;https://cloud.google.com/appengine/docs/flexible/ruby/configuring-your-app-with-app-yaml#Ruby_app_yaml_Defining_environment_variables&quot;&gt;I have to define them&lt;/a&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;app.yaml&lt;/code&gt; file… that’s fine but I honestly would have prefered a solution that didn’t require me to mix code and production variables, but that’ll do for now.&lt;/p&gt;

&lt;h4 id=&quot;releasing-again&quot;&gt;Releasing (again)&lt;/h4&gt;

&lt;p&gt;I update the &lt;code class=&quot;highlighter-rouge&quot;&gt;app.yaml&lt;/code&gt; file and do another release.&lt;/p&gt;

&lt;p&gt;This time it does feel faster than before, and the logs seem to indicate that they’re leveraging some kind of cache which is great. However it still gets stuck on “Updating service default…” for what seemed like an excessive amount of time.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/app_engine_cache.jpg&quot; alt=&quot;&quot; style=&quot;padding: 20px; width: 300px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;I go to the URL once again and … it works this time!!&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/app_engine_success.jpg&quot; alt=&quot;&quot; style=&quot;padding: 20px; width: 500px;&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;comparing-heroku-and-google-app-engine&quot;&gt;Comparing Heroku and Google App Engine&lt;/h2&gt;

&lt;p&gt;I’m really not going to get into running a serious performance review, but for the fun of it I wanted to see how my micro instance would compare with Heroku’s free tier on this very basic Rails 5 application.&lt;/p&gt;

&lt;p&gt;To do this I pushed the same app to &lt;a href=&quot;https://rails-5-test-mgg.herokuapp.com/&quot;&gt;https://rails-5-test-mgg.herokuapp.com/&lt;/a&gt; and just hit the refresh button a bunch of times and looked at results, because who needs proper methodology?&lt;/p&gt;

&lt;p&gt;Google App Engine (micro, 1CPU, 0.6GB RAM) seems to respond this way (give or take 5ms):&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center; &quot;&gt;&lt;img src=&quot;/assets/blog/app_engine_perf.jpg&quot; alt=&quot;&quot; style=&quot;padding: 5px; width: 100%;margin-left: 0px !important;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;On the other side Heroku (free tier, 1CPU, 512MB RAM) responded this way (give or take 5ms):&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center; &quot;&gt;&lt;img src=&quot;/assets/blog/app_engine_heroku.jpg&quot; alt=&quot;&quot; style=&quot;padding: 5px; width: 100%;margin-left: 0px !important;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Overall Heroku seems just a bit faster than App Engine. There’s an overhead in term of network for Heroku because Google made it really easy to pick a region, so my app is running in Europe, right next to me, whereas the Heroku app has to cross the Atlantic.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Overall I was very pleasantly suprised by what Google had to offer and how quick it was to get something running even with absolutely no experience in the platform. Documentation is very well written and, in my opinion, it felt less disorienting than setting up an &lt;a href=&quot;https://aws.amazon.com/ec2/&quot;&gt;EC2&lt;/a&gt; instance for the first time.&lt;/p&gt;

&lt;p&gt;The integration with Ruby and Rails is well done, deploying is simple and besides the &lt;code class=&quot;highlighter-rouge&quot;&gt;secrets.yml&lt;/code&gt; gotcha, it went smoothly. Sinatra integration is supposed to be as good but I haven’t tried it yet.&lt;/p&gt;

&lt;p&gt;I might pick this over &lt;a href=&quot;https://aws.amazon.com/&quot;&gt;AWS&lt;/a&gt; for a pet project at some point to try it out some more.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Pushing To Both Bitbucket And Github</title>
     <link href="https://marcgg.com/blog/2016/04/25/git-multiple-remotes/"/>
     <updated>2016-04-25T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2016/04/25/git-multiple-remotes</id>
     <content type="html">
       &lt;p&gt;The great thing with Git is that it’s distributed. However in many projects we end up with a single point of failure, which kind of defeats the point. For instance a lot of people use Github and when it goes down, they can’t push code and collaborate with their team. From this observation, I decided to mess arround with ideas on how to work on the same code base with both Github and Bitbucket.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; I didn’t really find a usable solution for my issue, but still ended up having some fun with git push urls and git aliases so I figured I’d share those.&lt;/p&gt;

&lt;h2 id=&quot;pushing-explicitely-to-two-different-remotes&quot;&gt;Pushing Explicitely To Two Different Remotes&lt;/h2&gt;

&lt;p&gt;Let’s imagine we set up two entirely different remotes for the same project:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$  git remote add bitbucket git@bitbucket.org:marcgg/multiple-origins.git
$ git remote add github git@github.com:marcgg/multiple-origins.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now I can explicitely push to either project, which is quite convenient:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push github master
$ git push bitbucket master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;using-git-aliases&quot;&gt;Using Git Aliases&lt;/h3&gt;

&lt;p&gt;We can also create an alias to make it easier to push to both remotes. We’ll be using the &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt; (bang) &lt;a href=&quot;http://blogs.atlassian.com/2014/10/advanced-git-aliases/&quot;&gt;to create a more advanced alias&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git config alias.pushall '!git push bitbucket master &amp;amp;&amp;amp; git push github master'
$ git pushall
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/bitbucket_github.jpg&quot; alt=&quot;Github and Bitbucket push&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;using-bash-aliases&quot;&gt;Using Bash Aliases&lt;/h3&gt;

&lt;p&gt;We can also use bash to do this with a simple loop:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ alias pushall='for i in git remote; do git push $i; done;'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can then take this and push it back into a Git alias because why not, this time wrapping it in an anonymous bash function:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git config alias.loopush '!f(){ for i in git remote; do git push $i; done; };f'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;If  you enjoy this kind of stuff, you should take a look at “&lt;a href=&quot;http://blogs.atlassian.com/2014/10/advanced-git-aliases/&quot;&gt;One weird trick for powerful Git aliases&lt;/a&gt;”  on the Atlassian blog.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;using-multiple-git-push-urls&quot;&gt;Using Multiple Git Push URLs&lt;/h2&gt;

&lt;p&gt;You might not know that, when you add a remote, it actually adds both a fetch and a push URL. So for my exemple, it looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote -v
bitbucket	git@bitbucket.org:marcgg/multiple-origins.git (fetch)
bitbucket	git@bitbucket.org:marcgg/multiple-origins.git (push)

github	git@github.com:marcgg/multiple-origins.git (fetch)
github	git@github.com:marcgg/multiple-origins.git (push)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The interesting thing to know here is that you can have multiple push urls. To demo this, let’s add a new remote pointing to Bitbucket and then add another push url. Note that I have to re-add the bitbuck push url, because Git will first replace the default push url before adding new ones.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote add origin git@bitbucket.org:marcgg/multiple-origins.git
$ git remote set-url --add --push origin git@github.com:marcgg/multiple-origins.git
$ git remote set-url --add --push origin git@bitbucket.org:marcgg/multiple-origins.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And now if I list my remotes I get this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote -v
bitbucket	git@bitbucket.org:marcgg/multiple-origins.git (push)
bitbucket	git@bitbucket.org:marcgg/multiple-origins.git (fetch)

github	git@github.com:marcgg/multiple-origins.git (push)
github	git@github.com:marcgg/multiple-origins.git (fetch)

origin	git@bitbucket.org:marcgg/multiple-origins.git (fetch)
origin	git@github.com:marcgg/multiple-origins.git (push)
origin	git@bitbucket.org:marcgg/multiple-origins.git (push)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I don’t know why, but I think that it looks pretty cool! I find it very peculiar to have this kind of output when simply running a &lt;code class=&quot;highlighter-rouge&quot;&gt;push&lt;/code&gt; command:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/bitbucket_github_2.jpg&quot; alt=&quot;Github and Bitbucket push&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Of course there are a lot of problems with this approach. For instance a push could fail while the other one succeeds, and since the operation is not wrapped in a transaction it might leave you in some weird state:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push origin master
To git@github.com:marcgg/multiple-origins.git
! [rejected]        master -&amp;gt; master (non-fast-forward)
error: failed to push some refs to 'git@github.com:marcgg/multiple-origins.git'
Writing objects: 100% (2/2), 271 bytes | 0 bytes/s, done.
To git@bitbucket.org:marcgg/multiple-origins.git
  1cdea23..a4959f9  master -&amp;gt; master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;fetching&quot;&gt;Fetching&lt;/h3&gt;

&lt;p&gt;The problem is that now we have an &lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt; remote that points to Bitbucket and Github for pushing, but only to Bitbucket for fetching. It would feel right to have multiple fetch urls on the same remote. Soooo I guess we can just make it crash ?&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote set-url origin cant-do-that
$ git fetch origin
fatal: 'cant-do-that' does not appear to be a git repository
fatal: Could not read from remote repository.

¯\_(ツ)_/¯
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;There are some complications when working with multiple remotes, but they mostly occur when you are pulling, not really when you are pushing. Overall it feels like the naive approach of pushing and pulling explicitely from a specific remote is a decent way to dealing with your main remote being down.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Trailing Slashes, Github Pages, Jekyll 3 &amp; 404s</title>
     <link href="https://marcgg.com/blog/2016/03/14/github-pages-jekyll/"/>
     <updated>2016-03-14T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2016/03/14/github-pages-jekyll</id>
     <content type="html">
       &lt;p&gt;A month ago Github &lt;a href=&quot;https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0&quot;&gt;announced&lt;/a&gt; that they was now running Jekyll 3. At this point I already tried to upgrade but ran into so many issues I gave up, so I was still building my site with Jekyll 2.&lt;/p&gt;

&lt;p&gt;Looking at the announcement I figured that it was no big deal since every major deprecations would only occur in May. It really felt safe to stay with Jekyll 2 and migrate in a month or two.&lt;/p&gt;

&lt;p&gt;Big mistake.&lt;/p&gt;

&lt;h2 id=&quot;the-symptoms&quot;&gt;The Symptoms&lt;/h2&gt;

&lt;p&gt;A few weeks later, while checking my analytics, I noticed that my view count was dropping slowly but surely:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/analytics-drop.jpg&quot; alt=&quot;Google analytics drop&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;I thought that there was some algorithm change on Google’s side and didn’t bother digging more into it… until I later checked Google Webmaster tools and saw a large increase in crawling errors around the same time!&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/webmaster-tools.jpg&quot; alt=&quot;Google webmaster tools drop&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Note that this only occurred mid February and not right when Github started using Jekyll 3 because this was the moment when I published &lt;a href=&quot;/blog/2016/02/15/rspec-on-multiple-rails-projects/&quot;&gt;a new article&lt;/a&gt;. This lead me to rebuild my site, bust my cache and so on. This made the whole experience even more confusing.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-issue--how-to-solve-it&quot;&gt;The Issue &amp;amp; How To Solve It&lt;/h2&gt;

&lt;p&gt;Since this site is not my main focus, I could only investigate later on. Once I found some time to spend on it, I understood that this was due to a major change in Jekyll 3 regarding trailing slashes as explained in the &lt;a href=&quot;https://jekyllrb.com/docs/upgrading/2-to-3/&quot;&gt;migration guide&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In Jekyll 2, any URL constructed from the permalink: field had a trailing slash (/) added to it automatically. Jekyll 3 no longer adds a trailing slash automatically to permalink: URLs. This can potentially result in old links to pages returning a 404 error.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My configuration at the time looked like this, with no trailing slash explicitly mentioned:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;permalink: /:categories/:year/:month/:day/:title
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A lot of external links pointing to my blog had trailing slashes but I never paid any attention to this since it was working properly. Once this trailing slash redirect logic stopped working on Github Pages, I lost a lot of links, dropped terribly in SEO and lost most of my traffic in the course of a few weeks.&lt;/p&gt;

&lt;p&gt;Ouch.&lt;/p&gt;

&lt;p&gt;I fixed the issue by adding explicitly the trailing slash to the &lt;code class=&quot;highlighter-rouge&quot;&gt;permalink&lt;/code&gt; configuration. Once it was done I started to see my stats slowly going back up again.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;permalink: /:categories/:year/:month/:day/:title/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It’s a bit of a shame that such a breaking change was released somewhat under the radar. I’m wondering how many websites are now returning 404s because of it… The positive side of this is that the Jekyll team did take this &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/4440&quot;&gt;into account&lt;/a&gt; and &lt;a href=&quot;https://talk.jekyllrb.com/t/github-pages-with-jekyll3-blog-posts-with-trailing-slash-no-longer-work/1877/3&quot;&gt;updated their documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The only sure thing is that from now on I’ll try to pay more attention to my blog’s analytics!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>My Tech Advisor Role At Birdly (Y Combinator W16)</title>
     <link href="https://marcgg.com/blog/2016/03/14/birdly-ycombinator/"/>
     <updated>2016-03-14T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2016/03/14/birdly-ycombinator</id>
     <content type="html">
       &lt;p&gt;&lt;a href=&quot;https://www.getbirdly.com/&quot;&gt;Birdly&lt;/a&gt;, the company &lt;a href=&quot;/blog/2014/12/16/coaching-startup-birdly-le-camping/&quot;&gt;I helped getting accepted into a famous Parisian accelerator&lt;/a&gt; more than a year ago, has been accepted to take part in the &lt;a href=&quot;https://www.ycombinator.com/&quot;&gt;Y Combinator program&lt;/a&gt;! I figured I’d take the opportunity to share what has been my relationship with their team up to this point.&lt;/p&gt;

&lt;p&gt;After Birdly’s first accelerator experience we kept working together to solidify the expense management mobile app they built. The goal was to get them to be better and faster at building quality software while doing maintenance on what they already released.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/birdly-stage.jpg&quot; alt=&quot;Birdly on stage&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;After a few months iterating, they decided to change their approach and dropped their mobile app to focus on building a &lt;a href=&quot;https://twitter.com/getbirdly/status/669541869848629249&quot;&gt;Slack bot instead&lt;/a&gt;. This decision was very well explained in this Venture Beats article by &lt;a href=&quot;https://twitter.com/jb_coger&quot;&gt;Birdly’s CPO&lt;/a&gt;: “&lt;a href=&quot;http://venturebeat.com/2015/12/13/dont-build-a-mobile-app-a-message-from-the-app-graveyard/&quot;&gt;Don’t build a mobile app (a message from the app graveyard)&lt;/a&gt;”. This turned out to be a great business decision as it gave them a lot of visibility and leads. They quickly launched their first Slack related product with great success, counting around &lt;a href=&quot;https://www.producthunt.com/tech/birdly-for-slack-2&quot;&gt;700 upvotes on Product Hunt&lt;/a&gt; and some paying customers.&lt;/p&gt;

&lt;p&gt;As tech advisor I helped them transition from their iOS/Android + API approach to something more fitting for a bot, including all the pains that come with working &lt;a href=&quot;/blog/2012/09/24/working-with-apis-facebook/&quot;&gt;with a third party API&lt;/a&gt;. Of course we also had to keep the transition smooth enough for end users and the team’s developers. Really quickly, because of the bot’s success, the Birdly API also had to face performance and general scaling issues which had to be solved in a timely manner. With the user base growing, reliability also became an important subject and we had to create recovery plans and fallback strategies in case the bot went down for a reason or another.&lt;/p&gt;

&lt;p&gt;Overall the team of 4 developers managed to work through all the major issues and got some good feedback from the public, including Slack’s founder &lt;a href=&quot;https://twitter.com/stewart&quot;&gt;Stewart Butterfield&lt;/a&gt; at the &lt;a href=&quot;/assets/blog/slack-founder.jpg&quot;&gt;2015 Web Summit&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-cards=&quot;hidden&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Wow! &lt;a href=&quot;https://twitter.com/stewart&quot;&gt;@stewart&lt;/a&gt; just quoted &lt;a href=&quot;https://twitter.com/getbirdly&quot;&gt;@getbirdly&lt;/a&gt; as a great way of using &lt;a href=&quot;https://twitter.com/hashtag/Slack?src=hash&quot;&gt;#Slack&lt;/a&gt; on the main stage of &lt;a href=&quot;https://twitter.com/hashtag/websummit?src=hash&quot;&gt;#websummit&lt;/a&gt; &lt;a href=&quot;https://twitter.com/NUMAparis&quot;&gt;@NUMAparis&lt;/a&gt; &lt;a href=&quot;https://t.co/2J948sMUYB&quot;&gt;pic.twitter.com/2J948sMUYB&lt;/a&gt;&lt;/p&gt;&amp;mdash; Claudio Vandi (@vandicla) &lt;a href=&quot;https://twitter.com/vandicla/status/661486743028375552&quot;&gt;November 3, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;From this good start the team worked on adding even more interactions that could be done through Slack. This lead to important software architecture and organisational decisions to make sure everything would be as effective as possible for their current team. For instance we decided on the bases for every interactions users could have with the bot or worked on an efficient Git workflow that would fit the way the team worked.&lt;/p&gt;

&lt;p&gt;At this point, &lt;a href=&quot;https://slackhq.com/the-slack-platform-launch-7a3feb5a423a#.fy3rel5hx&quot;&gt;Slack released their app platform&lt;/a&gt; while featuring Birdly in the process. This improved traction and comforted everyone that Slack could become a reliable ecosystem.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;A treasury of apps, a fund to help you build your own: Hello Slack Platform. &lt;a href=&quot;https://t.co/P77HyWl7Xp&quot;&gt;https://t.co/P77HyWl7Xp&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/changelog?src=hash&quot;&gt;#changelog&lt;/a&gt; &lt;a href=&quot;https://t.co/QMJLRZ886E&quot;&gt;pic.twitter.com/QMJLRZ886E&lt;/a&gt;&lt;/p&gt;&amp;mdash; Slack (@SlackHQ) &lt;a href=&quot;https://twitter.com/SlackHQ/status/676949968528232449&quot;&gt;December 16, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;It’s also around this time that Birdly got accepted at &lt;a href=&quot;http://blog.ycombinator.com/birdly-yc-w16-lets-you-use-slack-to-easily-access-data-from-other-enterprise-apps&quot;&gt;Y Combinator&lt;/a&gt; and relocated to San Francisco to focus on their product.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Birdly is funded by &lt;a href=&quot;https://twitter.com/ycombinator&quot;&gt;@ycombinator&lt;/a&gt; via &lt;a href=&quot;https://twitter.com/TechCrunch&quot;&gt;@techcrunch&lt;/a&gt; &lt;a href=&quot;https://t.co/qpRuetBtka&quot;&gt;https://t.co/qpRuetBtka&lt;/a&gt; &lt;a href=&quot;https://t.co/PyRPSsx4Lu&quot;&gt;pic.twitter.com/PyRPSsx4Lu&lt;/a&gt;&lt;/p&gt;&amp;mdash; Birdly (@getbirdly) &lt;a href=&quot;https://twitter.com/getbirdly/status/703270215287615488&quot;&gt;February 26, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;Nowadays the product offered by Birdly gives users access to third party software (Stripe, Zendesk, SalesForce…) via Slack. At this date &lt;a href=&quot;https://slack.com/apps/A07NETE1X-birdly&quot;&gt;the bot&lt;/a&gt; is featured in the “&lt;a href=&quot;http://cl.ly/1s141k2c0E0G&quot;&gt;brilliant bots&lt;/a&gt;” list by Slack, was recently &lt;a href=&quot;http://techcrunch.com/2016/02/26/birdly-wants-to-help-call-your-customer-data-by-talking-to-a-slack-bot/&quot;&gt;featured on TechCrunch&lt;/a&gt; and encounters &lt;a href=&quot;http://cl.ly/0Y1h1D1t3s2P&quot;&gt;great success&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Personally I’m still involved in Birdly’s development as a tech advisor. We meet once a week to discuss the current issues, brainstorm technical questions, review code or clear specific roadblocks. I also join them sometimes during longer hackathons where I’d pair program with the team to build a specific feature (the last one was integrating the SaleForce API).&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Know a cooler Slack app than &lt;a href=&quot;https://twitter.com/getbirdly&quot;&gt;@getbirdly&lt;/a&gt; ? Looks up people in both &lt;a href=&quot;https://twitter.com/intercom&quot;&gt;@intercom&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/stripe&quot;&gt;@stripe&lt;/a&gt; AND keeps track of my expenses. &lt;a href=&quot;https://twitter.com/hashtag/win?src=hash&quot;&gt;#win&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/productivity?src=hash&quot;&gt;#productivity&lt;/a&gt;&lt;/p&gt;&amp;mdash; Henric Malmberg (@hankTard) &lt;a href=&quot;https://twitter.com/hankTard/status/701404674126176256&quot;&gt;February 21, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;Fair to say that I’m looking forward to the next challenges the company is going to encounter as they scale!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Vim Configuration From Scratch in 2016</title>
     <link href="https://marcgg.com/blog/2016/03/01/vimrc-example/"/>
     <updated>2016-03-01T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2016/03/01/vimrc-example</id>
     <content type="html">
       &lt;p&gt;I started using Vim &lt;a href=&quot;/blog/2012/09/04/one-reason-to-switch-to-vim-editor&quot;&gt;a while ago&lt;/a&gt; with the great distribution &lt;a href=&quot;https://github.com/carlhuda/janus&quot;&gt;Janus&lt;/a&gt;. Since then I made a a lot of changes to my config, but it never felt entirely like my own setup. There always were a few plugins I wouldn’t use and some features I couldn’t get to work because I didn’t understand the internals of my distribution.&lt;/p&gt;

&lt;p&gt;Because of this I decided to entirely drop the setup I’ve been working with for the past years and started from scratch, adding only what I needed. If you want to see the result, my &lt;code class=&quot;highlighter-rouge&quot;&gt;.vim&lt;/code&gt; &lt;a href=&quot;https://github.com/marcgg/.vim&quot;&gt;is available on Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Overall I found the experience to be way more easy and fun than expected, so I decided to share! In this article I’ll explain how to quickly setup and customise Vim without having to use a pre-made distribution, just Git and a Terminal.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Disclaimer: All the choices made here reflect my opinion, the way I use Vim and the tools and languages I generally use. Obviously if you’re using an &lt;a href=&quot;http://images.anandtech.com/doci/7245/ErgoDox%20(1).jpg&quot;&gt;ergodox&lt;/a&gt; and only code in &lt;a href=&quot;http://marcgg.com/blog/2015/02/02/grace-murray-hopper-technical&quot;&gt;Flow-Matic &lt;/a&gt; we will have very different opinions on what is best.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;basic-setup&quot;&gt;Basic Setup&lt;/h2&gt;

&lt;p&gt;First of all you need to &lt;a href=&quot;http://www.vim.org/download.php&quot;&gt;install vim&lt;/a&gt;, or, if you don’t like to run your text editor in your console and use a mac, you can install &lt;a href=&quot;https://github.com/b4winckler/macvim&quot;&gt;MacVim&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Out of the box, Vim is very hard on the eyes and doesn’t have a lot of feature we’ve come to expect from other editors like Sublime or Atom. However, it’s more evolutive and customisable, so the first thing to do is to start setting it up to fit your preferred way of coding. I recommend versioning your configuration to share across machines while keeping track of any changes you made.&lt;/p&gt;

&lt;p&gt;To do this, create a &lt;code class=&quot;highlighter-rouge&quot;&gt;.vim&lt;/code&gt; repository with a &lt;code class=&quot;highlighter-rouge&quot;&gt;vimrc&lt;/code&gt; file that will contain most of your configuration:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd ~
$ mkdir .vim
$ cd .vim
$ touch vimrc
$ git init .
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now you need to go back to your home directory and &lt;a href=&quot;https://en.wikipedia.org/wiki/Symbolic_link&quot;&gt;symlink&lt;/a&gt; the &lt;code class=&quot;highlighter-rouge&quot;&gt;vimrc&lt;/code&gt; file. This way you get to use your &lt;code class=&quot;highlighter-rouge&quot;&gt;.vimrc&lt;/code&gt; file normally while still get all the advantages of versioning with Git.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ln -s ~/.vim/vimrc ~/.vimrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;getting-vim-to-look-nice&quot;&gt;Getting Vim To Look Nice&lt;/h2&gt;

&lt;h3 id=&quot;picking-a-theme&quot;&gt;Picking a Theme&lt;/h3&gt;

&lt;p&gt;There are a LOT of themes available for Vim. I’ve used &lt;a href=&quot;http://ethanschoonover.com/solarized&quot;&gt;Solarized&lt;/a&gt; for quite a while, but recently I switched to the &lt;a href=&quot;https://github.com/chriskempson/tomorrow-theme&quot;&gt;Tomorrow Night theme&lt;/a&gt; and I like it a lot.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/theme-example.jpg&quot; alt=&quot;Vim Theme Installation&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;If you don’t like this one, don’t worry: there are tons out there. Just Google “Vim Themes” and browse around.&lt;/p&gt;

&lt;p&gt;Once you found you favorite one, add it to your project by first creating a folder to store it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir ~/.vim/colors
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Add the theme’s &lt;code class=&quot;highlighter-rouge&quot;&gt;.vim&lt;/code&gt; file to this folder. Once this is done, edit your &lt;code class=&quot;highlighter-rouge&quot;&gt;.vimrc&lt;/code&gt; file and add these lines to let Vim know that you want syntax highlighting based on file names:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;filetype on
syntax on
colorscheme Tomorrow-Night
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;setting-fonts&quot;&gt;Setting Fonts&lt;/h3&gt;

&lt;p&gt;Once you have your main theme, time to pick a font! I like my fonts readable, simple and big. So I went with Menlo Regular 18pts.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/menlo.png&quot; alt=&quot;Menlo Font&quot; style=&quot;padding: 20px; width: 200px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;To use this, &lt;a href=&quot;http://www.cufonfonts.com/en/font/13494/menlo&quot;&gt;download&lt;/a&gt; and install the font and then add this line to your &lt;code class=&quot;highlighter-rouge&quot;&gt;.vimrc&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set guifont=Menlo\ Regular:h18
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;other-details&quot;&gt;Other Details&lt;/h3&gt;

&lt;p&gt;To get Vim to open with a given size, add this to your &lt;code class=&quot;highlighter-rouge&quot;&gt;.vimrc&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set lines=35 columns=150
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Add a colored column at 90 to avoid going to far to the right:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set colorcolumn=90
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I’m not quite sure why this isn’t by default, but here’s how to add line numbering:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set number
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;more-customisation&quot;&gt;More Customisation&lt;/h2&gt;

&lt;p&gt;Now that your Vim starts to look better, let’s start to improve how it actually functions. The great thing with Vim is that we can get it to do whatever we want… it might be overwhelming at first, but it’s really not that hard.&lt;/p&gt;

&lt;h3 id=&quot;leader-key&quot;&gt;Leader Key&lt;/h3&gt;

&lt;p&gt;Before doing anything else, we need to set a &lt;a href=&quot;http://stackoverflow.com/a/1764336&quot;&gt;Leader key&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Leader key is Vim’s way to reduce conflicts in configuration. The Vim user can set this key to be anything and then every command are going to be preceded by this key. By default it’s set to be backslash, but I like to change it to &lt;code class=&quot;highlighter-rouge&quot;&gt;space&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let mapleader=&quot; &quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;reload-vim-config-without-having-to-restart-editor&quot;&gt;Reload Vim Config Without Having To Restart Editor&lt;/h3&gt;

&lt;p&gt;Every time you edit your &lt;code class=&quot;highlighter-rouge&quot;&gt;.vimrc&lt;/code&gt; file, if you want to see the changes you have to close &amp;amp; open it again or &lt;a href=&quot;http://ss64.com/bash/source.html&quot;&gt;source&lt;/a&gt; the &lt;code class=&quot;highlighter-rouge&quot;&gt;.vimrc&lt;/code&gt; file manually. It’s a pain, so let’s map some keys to do it automatically:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;map &amp;lt;leader&amp;gt;s :source ~/.vimrc&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It’s the first time we see this syntax and it might look a bit weird. Basically it declares “please map (&lt;code class=&quot;highlighter-rouge&quot;&gt;Leader key + s&lt;/code&gt;) to the following command: &lt;code class=&quot;highlighter-rouge&quot;&gt;:source ~/.vimrc&lt;/code&gt; and then press &lt;code class=&quot;highlighter-rouge&quot;&gt;Enter&lt;/code&gt;” which effectively reload the Vim configuration. Once I add this to my configuration, pressing the leader key followed by &lt;code class=&quot;highlighter-rouge&quot;&gt;s&lt;/code&gt; will run the command above.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note that it only works for &lt;code class=&quot;highlighter-rouge&quot;&gt;.vimrc&lt;/code&gt; changes and not for adding or removing plugins.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;smart-defaults&quot;&gt;Smart Defaults&lt;/h3&gt;

&lt;p&gt;Vim is pretty old and made to run on machines with low processing power. Because of this, when you install Vim a lot of interesting features are deactivated by default. Here’s what most people would want their 2016 text editor to have.&lt;/p&gt;

&lt;p&gt;Keep more info in memory to speed things up:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set hidden
set history=100
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Have some logic when indenting:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;filetype indent on
set nowrap
set tabstop=2
set shiftwidth=2
set expandtab
set smartindent
set autoindent
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt; Note that this particular config is made for myself and I mostly use Ruby which uses 2 spaces as tabs.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;dealing-with-whitespaces&quot;&gt;Dealing With Whitespaces&lt;/h3&gt;

&lt;p&gt;Here’s a handy command to remove whitespaces on save.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;autocmd BufWritePre * :%s/\s\+$//e
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;better-search&quot;&gt;Better Search&lt;/h3&gt;

&lt;p&gt;When running a search, get Vim to highlight found words:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set hlsearch
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ability to cancel a search with &lt;code class=&quot;highlighter-rouge&quot;&gt;Escape&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nnoremap &amp;lt;silent&amp;gt; &amp;lt;Esc&amp;gt; :nohlsearch&amp;lt;Bar&amp;gt;:echo&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;use-arrows&quot;&gt;Use Arrows&lt;/h3&gt;

&lt;p&gt;People are divided on this, but I have made my mind and I prefer using arrow keys instead of the default Vim mapping. If you want to do the same:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;map &amp;lt;D-A-RIGHT&amp;gt; &amp;lt;C-w&amp;gt;l
map &amp;lt;D-A-LEFT&amp;gt; &amp;lt;C-w&amp;gt;h
map &amp;lt;D-A-DOWN&amp;gt; &amp;lt;C-w&amp;gt;&amp;lt;C-w&amp;gt;
map &amp;lt;D-A-UP&amp;gt; &amp;lt;C-w&amp;gt;W
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;re-open-previously-opened-file&quot;&gt;Re-Open Previously Opened File&lt;/h3&gt;

&lt;p&gt;I find myself using this literally all the time. It’s basically &lt;code class=&quot;highlighter-rouge&quot;&gt;cd -&lt;/code&gt; for your current window and allows you to quickly move back and forth between two files by pressing the Leader key twice.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nnoremap &amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt; :e#&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Note that there’s already a way of doing it by pressing &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + ^&lt;/code&gt;, but I like &amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt; a lot more.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;show-matching-parenthesis&quot;&gt;Show Matching Parenthesis&lt;/h3&gt;

&lt;p&gt;When selecting a parenthesis it will highlight the one matching:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set showmatch
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;plugins&quot;&gt;Plugins&lt;/h2&gt;

&lt;p&gt;Plugins are what make Vim great. There is a plugin for everything you might need, so being able to add and remove them easily is important.&lt;/p&gt;

&lt;h3 id=&quot;loading-plugins-with-pathogen&quot;&gt;Loading Plugins With Pathogen&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tpope/vim-pathogen&quot;&gt;Pathogen&lt;/a&gt; is, in my opinion, the best way to manage plugins currently available. It’s very simple, non obtrusive and really “just works”.&lt;/p&gt;

&lt;p&gt;To install it, you can simply use the one liner below. If you don’t feel like copy and pasting &lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt; commands, just look up their &lt;a href=&quot;https://github.com/tpope/vim-pathogen#installation&quot;&gt;very clear documentation&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir -p ~/.vim/autoload ~/.vim/bundle &amp;amp;&amp;amp; \
curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now open your &lt;code class=&quot;highlighter-rouge&quot;&gt;.vimrc&lt;/code&gt; and add this line at the top:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;execute pathogen#infect()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From now on, you can add plugins in &lt;code class=&quot;highlighter-rouge&quot;&gt;~.vim/bundle/&lt;/code&gt; and they will get loaded automatically!&lt;/p&gt;

&lt;h3 id=&quot;managing-plugins-with-git&quot;&gt;Managing Plugins With Git&lt;/h3&gt;

&lt;p&gt;All the Vim plugins I’m going to mention here have a Git repository somewhere. This is great, because updating to the latest version can become as easy as pulling master.&lt;/p&gt;

&lt;p&gt;To do this we’re going to use &lt;a href=&quot;https://git-scm.com/docs/git-submodule&quot;&gt;git submodules&lt;/a&gt; to reference another repository from our main repository. It’s actually pretty straightforward and will look like this on Github:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/git-submodules-example.jpg&quot; alt=&quot;Git submodules as seen on Github&quot; style=&quot;padding: 20px; width: 360px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;For every plugin, you need to run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd ~/.vim
$ git submodule add git@source/pluginname.git bundle/pluginname
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For instance if you want to add &lt;code class=&quot;highlighter-rouge&quot;&gt;vim-ruby&lt;/code&gt; located at &lt;a href=&quot;https://github.com/vim-ruby/vim-ruby&quot;&gt;https://github.com/vim-ruby/vim-ruby&lt;/a&gt;, you’ll do:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git submodule add git@github.com:vim-ruby/vim-ruby.git bundle/vim-ruby
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Later on when you use your config on another machine or want to update your plugins, you’ll be able to use other commands like &lt;code class=&quot;highlighter-rouge&quot;&gt;git submodule init&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;git submodule update&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;vim-plugins-i-used&quot;&gt;Vim Plugins I Used&lt;/h3&gt;

&lt;p&gt;Here is a list of all the plugins I decided to include and why. I also added the advanced configuration I used and some examples when needed. This list is, of course, very subjective and will depend on what you expect your editor to do for you, but I feel like it’s a good starting point.&lt;/p&gt;

&lt;h4 id=&quot;command-t&quot;&gt;Command-T&lt;/h4&gt;

&lt;p&gt;Very fast fuzzy search to open files quickly without many keystrokes. &lt;a href=&quot;https://github.com/wincent/command-t/&quot;&gt;Get it here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To ignore some files, you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;wildignore&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set wildignore+=*.log,*.sql,*.cache
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When you create a new file, it’s not indexed by default. Here a way to reindex everything by simply pressing &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Leader&amp;gt;+r&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;noremap &amp;lt;Leader&amp;gt;r :CommandTFlush&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;nerdcommenter&quot;&gt;NerdCommenter&lt;/h4&gt;

&lt;p&gt;Comment / Uncomment large blocks of code easily. &lt;a href=&quot;https://github.com/scrooloose/nerdcommenter&quot;&gt;Get it here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;lightline&quot;&gt;Lightline&lt;/h4&gt;

&lt;p&gt;After trying different plugins such as Airline, I decided on Lightline. This plugin gives you a light a configurable status line without too many pre-made decisions. &lt;a href=&quot;https://github.com/itchyny/lightline.vim&quot;&gt;Get it here&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/lightline.jpg&quot; alt=&quot;Status bar in vim&quot; style=&quot;padding: 20px; width: 500px;&quot; /&gt;&lt;/div&gt;

&lt;h4 id=&quot;nerdtree&quot;&gt;NerdTree&lt;/h4&gt;

&lt;p&gt;A simple yet very useful tree explorer. Note that this is a project drawer and because of this has some limits when working with splits &lt;a href=&quot;http://vimcasts.org/blog/2013/01/oil-and-vinegar-split-windows-and-project-drawer/&quot;&gt;as explained in this article&lt;/a&gt;, however it fits the way I work and is an easy transition for anyone using an editor like Sublime or Textmate. &lt;a href=&quot;https://github.com/scrooloose/nerdtree&quot;&gt;Get it here&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/nerdtree.jpg&quot; alt=&quot;Tree navigation with Vims&quot; style=&quot;padding: 20px; width: 300px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Hit the right arrow to open a node:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let NERDTreeMapActivateNode='&amp;lt;right&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Display hidden files:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let NERDTreeShowHidden=1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Toggle display of the tree with &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Leader&amp;gt; + n&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &amp;lt;leader&amp;gt;n :NERDTreeToggle&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Locate the focused file in the tree with &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Leader&amp;gt; + j&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &amp;lt;leader&amp;gt;j :NERDTreeFind&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Always open the tree when booting Vim, but don’t focus it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;autocmd VimEnter * NERDTree
autocmd VimEnter * wincmd p
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Do not display some useless files in the tree:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let NERDTreeIgnore=['\.DS_Store', '\~$', '\.swp']
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;supertab&quot;&gt;Supertab&lt;/h4&gt;

&lt;p&gt;Autocomplete when using &lt;code class=&quot;highlighter-rouge&quot;&gt;tab&lt;/code&gt;. &lt;a href=&quot;https://github.com/ervandew/supertab&quot;&gt;Get it here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;fugitive&quot;&gt;Fugitive&lt;/h4&gt;

&lt;p&gt;Git wrapper that I mostly use for its useful &lt;code class=&quot;highlighter-rouge&quot;&gt;:Gblame&lt;/code&gt; feature, allowing you to blame any line directly from Vim. &lt;a href=&quot;https://github.com/tpope/vim-fugitive&quot;&gt;Get it here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;git-gutter&quot;&gt;Git Gutter&lt;/h4&gt;

&lt;p&gt;Displays the diff in the gutter and allows you to do actions on it. I use it to see what I’ve just modified, but some some of its more advanced functions are also very good. For instance you can preview a change with &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Leader&amp;gt; + hp&lt;/code&gt; and revert any change on a line with &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Leader&amp;gt; + hr&lt;/code&gt;. It’s great! &lt;a href=&quot;https://github.com/airblade/vim-gitgutter&quot;&gt;Get it here&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/git-gutter-example.jpg&quot; alt=&quot;Git gutter for Vim&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;I don’t like my editor changing size while I’m using it, so I chose to always display the gutter - even when there are no changes.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let g:gitgutter_sign_column_always=1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;vim-multiple-cursors&quot;&gt;Vim Multiple Cursors&lt;/h4&gt;

&lt;p&gt;The only feature in &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime&lt;/a&gt; I was jealous of was its great multi cursor support. With this plugin I don’t have to feel this way anymore! &lt;a href=&quot;https://github.com/terryma/vim-multiple-cursors/&quot;&gt;Get it here&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/vim-multi-cursors.gif&quot; alt=&quot;Sublime style multi cursors in Vim&quot; style=&quot;padding: 20px; width: 320px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Of course if you wanted to, &lt;a href=&quot;https://medium.com/@schtoeffel/you-don-t-need-more-than-one-cursor-in-vim-2c44117d51db#.ufvrj7yug&quot;&gt;you could have the same feature with native Vim features&lt;/a&gt;, but for now this plugin is really helpful to me.&lt;/p&gt;

&lt;h3 id=&quot;ruby-specific-plugins&quot;&gt;Ruby Specific Plugins&lt;/h3&gt;

&lt;p&gt;I mostly use Ruby and Ruby on Rails for my projects, so I also added some plugins to help me with that.&lt;/p&gt;

&lt;h4 id=&quot;bundlervim&quot;&gt;Bundler.vim&lt;/h4&gt;

&lt;p&gt;I mostly use it to get better highlighting in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;, but it also allows you to &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle open&lt;/code&gt; quickly. &lt;a href=&quot;https://github.com/tpope/vim-bundler&quot;&gt;Get it here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;endwise&quot;&gt;Endwise&lt;/h4&gt;

&lt;p&gt;Adds an &lt;code class=&quot;highlighter-rouge&quot;&gt;end&lt;/code&gt; keyword when needed. &lt;a href=&quot;https://github.com/tpope/vim-endwise&quot;&gt;Get it here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;vim-rails&quot;&gt;Vim-Rails&lt;/h4&gt;

&lt;p&gt;Must have plugin for anyone using Rails. It just does so much it would be a shame. I particularly like how it allows you to jump from file to file with ease. You can really go from a controller to its spec, to its views and so on. &lt;a href=&quot;https://github.com/tpope/vim-rails/&quot;&gt;Get it here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;vim-ruby&quot;&gt;Vim-Ruby&lt;/h4&gt;

&lt;p&gt;Main plugin for dealing with Ruby. &lt;a href=&quot;https://github.com/vim-ruby&quot;&gt;Get it here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;missed-one&quot;&gt;Missed One?&lt;/h3&gt;

&lt;p&gt;If you have plugins you feel belong here, feel free to share them in the comments or on &lt;a href=&quot;https://twitter.com/marcgg&quot;&gt;twitter&lt;/a&gt;!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Simple Git Flow With Heroku Pipelines</title>
     <link href="https://marcgg.com/blog/2016/02/22/git-flow-heroku-pipelines/"/>
     <updated>2016-02-22T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2016/02/22/git-flow-heroku-pipelines</id>
     <content type="html">
       &lt;p&gt;At &lt;a href=&quot;https://www.drivy.com/&quot;&gt;Drivy&lt;/a&gt; we’ve changed the way we work with Git from &lt;a href=&quot;http://nvie.com/posts/a-successful-git-branching-model/&quot;&gt;Git flow&lt;/a&gt; to something new… and so far it’s been working pretty well and allowed us to release faster! I feel like that this new flow is way simpler than Git Flow and more pragmatic than Github’s Flow. It has some general guidelines but still accounts for how a team acts in real life. The goal and measure of success here is the team’s ability to ship stable code quickly.
p
Let’s dig in!&lt;/p&gt;

&lt;h2 id=&quot;moving-away-from-git-flow&quot;&gt;Moving Away From Git Flow&lt;/h2&gt;

&lt;p&gt;For a while we used Git flow. After some time, like many, we ended up using a simplified version of it with no release branches. It worked fine and basically our release flow would go something like this:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/git-flow-before.jpg&quot; alt=&quot;Basic git flow&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;However recently Heroku released &lt;a href=&quot;https://blog.heroku.com/archives/2015/9/3/heroku_flow_pipelines_review_apps_and_github_sync&quot;&gt;pipelines&lt;/a&gt;, allowing you to promote your code from an environment to another really quickly. This was great and allowed us to speed up production releases, going from a few minutes to a couple of seconds.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/heroku-pipeline.png&quot; alt=&quot;Heroku pipelines example&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;The problem is that at this point we wouldn’t release the code on &lt;code class=&quot;highlighter-rouge&quot;&gt;develop&lt;/code&gt; to staging and the code on &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; to production like before. Instead we would release the code on &lt;code class=&quot;highlighter-rouge&quot;&gt;develop&lt;/code&gt; to staging and then promote the staging build to production.&lt;/p&gt;

&lt;p&gt;In the grand scheme of things it didn’t change much but, because of this, the &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch stopped making sense since we would never actually push it to Heroku. We would still merge to &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; to have this branch always releasable… but it felt weird, brought complexity to our automated tscripts and confused new hires.&lt;/p&gt;

&lt;p&gt;We had to change something.&lt;/p&gt;

&lt;h2 id=&quot;why-not-use-the-github-flow&quot;&gt;Why Not Use The Github Flow?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://guides.github.com/introduction/flow/&quot;&gt;This flow suggested by Github&lt;/a&gt; looked very promising, but I’m still having doubts regarding this part:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Once your pull request has been reviewed and the branch passes your tests, you can deploy your changes to verify them in production. If your branch causes issues, you can roll it back by deploying the existing master into production.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This looks nice on paper, but if you have a lot of developers wanting to push to production constantly it might slow things down as people wait to deploy their branch. For instance if developer A has a branch deployed in production and developer B wants to release something, dev B has to wait until dev A decided to consider their release stable and merged their branch into master.&lt;/p&gt;

&lt;p&gt;You could solve this by running multiple versions of the code on different machines and load balance traffic, but that seems overkill in most of the use cases I’ve encountered - I’d much rather have only one version of the code live and use &lt;a href=&quot;https://en.wikipedia.org/wiki/Feature_toggle&quot;&gt;feature flippers&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;our-simple-git-flow&quot;&gt;Our Simple Git Flow&lt;/h2&gt;

&lt;p&gt;At Drivy we emphasise small releases with a lot of tests and peer reviews. This allows us to move fast without breaking anything while keeping a high quality code base. Because of this we needed a very simple Git flow that didn’t get in the way of shipping code.&lt;/p&gt;

&lt;h3 id=&quot;basic-guidelines&quot;&gt;Basic Guidelines&lt;/h3&gt;

&lt;p&gt;Based on how we worked and our objective to be able to ship very frequently and easily, we decided on these rules:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use feature branches.&lt;/li&gt;
  &lt;li&gt;Our CI deploys &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;’s head to the staging environment if the tests pass.&lt;/li&gt;
  &lt;li&gt;The staging environment is promoted to production by any developer once it’s considered safe and ready.&lt;/li&gt;
  &lt;li&gt;Promoting to production adds a tag to the latest commit being promoted.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/git-flow-drivy.jpg&quot; alt=&quot;New simple git flow schema&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Note that for promoting a release from staging to production we use an internal tool to speed things up and keep this process safe. Basically a developer can just run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ drivy release&lt;/code&gt; in their terminal and a tool will check a bunch of things and promote the release if it’s deemed safe (checking github issues, database migrations, &lt;a href=&quot;http://cl.ly/0D3w0N2G331v&quot;&gt;possible manual locking&lt;/a&gt;…). Of course you can do the same thing manually.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;bundling-or-not-bundling&quot;&gt;Bundling Or Not Bundling&lt;/h3&gt;

&lt;p&gt;In the spirit of moving fast, every developer should try to release as soon as it gets to staging to avoid slowing the rest of the team down. However there might be some cases where it’s not possible, optimal, or maybe something goes wrong and you have to do it in some other way.&lt;/p&gt;

&lt;p&gt;The great thing with this setup is that it allows for quick and small deploys of possibly multiple different commits at once if needed:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/git-flow-bundling.jpg&quot; alt=&quot;Git flow bundled release&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;However in some cases you don’t want your commit to be pushed as part of another release. Let’s say you merged your commit and you’re ready to push it to production, but another developer merges their commit as well:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/git-flow-release-blocking-1.jpg&quot; alt=&quot;Schema for blocking commit in Git&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;In this situation, no need to wait! You can simply promote the latest safe staging release to production:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/git-flow-release-blocking-2.jpg&quot; alt=&quot;Solving blocking of master&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;hotfixing&quot;&gt;Hotfixing&lt;/h3&gt;

&lt;p&gt;If there is an issue with a release and we can’t release &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; for any reason, we can still hotfix pretty easily. To do this we just need to checkout to the latest tag which represents the version running in production and pull a hotfix branch. Then we do the fix, release the hotfix branch and merge it back into &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/git-flow-hotfix-1.jpg&quot; alt=&quot;Hotfixing with Git step 1&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;The hotfix branch will be running in production until whatever is blocking &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; is fixed.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/git-flow-hotfix-2.jpg&quot; alt=&quot;Hotfixing with git step 2&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Of course we should avoid as much as possible commits preventing the &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch to be released, but this kind of things can happen and thanks to the tags we are able to deal with it easily.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Automatically Run RSpec on Multiple Projects</title>
     <link href="https://marcgg.com/blog/2016/02/15/rspec-on-multiple-rails-projects/"/>
     <updated>2016-02-15T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2016/02/15/rspec-on-multiple-rails-projects</id>
     <content type="html">
       &lt;p&gt;&lt;em&gt;tl;dr: I had to run specs on a lot of different projects and gather results. Here’s how I did it with shell scripts and Ruby.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For a couple of years now I’ve been teaching a Ruby on Rails class for approximatively 100 students. Since I believe in learning by doing, I try to get them to actually write code as much as possible. To do this I usually give them automated tests that they have to get to pass. I’m not a huge believer in grades, but I do have to give them one and it’s always a good incentive for the students to get to work. Therefore all these exercices go this way: 20 tests, 1 point per test passing.&lt;/p&gt;

&lt;p&gt;Every week, I would give them a new exercice and I try to get it corrected before the next class. I would then adapt my slides according to their results to focus on pain points. It also allows me to spot students in difficulty. Overall I think it’s a good approach and it gets everyone coding on the first day of class.&lt;/p&gt;

&lt;p&gt;The problem with this is that every week I would end up with close to a hundred Ruby on Rails projects on which I would need to run the specs to see how my students performed. Doing this manually would take forever, especially if I wanted insights like “how many students failed the 5th test?”, so obviously I had to automate this.&lt;/p&gt;

&lt;h2 id=&quot;without-rails&quot;&gt;Without Rails&lt;/h2&gt;

&lt;p&gt;Running RSpec on a simple Ruby project without Rails is easier because loading a few Ruby files is pretty straightforward and rspec comes with tooling for this situation.&lt;/p&gt;

&lt;h3 id=&quot;using-a-formatter&quot;&gt;Using a Formatter&lt;/h3&gt;

&lt;p&gt;First we need to use a &lt;a href=&quot;https://www.relishapp.com/rspec/rspec-core/docs/formatters/json-formatter&quot;&gt;JSON formatter&lt;/a&gt; so that rspec’s output becomes easily usable:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rspec'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rspec/core/formatters/json_formatter'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configuration&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Formatters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;JsonFormatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;output_stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;reporter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;no&quot;&gt;RSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Reporter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;instance_variable_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:@reporter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reporter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;loader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:formatter_loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;notifications&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:notifications_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Formatters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;JsonFormatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;reporter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;register_listener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;notifications&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;running-the-specs&quot;&gt;Running The Specs&lt;/h3&gt;

&lt;p&gt;Once the formatter is setup, we need to iterate over every projects with &lt;code class=&quot;highlighter-rouge&quot;&gt;Dir.entries&lt;/code&gt; and load the implementation files for every project:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;code_path/*.rb&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;… and actually run the specs right after:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;RSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The problem here is that we don’t unload the previously loaded files, which can lead to issues. To fix this, the simplest solution is to run this in &lt;a href=&quot;http://ruby-doc.org/core-2.1.2/Process.html&quot;&gt;a new process&lt;/a&gt; and the memory encapsulation will take care of itself:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;fork&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
 &lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;code_path/*.rb&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;no&quot;&gt;RSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;reading-the-results&quot;&gt;Reading the Results&lt;/h3&gt;
&lt;p&gt;Once the specs are done running, you can just access the results via the formatter with &lt;code class=&quot;highlighter-rouge&quot;&gt;formatter.output_hash&lt;/code&gt;. For instance if you want the number of failures:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;output_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:failure_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once you managed to read the information you need, you can store it in a file somewhere and manipulate it easily in another process.&lt;/p&gt;

&lt;h2 id=&quot;with-rails&quot;&gt;With Rails&lt;/h2&gt;

&lt;p&gt;Getting a project ready to run rspec can get tricky as a lot of new factors are introduced (gems, databases…). Loading rails to run rspec is more complex than just looping throught the project’s files and doing a &lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt;. I tried doing it by manually loading Rails from a fork like before, but it turned out to be a mess and there was some cases where it would simply not work. Remember, I have to work with hundreds of different student projects, and it has to run for all of them.&lt;/p&gt;

&lt;h3 id=&quot;shell-scripts-to-the-rescue&quot;&gt;Shell Scripts To The Rescue!&lt;/h3&gt;

&lt;p&gt;After a few hours stuck on weird Rails issues, I figured it would be simpler and faster to just introduce bash and brute force my problem. Since it’s script issue, why not write shell scripts?&lt;/p&gt;

&lt;p&gt;First I created a Ruby script that would generate a shell script for each project looking like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd FULL_PATH
bundle install
rake db:drop RAILS_ENV=test
rake db:create RAILS_ENV=test
rake db:migrate RAILS_ENV=test
bundle exec rspec spec &amp;gt; ../rspec_results.log
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Running this script would setup the environment and run the specs while outputting the results in a log file that I will be able to process later on.&lt;/p&gt;

&lt;p&gt;I don’t think that sharing this piece of code is as interesting since it’s a bit messy and depends on your file structure. The idea is to create a new &lt;code class=&quot;highlighter-rouge&quot;&gt;.sh&lt;/code&gt; file for each project and don’t forget to set it to the appropriate access rights:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;FileUtils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;youruser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;staff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;FileUtils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chmod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;0777&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you really want to take a look at what I’ve done here, &lt;a href=&quot;https://gist.github.com/marcgg/b1a50180d1ff239ba555&quot;&gt;I created a gist&lt;/a&gt;. Also note that you could have done the same thing with a bigger and more complex shell script, but I figured it would be simpler to it this way with a bunch of really small and independent files.&lt;/p&gt;

&lt;h3 id=&quot;running-the-scripts&quot;&gt;Running The Scripts&lt;/h3&gt;

&lt;p&gt;Once all the scripts are created, we just need to run them. So, for every project folder run:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;fork&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/run.sh&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note that I run once again the code in a new process. This is mainly because I want to take advantage of the multiple cores on my machine. Of course this will result in my computer to really slow down, as running a hundred rails processes and bundler installation is very memory heavy, but from my experience it always turns out to be faster - at least on my computer. Using &lt;code class=&quot;highlighter-rouge&quot;&gt;exec&lt;/code&gt; is nice here as it &lt;a href=&quot;http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-exec&quot;&gt;completely replace the ruby process by the shell script&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;reading-the-results-1&quot;&gt;Reading The Results&lt;/h3&gt;

&lt;p&gt;Once all the scripts are done running, you can just parse the multiple &lt;code class=&quot;highlighter-rouge&quot;&gt;rspec_results.log&lt;/code&gt; files you ended up with. In my experience it involves a few regular expressions but it’s quite easy. You could also make the rspec output &lt;a href=&quot;https://relishapp.com/rspec/rspec-core/v/2-6/docs/command-line/format-option&quot;&gt;more to your taste&lt;/a&gt; with the &lt;code class=&quot;highlighter-rouge&quot;&gt;--format&lt;/code&gt; option if you’d like.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Code Coverage Is A Vanity Metric</title>
     <link href="https://marcgg.com/blog/2015/11/03/code-coverage-vanity-metric/"/>
     <updated>2015-11-03T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2015/11/03/code-coverage-vanity-metric</id>
     <content type="html">
       &lt;p&gt;Code coverage can be a useful way to find untested sections of your project. However, if used as a KPI, it can do more harm than good.&lt;/p&gt;

&lt;p&gt;I see looking at code coverage a bit the same way as looking at the lines of code count in a project. If there are 800 lines in a file, it’s probably a problem. However if someone uses the number of lines per file as a metric and decides to set objectives like “get every file under 50 LoC”, we’re in trouble. Developers will end up extracting the logic just for the sake of extracting. Of course there are situations where &lt;a href=&quot;https://www.youtube.com/watch?v=f5I1iyso29U&quot;&gt;having a messy file is the best option&lt;/a&gt; at a given time, and judging code quality based on something as arbitrary as LoC count makes little sense.&lt;/p&gt;

&lt;p&gt;Because of that when I hear companies or individuals brag about very high coverage rates, I can’t help but wonder what kind of tests they are doing and why they are so proud of this particular number… because it’s fairly simple to drive this value up and not actually improve your test suite.&lt;/p&gt;

&lt;p&gt;For instance turning a condition into a one liner with the help of a &lt;a href=&quot;https://en.wikipedia.org/wiki/%3F:&quot;&gt;ternary operator&lt;/a&gt; does increase test coverage in most tools, but it doesn’t improve actual testing of the app. You could also run a line of code but not make any assertions on its effects… the line ends up “covered”, but you didn’t test a thing besides syntax errors. Make this test broad enough and you could cover hundreds of lines of code while effectively testing nothing at all. It’s fair to say that, even with no malicious intent, it’s easy to end up with the coverage not really reflecting what is actually tested.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/coverage.jpg&quot; style=&quot;padding: 20px; width: 500px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Since code coverage can so easily be wrong and manipulated, it becomes impossible to efficiently act based on it, making it a kind of gamification of testing at best, a vanity metric at worse. Having a high coverage also gives you a certain sense of security, possibly making you blind to deeper issues in your testing strategy.&lt;/p&gt;

&lt;p&gt;The most important thing about tests is their ability to detect bugs, not that they improves some number on a dashboard. You can have thousands of tests, if their only purpose is to raise coverage, they are useless.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The pupil went to the master programmer and said:&lt;/p&gt;

  &lt;p&gt;“All my tests pass all the time. Don’t I deserve a raise?”&lt;/p&gt;

  &lt;p&gt;The master slapped the pupil and replied:&lt;/p&gt;

  &lt;p&gt;“If all your tests pass, all the time, you need to write better tests.”&lt;/p&gt;

  &lt;p&gt; &lt;/p&gt;

  &lt;p&gt;From “&lt;a href=&quot;http://www.artima.com/weblogs/viewpost.jsp?thread=203994&quot;&gt;The Way of Testivus&lt;/a&gt;” by Alberto Savoia&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You could stop looking at coverage as a sign of good testing and evaluate the number of regressions and other bugs introduced in production instead. This would probably give you a better sense of how well your project is tested. Then you can start thinking about why the tests already written did not catch the issues before release and improve your strategy.&lt;/p&gt;

&lt;p&gt;Of course don’t throw away your coverage tools, they can be useful to find dead code or sections that are not tested… just don’t use the result as some kind of &lt;a href=&quot;https://www.youtube.com/watch?v=KOO5S4vxi0o&quot;&gt;KPI&lt;/a&gt; for your project and don’t assume that a “covered” line is a “tested” line.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I wouldn’t have written four coverage tools if I didn’t think they’re helpful. But they’re only helpful if they’re used to enhance thought, not replace it”&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Brian_Marick&quot;&gt;Brian Marick&lt;/a&gt; in “&lt;a href=&quot;http://www.exampler.com/testing-com/writings/coverage.pdf&quot;&gt;How to Misuse Code Coverage&lt;/a&gt;”&lt;/p&gt;
&lt;/blockquote&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>How To Checkout The Previous Branch In Git</title>
     <link href="https://marcgg.com/blog/2015/10/18/git-checkout-minus/"/>
     <updated>2015-10-18T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2015/10/18/git-checkout-minus</id>
     <content type="html">
       &lt;p&gt;&lt;strong&gt;tl;dr: Use &lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout -&lt;/code&gt; to move back to the previous branch.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When using Git, it’s very common to move back and forth between two branches. To do this, you can of course type the whole checkout command with the branch name and everything. It works but feels a bit excessive just to move back one branch. Well, just like Unix has &lt;code class=&quot;highlighter-rouge&quot;&gt;cd -&lt;/code&gt;, Git has:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout @{-1}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will move you back to the branch you were on previously. The syntax looks a bit esoteric, so let’s take a look at the &lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout&lt;/code&gt; documentation to understand it better:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;As a special case, the “@{-N}” syntax for the N-th last branch/commit checks out branches (instead of detaching).&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://git-scm.com/docs/git-checkout&quot;&gt;Git Documentation&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now with an example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout master
Switched to branch 'master'
$ git checkout -b first
Switched to a new branch 'first'
$ git checkout -b second
Switched to a new branch 'second'
$ git checkout -b third
Switched to a new branch 'third'
$ git checkout &quot;@{-2}&quot;
Switched to branch 'first'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;… and let’s add a schema to make it even clearer:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/git-checkout-previous.jpg&quot; alt=&quot;Git checkout previous schema&quot; style=&quot;padding: 20px; width: 420px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;It’s a nice feature, but it’s also bit hard to remember and requires a lot of keystrokes. Thankfully, &lt;a href=&quot;https://github.com/git/git/blob/master/Documentation/RelNotes/1.6.2.txt#L85&quot;&gt;since Git 1.6.2&lt;/a&gt; there is a shorthand:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout -
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you know your Unix commands, you should feel right at home with this one!&lt;/p&gt;

&lt;p&gt;As a quick note, if you’re into command line aliases, I use this one and it’s pretty rad:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alias g-='git checkout -'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Don't Automate Tasks Only Based On Time Spent</title>
     <link href="https://marcgg.com/blog/2015/09/30/automate-repetitive-tasks/"/>
     <updated>2015-09-30T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2015/09/30/automate-repetitive-tasks</id>
     <content type="html">
       &lt;p&gt;When it comes to automating repetitive tasks done on a computer, there seem to be two schools of thought.&lt;/p&gt;

&lt;h2 id=&quot;views-on-automation&quot;&gt;Views On Automation&lt;/h2&gt;

&lt;p&gt;The first view is that only fools would spend their time doing these repetitive tasks manually and not write a script. In this scenario, the developer “wins” while the poor commoner “loses”. Hm.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/automation-win.png&quot; alt=&quot;Automating daily tasks as a success&quot; style=&quot;padding: 20px; width: 420px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;The second view is that developers are wasting their time since automating a task is often more complex than it seems. It would be simpler and more efficient to just suck it up and do it manually. These nerds can’t just keep their heads down and do simple tasks, they have to overcomplicate everything! Hm.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/automation.png&quot; alt=&quot;Automating tasks overkill&quot; style=&quot;padding: 20px; width: 420px;&quot; /&gt;&lt;em&gt;via &lt;a href=&quot;https://xkcd.com/1319/&quot;&gt;xkcd&lt;/a&gt;&lt;/em&gt;&lt;/div&gt;

&lt;p&gt;Personally, I think that the following graph by &lt;a href=&quot;http://blog.jonudell.net/2012/01/09/another-way-to-think-about-geeks-and-repetitive-tasks/&quot;&gt;Jon Udell&lt;/a&gt; is closer to a real life and effective way of thinking of the link between automation and etime. Of course it’s also less funny than the xkcd one but that’s fine.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/automation-real-win.png&quot; alt=&quot;Agility and iterating on automating tasks&quot; style=&quot;padding: 20px; width: 420px;&quot; /&gt;&amp;lt;/em&amp;gt;&lt;/div&gt;

&lt;h2 id=&quot;the-missing-factors&quot;&gt;The Missing Factors&lt;/h2&gt;

&lt;p&gt;The thing is that we’re missing important factors when talking about deciding if automating a task is worth it or not. In these kind of graphs or comparaisons we’re mostly wondering if automating will make us gain time, when in reality time is just one factor in a complex equation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let’s take an example&lt;/strong&gt; and say that every day I need to manually write down 10 numbers in a spreadsheet. Doing this will take me 1 minute, and automating it should take approximatively 10 hours.&lt;/p&gt;

&lt;p&gt;If we only base our logic on time and I trust my &lt;a href=&quot;/blog/2015/08/27/deadlines-estimates-software-startup/&quot;&gt;estimate&lt;/a&gt; of 10 hours, it should become interesting to automate if I end up doing the task for more than &lt;em&gt;600 working days&lt;/em&gt;. That’s such a long time that it feels like there won’t be a discussion about it unless I spend at least a year doing it manually.&lt;/p&gt;

&lt;p&gt;However that would be ignoring the other factors.&lt;/p&gt;

&lt;h3 id=&quot;energy&quot;&gt;Energy&lt;/h3&gt;

&lt;p&gt;When doing a repetitive task, you’re not only spending time, but also energy. A task can be short, but it can be exhausting mentally. If every time I write down the numbers in my spreadsheet I have to be cautious to avoid making mistakes, it might take a lot of concentration and drain my energy.&lt;/p&gt;

&lt;p&gt;Once the task is done, I might not be able to go back to the exact thing I’d want to be doing and pick something easier instead.&lt;/p&gt;

&lt;h3 id=&quot;frustration&quot;&gt;Frustration&lt;/h3&gt;

&lt;p&gt;Doing repetitive tasks is rarely fun. Because of this, you’re probably building frustration while working on them. In the long run this can be a problem.&lt;/p&gt;

&lt;p&gt;Once I’ve done the task a few dozens of times, it starts getting annoying. After hundreds of times, it seems like a complete waste of time and I might even get mad at the very idea of having to do it. Of course it will depend on different people, but I tried to sum up the idea in this graph:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/frustration-productivity-automation.png&quot; style=&quot;padding: 20px; width: 420px;&quot; alt=&quot;Relation between automating tasks and frustration&quot; /&gt;&lt;em&gt;Note how the time spent each day increases once the productivy starts to decrease.
&lt;/em&gt;&lt;/div&gt;

&lt;p&gt;Adding too many repetitive tasks that are not worth automating and you could end up with a higher turnover, a toxic atmosphere or some very low productivity number.&lt;/p&gt;

&lt;h3 id=&quot;focus&quot;&gt;Focus&lt;/h3&gt;

&lt;p&gt;Every day I need to do this one task. I also probably have a few others tasks just like this. To be able to complete them on time, I might have to stop what I’m doing at some point and shift my focus to this repetitive task. Even if the task itself takes 1 minute, the context switching will cost way more.&lt;/p&gt;

&lt;h3 id=&quot;growth&quot;&gt;Growth&lt;/h3&gt;

&lt;p&gt;Getting very good and as fast as possible at a daily repetitive task happens rather quickly. Once the task is mastered, all that remains is doing it over and over again.&lt;/p&gt;

&lt;p&gt;In this situation, automating can become a great opportunity to learn something new and think outside the box. This is especially true for non programmers: they can take the opportunity to improve their Excel skills or get into a simple programming language in order to write small scripts.&lt;/p&gt;

&lt;h2 id=&quot;when-to-automate&quot;&gt;When To Automate&lt;/h2&gt;

&lt;p&gt;As we saw, all these factors have an impact on productivity and long term. Focus and energy have a short term effect, when frustration starts to show on a more medium to long term scale.&lt;/p&gt;

&lt;p&gt;Overall it is very hard to know when the optimal time to automate is. Do it too soon, you will waste time, do it too late and you’ll get the same problem. However, I feel like it’s more efficient to take a decision about this when you don’t only take time into account.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Deadlines And Estimates In Startups</title>
     <link href="https://marcgg.com/blog/2015/08/27/deadlines-estimates-software-startup/"/>
     <updated>2015-08-27T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2015/08/27/deadlines-estimates-software-startup</id>
     <content type="html">
       &lt;p&gt;A lot of developers in startups are against deadlines and estimates. There’s even a whole “&lt;a href=&quot;https://twitter.com/search?q=#noestimates&amp;amp;src=typd&quot;&gt;#NoEstimates&lt;/a&gt;” movement that appeared recently.&lt;/p&gt;

&lt;p&gt;This fact is usually hard to understand for project owners, and it leads to incomprehensions on both sides. Product owners feel like developers don’t want to commit and act unprofessionally, developers feel like management don’t trust them and set unrealistic goals… it’s a mess, and it’s not helpful for the company nor the well being of the employees.&lt;/p&gt;

&lt;p&gt;Let’s take a few minutes to see why this is happening and what we can do to work more effectively together. It’s a long article, so I summarised the various points in the tl;dr section below.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note that this article is aimed at startups and teams smaller than 50 people. I’ll also be assuming good faith, meaning that all people involved just want the project to succeed and are not just mean spirited or blatantly incompetent. If you have toxic people within your team, that’s another subject.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;tldr&quot;&gt;tl;dr;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt; It’s perfectly fine to work with deadlines and estimates&lt;/strong&gt;: they are not contraptions to alienate developers and cause everyone stress. As a matter of fact, if you’re a developer you probably already do estimates for yourself. However, they need to be handled correctly by every person in the team to be effective instead of toxic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; Estimates are just a way to communicate&lt;/strong&gt; the difficulty and duration of a task inside and outside a team. You don’t need to do it all the time, and they do not commit the developer to anything. An estimate is absolutely not a deadline.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; Real deadlines are real life date constraints&lt;/strong&gt; applied to the project. They simply appear and the team needs to deal with it. Companies should strive to remove them altogether from their path, but sometimes it’s impossible to do so because of external factors (competition, vendors, states, laws…). If a company is constantly under external deadlines, there might be a larger problem at work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; We should acknowledge that there are fake deadlines&lt;/strong&gt;. They are the reason everyone is so annoyed at the very concept of deadlines and estimates. These artificial dates bring no value to the project and produce stress while reducing quality.&lt;/p&gt;

&lt;h2 id=&quot;why-is-this-happening&quot;&gt;Why Is This Happening?&lt;/h2&gt;

&lt;p&gt;First, a lot of developers experienced situations that made them very suspicious of both deadlines and estimates. For instance, be subjected to painful top down management styles leading to forced unrealistic deadlines or estimates taken as deadlines. You have to understand that some managers treat developers as if they were a poorly qualified workforce, only good at setting up printers and typing. Why would they have anything to contribute to the project management process?&lt;/p&gt;

&lt;p&gt;There are also sales persons that love to promise impossible features to clients and passing on the blame to the technical team. “You have to do it by the end of next week, we already billed the client - I don’t care that it’s not possible”.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/toxic_dilbert.gif&quot; style=&quot;padding: 20px; width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Obviously I’m not saying that all managers are like that, or that all sales persons do this. That is just what a lot of developers experienced and now we have a situation where they cringe when someone pronounces the word “deadline”.&lt;/p&gt;

&lt;h2 id=&quot;what-are-estimates-exactly&quot;&gt;What Are Estimates Exactly?&lt;/h2&gt;

&lt;p&gt;Before starting, I need to clarify something that most people miss and is crucial for the rest of this article: an estimate is nothing more than an educated guess. It’s not a deadline, it’s not a binding contract. A developer saying “It should take me around 3 days to complete this” is not saying “this will be done in precisely 3 days, you can count on it”. An estimate is also not a negotiation, it’s just about communicating how long something might take given a set of constraints.&lt;/p&gt;

&lt;p&gt;Once you use this definition, it becomes obvious that it is perfectly fine to overshoot an estimate and no one should get blamed.&lt;/p&gt;

&lt;p&gt;In my experience it often happens that estimates are mistaken for commitments, mostly because of misunderstandings. If both parties don’t communicate well enough, there is a huge room for interpretation and we end up with situations where an estimate becomes a deadline in the eyes of one person and not the other.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“You told me it should take you 3 weeks, therefore the client will be expecting the project to be done in 3 weeks.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It’s the responsibility of all parties involved to make sure that these conversations are crystal clear. For instance it should be obvious that any changes made to scope or quality requirements invalidate entirely any estimate.&lt;/p&gt;

&lt;h2 id=&quot;estimates-and-clear-communication&quot;&gt;Estimates And Clear Communication&lt;/h2&gt;

&lt;p&gt;With the definition above, estimates become perfectly ok. They help everyone get an understanding of the amount of work we’re about to get into as a team.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;Product Manager:&lt;/span&gt; We want to add a newsletter feature to our website. How long do you think it will take?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;Developer:&lt;/span&gt; It depends, do you want to use a third party or do it entirely internally?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;PM:&lt;/span&gt; I’m not sure. How long would it take?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;D:&lt;/span&gt; Using a third party should be way faster, probably a day or two of development. Of course I’ll be able to tell you more precisely once we spend a few hours comparing what good SaaS are within our budget and how to use them. Developing the newsletter from scratch is going to be longer than that.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;PM:&lt;/span&gt; How much longer? You know we try to avoid adding too many third parties to this app.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;D:&lt;/span&gt; Something close to a couple of weeks. There are a lot of things to think about - unsubscriptions, templates … If you’d like I could spend a day on it to refine my estimate?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;PM:&lt;/span&gt; That’s alright, we’ll go with the third party option. There’s no need to spend that much time on a newsletter. I’ll see with the others what budget we have and get back to you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The product owner means well, but doesn’t have all the information needed to make a decision. To handle this, both parties use estimates to determine what option makes the most sense for the company. In the end, no deadline has been set.&lt;/p&gt;

&lt;p&gt;However, not all discussions go like this. Let’s say that a couple of days passed and the product manager comes back to the developer:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;PM:&lt;/span&gt; I have the budget approved, we can afford to use Mailchimp for this. How long will it take?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;D:&lt;/span&gt; I’m not sure exactly, I’d say a couple of days but I never used Mailchimp before. It’s supposed to be simple, but I can’t be sure.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;PM:&lt;/span&gt; I need to know if it’s going to get done for the big meeting tomorrow so I can write a slide about it.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;D:&lt;/span&gt; I can’t promise you that. It will be done by the end of the week, but tomorrow is too close for me to commit.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;PM:&lt;/span&gt; It’s a very important meeting you know.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;D:&lt;/span&gt; Of course, that’s why I don’t want to promise on something I’m not sure I can deliver and leave you at the meeting with an half finished newsletter!&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;PM:&lt;/span&gt; I understand.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here, the developer refuses to commit to a date because she lacks information. It would be risky.&lt;/p&gt;

&lt;p&gt;If the product manager doesn’t accept this it means that the manager doesn’t trust the developer… and that’s a whole other story. If the product manager pushes too much to have a precise date, the developer should make sure that his requirement has some real life basis. If not, it might be a fake deadline as I’ll be discussing later on.&lt;/p&gt;

&lt;p&gt;Overall, if some people are pressuring others and creating a toxic environment, different rules may apply.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/dilbert_estimates.jpg&quot; style=&quot;padding: 20px;&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;advantages-of-estimates-for-developers&quot;&gt;Advantages Of Estimates For Developers&lt;/h2&gt;

&lt;h3 id=&quot;you-probably-already-do-it&quot;&gt;You Probably Already Do It&lt;/h3&gt;

&lt;p&gt;Most people, unless they are working on a R&amp;amp;D project, don’t go into a feature with no clue whatsoever of how long it’s going to take to complete.&lt;/p&gt;

&lt;p&gt;I’m sure that, if you’re a developer, you’re making estimates for yourself already. Of course these are not precise estimates, and you don’t need a complex process to produce them. It’s more a short reflexion based on your previous experiences solving similar problems than anything else. The result sounds like “this should take me a day or two” or “if I’m not done by the end of the week I’d be really surprised”.&lt;/p&gt;

&lt;p&gt;It’s perfectly fine to do this: you don’t commit yourself, you don’t set a hard date. Now let’s see how your own quick estimates can be useful for the project.&lt;/p&gt;

&lt;h3 id=&quot;not-wasting-time&quot;&gt;Not Wasting Time&lt;/h3&gt;

&lt;p&gt;Sometimes a developer can see that a feature is not worth building because it would take too long. This is something product managers can’t know and are always happy to hear about.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;Developer:&lt;/span&gt; I see you assigned me a ticket to add a PDF export feature for our premium users.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;Product Manager:&lt;/span&gt; Yes, it was a feature request that came out of the last user survey we sent out. Is there a problem with the spec?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;D:&lt;/span&gt; Not really a problem, but I think it will take at least two weeks to complete. I looked at it quickly and it seems the data is really not formatted as we want for this export.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;PM:&lt;/span&gt; Really? It seemed easy!&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;D:&lt;/span&gt; Yes, it could have been easy. The thing is, we made this structural choice a while back and I’d need to change it before making the export. Do you think it’s worth it?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;PM:&lt;/span&gt; I was thinking it would only take a day when I assigned the ticket to you… I don’t think it’s worth spending two weeks on that. It’s just a feature that would have been nice to have if it had taken a day or two.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;D:&lt;/span&gt; My thoughts exactly. I’ll close the ticket and start working on this other feature instead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;detecting-difficulties&quot;&gt;Detecting Difficulties&lt;/h3&gt;

&lt;p&gt;Used correctly, estimates can help technical leads identify other developers struggling with a complex issue. This also prevents the very need for micromanagement or the “are you done yet” effect.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;span class=&quot;dcto&quot;&gt;CTO:&lt;/span&gt; I assigned you this new ticket to develop the ability to add a discount code on checkout.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;Developer:&lt;/span&gt; Great! It’s been on the roadmap for a while, glad we can get to it.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dcto&quot;&gt;CTO:&lt;/span&gt; How long do you think it should take you?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;D:&lt;/span&gt; I’m not sure, but I doubt it’ll take more than 2 days.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;2 days later…&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;span class=&quot;dcto&quot;&gt;CTO:&lt;/span&gt; I noticed that you’re still not done on the discount feature. It’s not a problem, but I was wondering if you were having any trouble.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;D:&lt;/span&gt; Yes, it turns out we need a special integration with our payment provider I didn’t think of.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dcto&quot;&gt;CTO:&lt;/span&gt; That’s too bad. How much more time do you think it’ll take?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;D:&lt;/span&gt; I really don’t know, maybe two weeks, but it could be more. Should I stop development and go back on another feature?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dcto&quot;&gt;CTO:&lt;/span&gt; No, it’s a very important piece of functionality, so please keep going and take the time you need to get it right. If by the end of the week you’re still having troubles you could pair with Tim, he knows well this part of the app. What do you think?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;D:&lt;/span&gt; That would be helpful, great!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;finding-quick-wins&quot;&gt;Finding Quick Wins&lt;/h3&gt;

&lt;p&gt;Estimates can help a developer find and communicate about quick wins for the project.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;Developer:&lt;/span&gt; Remember how we wanted to be able to use advanced filters on our internal search?&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;Product Manager:&lt;/span&gt; Yes, you told me  a year ago that it would take months. I’d love to have it, but it’s not very high priority right now.&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;ddev&quot;&gt;D:&lt;/span&gt; Well, thanks to my latest refactoring made for another feature I was working on, we should be able to add the filters in a day or two!&lt;/p&gt;

  &lt;p&gt;&lt;span class=&quot;dpm&quot;&gt;PM:&lt;/span&gt; That would be amazing! Now that it can be that fast, it’s worth spending the time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;the-cost-of-estimates&quot;&gt;The Cost Of Estimates&lt;/h2&gt;

&lt;p&gt;Giving an estimate always costs time. It can go to a minute of reflexion to full fledged processes such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Planning_poker&quot;&gt;planning poker&lt;/a&gt; that requires some amount of training.&lt;/p&gt;

&lt;p&gt;If the cost of estimating something gets too big compared to the scope of the feature, I don’t think it makes sense to be spending this time. For instance if you take 2 hours discussing whether a feature will take 4 hours or 6 hours, you are obviously wasting time.&lt;/p&gt;

&lt;p&gt;Overall, for startups, I recommend not spending more than a few minutes on estimates. If you end up with a huge project, try to break it into smaller bits and estimate these instead of trying to deal with the whole thing.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The future is uncertain and you will never know less than you know right now.”&lt;/p&gt;

  &lt;p&gt;Sandi Metz, &lt;a href=&quot;http://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330&quot;&gt;Practical Object-Oriented Design in Ruby: An Agile Primer&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If estimates are mandatory for each simple feature, you might be losing a lot of time, and people might start to develop crazy ways to do these estimates.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/estimate_nonsense.png&quot; style=&quot;padding: 20px; width: 680px;&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;deadlines&quot;&gt;Deadlines&lt;/h2&gt;

&lt;h3 id=&quot;real-deadlines&quot;&gt;Real Deadlines&lt;/h3&gt;

&lt;p&gt;There are deadlines in the real world. It’s just the way it is. A company’s life leads to situations where you need to have something done by a certain date. Let’s say you run an online store and you need to release a crucial new feature before black Friday. If you miss this date, you will lose a lot of money and potentially destroy the company.&lt;/p&gt;

&lt;p&gt;If everyone is aware of it and the company is well prepared, facing a deadline can be easy and without stress. For instance if you need 1 month to get a feature out for black Friday, but you start working on it 6 months in advance, everything should be fine.&lt;/p&gt;

&lt;p&gt;These deadlines are perfectly valid to me and they are often exceptional. It’s just how real life operates, sometimes you have a hard date you can’t change and that’s it. Companies need to make sure they explain well why they end up in a situation where a deadline has appeared and put the needed ressources in place so that the deadline is met. For instance, they might need to hire extra help, pay overtime or give up on some unessential feature details. In these situations you can use estimates to make better decisions on what to do in order to succeed.&lt;/p&gt;

&lt;p&gt;Of course these real life deadlines are exceptional, if you have one every week it’s symptomatic of a deeper business-related problem.&lt;/p&gt;

&lt;h3 id=&quot;artificial-deadlines-or-fake-deadlines&quot;&gt;Artificial Deadlines or “Fake” Deadlines&lt;/h3&gt;

&lt;p&gt;There are some deadlines that are not linked to the real world and these are simply useless. As a rule of thumb, if the only thing that happens if a deadline is not met is a manager getting angry, then it was not a real deadline.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/fake_deadline.jpg&quot; style=&quot;padding: 20px; width: 450px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;For instance, rushing to get a feature into production by the end of the week because it’s the end of the sprint. Spending a night of overtime at the office because someone really want to show off the feature at some small meeting. You could even argue that these are not even deadlines, just some milestones with people stressed out about the due date!&lt;/p&gt;

&lt;p&gt;To avoid missing these fake deadlines, developers will reduce quality or scope. So you’ll end up with incomplete or poorly created features, all this for the sake of an artificial deadline. This is short-sighted, makes absolutely no sense and, if repeated enough time, will drive your team away or at least lead to some serious loss in productivity over time. Creating a sustainable startup is not a sprint, it’s a longer race.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.”&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://agilemanifesto.org/principles.html&quot;&gt;Principles behind the Agile Manifesto&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;deadlines-for-motivation&quot;&gt;Deadlines For Motivation&lt;/h3&gt;

&lt;p&gt;Some people like to work under deadlines and I get it. It sets a clear goal and provides a good feedback on how you are performing.&lt;/p&gt;

&lt;p&gt;I’d say that this is fine if you use artificial deadlines for this, only if everyone agrees that a missed deadline is not a big deal. If you don’t have a real life time constraint, there’s no need to sacrifice scope or quality, so why would you do this?&lt;/p&gt;

&lt;p&gt;However, if you say that a deadline can be missed… is this even a deadline anymore? Why not start talking about “milestones” instead of “deadlines”? It sounds way less terrifying.&lt;/p&gt;

&lt;h2 id=&quot;learn-more&quot;&gt;Learn More&lt;/h2&gt;

&lt;p&gt;If you want to keep reading about deadlines, I find the article by &lt;a href=&quot;https://twitter.com/michaelochurch&quot;&gt;Michael O. Church&lt;/a&gt;, &lt;a href=&quot;https://michaelochurch.wordpress.com/2014/06/20/on-programmers-deadlines-and-agile/&quot;&gt;On programmers, deadlines, and “Agile”&lt;/a&gt;, very interesting even if I don’t agree with all of it.&lt;/p&gt;

&lt;p&gt;I would also recommend reading &lt;a href=&quot;/books/&quot;&gt;The Clean Coder: A Code of Conduct for Professional Programmers&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/unclebobmartin&quot;&gt;Robert C. Martin&lt;/a&gt;. It really is a great book and it goes into more details regarding the relation developers should have with deadlines and estimates. I was very inspired by the dialogues in this book when writing the ones in this article.&lt;/p&gt;

&lt;p&gt;Finally, I encourage you to read &lt;a href=&quot;https://pragprog.com/magazines/2013-04/estimation&quot;&gt;“Estimation - The Best We Can Do”&lt;/a&gt; by Jon Jeffries where he discusses the way estimates can be done in the context of agile teams. I don’t like the concept of velocity, but some points are worth reading.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks a lot to &lt;a href=&quot;http://julienblanchard.com/&quot;&gt;Julien&lt;/a&gt; for challenging me on the very first draft of the article and helping me refine my reflexion. Thanks also to all other people who helped me make some adjustments and spelling corrections!&lt;/em&gt;&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Git Log's --first-parent Option</title>
     <link href="https://marcgg.com/blog/2015/08/04/git-first-parent-log/"/>
     <updated>2015-08-04T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2015/08/04/git-first-parent-log</id>
     <content type="html">
       &lt;p&gt;Git is full of little features that are very cool to discover. Let me tell you about an option of the &lt;a href=&quot;http://git-scm.com/docs/git-log&quot;&gt;git-log&lt;/a&gt; function:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git log --first-parent
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This makes the log only follow the first parent commit after a merge. It seems a bit abstract, so what about a concrete example?&lt;/p&gt;

&lt;h2 id=&quot;example-system&quot;&gt;Example System&lt;/h2&gt;

&lt;p&gt;Let’s say I want to output additions and deletions from a file on a given branch &lt;em&gt;without&lt;/em&gt; looking at the diff. This means I will only look at the content of the file at a given commit by checking out to a commit and read the content of the file.&lt;/p&gt;

&lt;p&gt;For instance I have an empty file and my first commit adds “A”. The system needs to output:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Added A&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then if I add “B”, the file now contains “AB”. The system already knows that I added “A”, so I want it to only output:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Added B&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then if I remove “B”, the file only contains “A”. The system knows that we had “AB” before, so it outputs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Removed B&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;… and so on. I know it seems weird, but it is a real use case I have encountered.&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;Now let’s take the example history below. The main branch we want to look at is, as often, master.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/git_first_parent@2x.png&quot; style=&quot;width: 600px; padding: 20px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;What is going on here is that I add A, then B. From here I branch out and add D on my feature branch. On master, I add C. Finally, I merge the feature branch into master. Classic stuff really.&lt;/p&gt;

&lt;p&gt;However, now if I want to go on master’s last commit and run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git log
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;… and use all the commits’ SHA to replay the history, it gives me this as an output:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Added A&lt;/li&gt;
  &lt;li&gt;Added B&lt;/li&gt;
  &lt;li&gt;Added D&lt;/li&gt;
  &lt;li&gt;Removed D&lt;/li&gt;
  &lt;li&gt;Added C&lt;/li&gt;
  &lt;li&gt;Added D&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is because the log will display your history as such:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/git_log@2x.png&quot; style=&quot;width: 600px; padding: 20px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;That’s not what we want here! We have the information of D being added on the merge, so we don’t need to complexify our log. Here it would make sense to exclude the commit adding “D” and only keep the merge one, “ABCD”.&lt;/p&gt;

&lt;h2 id=&quot;the-solution-using-first-parent&quot;&gt;The Solution Using first-parent&lt;/h2&gt;

&lt;p&gt;The great thing is that the commit adding “D” is from another branch and is not the merge commit. Because of that, we can run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git log --first-parent
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And this will give us a nice and clean log:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/nice_log@2x.png&quot; style=&quot;width: 600px; padding: 20px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Awesome! We don’t even care that “D” arrives after “C” in the timeline, because in the context of my master branch, that’s exactly what happened.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Game of Life Visualisations</title>
     <link href="https://marcgg.com/blog/2015/07/01/game-of-life-gif/"/>
     <updated>2015-07-01T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2015/07/01/game-of-life-gif</id>
     <content type="html">
       &lt;p&gt;A few days ago I was on a plane for 6 hours and we only had a shared TV screen playing terrible sitcoms and movies. What do you do in this situation? Code some weird version of &lt;a href=&quot;https://en.wikipedia.org/wiki/Conway's_Game_of_Life&quot;&gt;Conway’s Game of Life&lt;/a&gt; of course!&lt;/p&gt;

&lt;h2 id=&quot;the-game&quot;&gt;The Game&lt;/h2&gt;

&lt;h3 id=&quot;rules&quot;&gt;Rules&lt;/h3&gt;

&lt;p&gt;I didn’t follow the usual rules and instead decided to go with these:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The board is randomly and entirely filled with “cells” on boot, representing the life forms&lt;/li&gt;
  &lt;li&gt;Each cell have a given number of health points&lt;/li&gt;
  &lt;li&gt;Each cell is part of a team&lt;/li&gt;
  &lt;li&gt;Each cell will attack its neighbours if they are in another team&lt;/li&gt;
  &lt;li&gt;Each cell will heal its neighbours if they are in the same team&lt;/li&gt;
  &lt;li&gt;You can’t heal more than the maximum number of health points&lt;/li&gt;
  &lt;li&gt;Once a cell reaches 0 life, it gets replaced by a new cell of the attacker’s team&lt;/li&gt;
  &lt;li&gt;Each team has given attack, health and healing stats&lt;/li&gt;
  &lt;li&gt;The board has a set height and width&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For instance a Cell will have 100 health points, 10 attack, 2 healing and is part of team A. Meaning that any cell of team A next to it will be healed of 2 health points, and cell of team B next to it will loose 10 health points.&lt;/p&gt;

&lt;h3 id=&quot;visualisation&quot;&gt;Visualisation&lt;/h3&gt;

&lt;p&gt;As for visualisation, I didn’t have internet so I just sticked with what I had: my terminal. The display choices were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Each team has a given color&lt;/li&gt;
  &lt;li&gt;If a cell life’s is low, the color is lighter&lt;/li&gt;
  &lt;li&gt;If a cell health goes below 10%, it goes black to show very contested zones&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It took me a couple of hours to complete, and I find the result quite enjoyable to watch. The terminal colors gives the board a kind of Atari 2600 feel.&lt;/p&gt;

&lt;h2 id=&quot;end-result&quot;&gt;End Result&lt;/h2&gt;

&lt;h3 id=&quot;everyone-has-the-same-stats&quot;&gt;Everyone Has The Same Stats&lt;/h3&gt;

&lt;p&gt;When life, attack and healing stats are the same across teams, they usually quickly reach a stalemate. Sometimes, depending on how the board started a color might have some advantage. Because of the healing rule, we see highly contested borders, but no clear movement or winner.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/life/life_game.gif&quot; style=&quot;width: 400px;&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;stats-are-random&quot;&gt;Stats Are Random&lt;/h3&gt;

&lt;p&gt;When stats are random, it ends up creating weird looking results after a few dozens frames. Here are these results:&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/life/1.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/2.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/3.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/4.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/5.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/6.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/7.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/8.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/9.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/10.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/11.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/12.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/13.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/14.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/15.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/16.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/17.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/18.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/19.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/20.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/21.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/22.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/23.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;img src=&quot;/assets/misc/life/24.jpg&quot; style=&quot;width: 150px;&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;note-on-code&quot;&gt;Note On Code&lt;/h2&gt;

&lt;p&gt;I don’t think the code is worth sharing since it has been literally hacked together in two hours on a plane, but if you really really want to check it out, &lt;a href=&quot;https://twitter.com/marcgg&quot;&gt;ping me on Twitter&lt;/a&gt; and I’ll send you the gist - it’s in Ruby.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Getting Started With Elixir Processes</title>
     <link href="https://marcgg.com/blog/2015/06/04/getting-started-with-elixir-processes/"/>
     <updated>2015-06-04T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2015/06/04/getting-started-with-elixir-processes</id>
     <content type="html">
       &lt;p&gt;In this article, there will be no fancy tricks or protips, just simple ideas and examples to get started. This is basically the result of my trial and error approach to understand Elixir Processes.&lt;/p&gt;

&lt;p&gt;Hope it helps!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: Please note that, even if I’ve been writing code for a while now, I’m in no way an Elixir expert as I’m mostly using Ruby and JavaScript. If you know more about Elixir and notice that I’ve made a mistake, please leave a comment and I’ll fix the article. If you’re just getting started, I recommend you read some of the official documentation before continuing, mainly about &lt;a href=&quot;http://elixir-lang.org/getting-started/basic-types.html&quot;&gt;basic types&lt;/a&gt; and &lt;a href=&quot;http://elixir-lang.org/getting-started/modules.html&quot;&gt;modules&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;processes-101&quot;&gt;Processes 101&lt;/h2&gt;

&lt;p&gt;If you’re getting into &lt;a href=&quot;http://&quot;&gt;Elixir&lt;/a&gt;, knowing about processes is crucial. There’s no way around it, it’s a concept you have to know to get better and use the langage properly.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Processes are not only the basis for concurrency in Elixir, but they also provide the means for building distributed and fault-tolerant programs.”&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://elixir-lang.org/getting-started/processes.html&quot;&gt;Elixir Documentation&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Note that Elixir should not be confused with operating system processes. Again, quoting the documentation:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Processes in Elixir are extremely lightweight in terms of memory and CPU (unlike threads in many other programming languages). Because of this, it is not uncommon to have dozens of thousands of processes running simultaneously.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;start-a-process-watch-it-die&quot;&gt;Start A Process, Watch It Die&lt;/h3&gt;

&lt;p&gt;Let’s start a process:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Starting Process&quot;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;:timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alive?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In this example I added a timer just to make sure that the IO has no chance to be run at the same time as the recently spawned process. This way we’ll get a consistent behaviour, wherever you execute this code.&lt;/p&gt;

&lt;p&gt;If we run this piece of code, we get:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; Starting Process
 &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is because the process dies once it has done its job. Pretty straightforward, right? Now let’s see how to ask it to wait for a message a bit.&lt;/p&gt;

&lt;h3 id=&quot;heres-a-message&quot;&gt;Here’s A Message&lt;/h3&gt;

&lt;p&gt;Now let’s add a way to receive a message. Here I’ll spawn the process in the same way, except I’ll store its PID. Note that this is an Elixir PID, and is unrelated to UNIX PIDs.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Starting Process&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;receive&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
	 &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Received first: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;ss&quot;&gt;:timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Amazing first message!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Which gives us:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; Starting Process
 Received first: Amazing first message!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;note-on-process-lifecycle&quot;&gt;Note On Process Lifecycle&lt;/h4&gt;

&lt;p&gt;Zooming in a bit on the way we send the message, if I do this on my machine:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;ss&quot;&gt;:timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Amazing first message!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alive?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;:timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alive?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I get:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; Starting Process
 Received first: Amazing first message!
 &lt;span class=&quot;nb&quot;&gt;true
 false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notice how the process is still alive right after the call to send, but dies shortly after. This can be a bit surprising at first, but you can see how it makes sense as the spawned process needs some time to actually execute, and once it is done responding it just shuts down because it has done what it was supposed to do.&lt;/p&gt;

&lt;h3 id=&quot;using-links&quot;&gt;Using Links&lt;/h3&gt;

&lt;p&gt;I’ve been using “spawn” so far, but it’s actually best to use “spawn_link “ instead. Quoting from &lt;a href=&quot;http://elixir-lang.org/getting-started/processes.html#links&quot;&gt;the Elixir documentation&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The most common form of spawning in Elixir is actually via spawn_link/1.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is because it gives us better error handling, among other things.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;n&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Ouch&quot;&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Starting Process&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Running this outputs absolutely nothing. However, the version with “spawn_link” instead of “spawn” gives us:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; 08:37:20.422 error Error &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;process &amp;lt;0.51.0&amp;gt; with &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;value: ...
 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;EXIT from &lt;span class=&quot;c&quot;&gt;#PID&amp;lt;0.48.0&amp;gt;) an exception was raised:&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RuntimeError&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Ouch
	main.exs:3: anonymous fn/0 &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; :elixircompiler0.FILE/1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note that, in this article, I will not use &lt;a href=&quot;http://elixir-lang.org/docs/v1.0/elixir/Task.html&quot;&gt;Elixir Tasks&lt;/a&gt; to avoid manipulating too many concepts, even if it would lead to even better error messages, as explained in the official &lt;a href=&quot;http://elixir-lang.org/getting-started/processes.html#tasks&quot;&gt;documentation&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;With spawn/1 and spawn_link/1 functions, the error messages are generated directly by the Virtual Machine and therefore compact and lacking in details. In practice, developers would rather use the functions in the Task module, more explicitly, Task.start/1 and Task.start_link/1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;sending-multiple-messages&quot;&gt;Sending Multiple Messages&lt;/h2&gt;

&lt;h3 id=&quot;dont-just-call-send-twice&quot;&gt;Don’t Just Call Send Twice&lt;/h3&gt;

&lt;p&gt;When I first got my hands on Elixir I wanted to send multiple messages to a process, so I did this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Starting Process&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;receive&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
	 &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Enum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Received first: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
	 &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Enum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Received second: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Amazing first message!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Disappointing second message.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, running this would only give me:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; Starting Process
 Received first: Amazing first message!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This makes sense since the process shuts down once it received a message, as we saw before. To achieve this, we need to maintain some state.&lt;/p&gt;

&lt;h3 id=&quot;keep-on-listening&quot;&gt;Keep On Listening&lt;/h3&gt;

&lt;p&gt;This time we’ll have to define a &lt;a href=&quot;http://elixir-lang.org/getting-started/modules.html&quot;&gt;module&lt;/a&gt; to simplify everything. This module responds to a start method that will just spawn a process running its second method, “loop”. I made loop method &lt;a href=&quot;&quot;&gt;private&lt;/a&gt;, but it is not required for this to work.&lt;/p&gt;

&lt;p&gt;The loop method is very similar to what our previous process would do, but this time it calls itself after receiving a message, maintaining state and keeping itself alive.&lt;/p&gt;

&lt;p&gt;I left a few debugging messages so what happens is even clearer when looking at the output.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;k&quot;&gt;defmodule&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Receiver&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Starting Process&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;spawn_link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;defp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Looping&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;receive&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
	 &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Received first: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;
	 &lt;span class=&quot;k&quot;&gt;loop&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
	 &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Received second: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;
	 &lt;span class=&quot;k&quot;&gt;loop&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Receiver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Amazing first message!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Disappointing second message.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Amazing first message again!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Running the code above gives us:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; Starting Process
 Looping
 Received first: Amazing first message!
 Looping
 Received second: Disapointing second message.
 Looping
 Received first: Amazing first message again!
 Looping&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This gives us a lot of possibilities. For instane we could have some kind of argument passed to loop and incremented so we can store the number of time it was called.&lt;/p&gt;

&lt;h3 id=&quot;using-agents&quot;&gt;Using Agents&lt;/h3&gt;

&lt;p&gt;State is nice, but it feels very manual. In this case we could use &lt;a href=&quot;http://elixir-lang.org/docs/stable/elixir/#!Agent.html&quot;&gt;Agents&lt;/a&gt; as a nice abstraction layer to get a similar behaviour.&lt;/p&gt;

&lt;p&gt;I won’t get into details regarding Agents for now, but if you want to go further, I recommend &lt;a href=&quot;http://elixir-lang.org/getting-started/mix-otp/agent.html&quot;&gt;the official documentation&lt;/a&gt; as a starting point.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Real Life A/B Testing With Universal Analytics</title>
     <link href="https://marcgg.com/blog/2015/05/26/ab-testing-in-real-life-google-analytics/"/>
     <updated>2015-05-26T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2015/05/26/ab-testing-in-real-life-google-analytics</id>
     <content type="html">
       &lt;p&gt;I’ve been enthusiastic about the concept of A/B testing for a very long time, but I only got to implement it for the first time about two years ago. At the time I thought it would be easy. So many companies are talking about it, there must be a clear path to do it, right?&lt;/p&gt;

&lt;p&gt;Well, after some research I’m starting to think that a lot of people are doing it wrong. Either by A/B testing too early, or just by not measuring things correctly, they are wasting time trying to follow the trend that &lt;a href=&quot;https://www.optimizely.com/split-testing/&quot;&gt;split testing&lt;/a&gt; is the solution to all your startup problems.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; To do effective real life A/B testing, you need clearly identified KPIs, a few lines of code, enough volume and someone analysing the results. It is harder than using a drop in tool usable by anyone and it takes way more time than you’d think. However, doing it this way is more powerful and still totally doable.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;ab-testing-101&quot;&gt;A/B Testing 101&lt;/h2&gt;

&lt;p&gt;First of, if you want to see if putting a picture of a cat on your homepage leads to people clicking on a button, then the internet got you covered… drop some JavaScript in and voilà!&lt;/p&gt;

&lt;p&gt;The thing is it is a very poor definition of conversion and it leaves you with a very limited set of A/B tests you can run.&lt;/p&gt;

&lt;p&gt;Let me elaborate.&lt;/p&gt;

&lt;h3 id=&quot;what-you-actually-test&quot;&gt;What You Actually Test&lt;/h3&gt;

&lt;p&gt;In this situation, we change something very simple. A visual element on a single page. This is nice but often, if you run something more complex than a landing page, you’ll want to test more.&lt;/p&gt;

&lt;p&gt;For instance, here are some interesting things on which you’d probably like to experiment:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ranking algorithms&lt;/li&gt;
  &lt;li&gt;Emails &amp;amp; notifications (either the volume or the content)&lt;/li&gt;
  &lt;li&gt;Having a feature vs not having it&lt;/li&gt;
  &lt;li&gt;A series of related content changes on various pages&lt;/li&gt;
  &lt;li&gt;Entirely different page or set of pages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In a lot of these cases, you need way more than just front-end or wording changes. If your tool promised a solution usable without any code to write, that’s where you reach its limit.&lt;/p&gt;

&lt;h3 id=&quot;how-to-mesure-success&quot;&gt;How To Mesure Success&lt;/h3&gt;

&lt;p&gt;The other limit of a lot of tools is that the measure for success is sometimes simplistic. If “people clicked on this button” means to you that your website is performing well, you might be doing something wrong.&lt;/p&gt;

&lt;p&gt;Let’s take an example.&lt;/p&gt;

&lt;p&gt;Imagine you’re testing a variation of a link’s copy and use “Click here, it’s amazing” instead of a duller wording. Because of this change, people end up clicking more on the button.&lt;/p&gt;

&lt;p&gt;Great! This version is better! … OR IS IT!?!&lt;/p&gt;

&lt;p&gt;What if people click on the button and bounce right away because it’s linking to a page that’s really not that amazing?&lt;/p&gt;

&lt;p&gt;What I’m getting at is that measuring conversion is hard. Often you have to take multiple variables into consideration, so “people clicked on the button” is often not a good metric to follow.&lt;/p&gt;

&lt;h2 id=&quot;real-life-ab-testing&quot;&gt;Real Life A/B Testing&lt;/h2&gt;

&lt;p&gt;At &lt;a href=&quot;https://www.drivy.com&quot;&gt;Drivy&lt;/a&gt; we use A/B testing to validate some ideas. It gives us insights on what works well and what doesn’t. Obviously that’s not the only input we use for decision making, but it is one of them.&lt;/p&gt;

&lt;p&gt;Instead of relying on an existing tool to do this, we decided to build our own on top of Google’s Universal Analytics. We don’t use an existing tool because, at least at the time, nothing great existed to do this. Plus the code needed to get it to run is very light anyways. Also, and this is a important, all our tracking was already done with Universal Analytics, so we could leverage the time we spent defining our metrics as well as centralise everything KPI-related in one powerful tool.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/universal.png&quot; style=&quot;width: 300px;&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;before-starting-to-test&quot;&gt;Before Starting To Test&lt;/h3&gt;

&lt;h4 id=&quot;identify-your-kpis&quot;&gt;Identify Your KPIs&lt;/h4&gt;

&lt;p&gt;First of all, don’t start doing any split testing if you don’t have identified KPIs and clear objectives. For instance, if you have an online hat store, a goal could be “user buys a hat”. It could also be “user signs up for the newsletter” or “user spends more than 2 minutes reading an article”.&lt;/p&gt;

&lt;p&gt;Based on this, try to define a clear conversion funnel. If you’re not familiar with the concept, allow me to quote &lt;a href=&quot;http://en.wikipedia.org/wiki/Conversion_funnel&quot;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Conversion funnel is a technical term used in e-commerce operations to describe the track a consumer takes through an Internet advertising or search system, navigating an e-commerce website and finally converting to a sale.&lt;/p&gt;

  &lt;p&gt;The metaphor of a funnel is used to describe the decrease in numbers that occurs at each step of the process.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For instance, in the case of the hat website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;User goes to your website (entry point)&lt;/li&gt;
  &lt;li&gt;1) User searches for the best hat&lt;/li&gt;
  &lt;li&gt;2) User clicks on the product page for a given hat&lt;/li&gt;
  &lt;li&gt;3) User sees the payment form&lt;/li&gt;
  &lt;li&gt;4) User pays and enjoys their hat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Like this, once you are A/B testing, you will be able to say “by changing X, we saw a increase in (1) -&amp;gt; (2), but a decrease in (3) -&amp;gt; (4) and an overall improvement on (1) -&amp;gt; (4)”. This way you’ll get way more interesting insights.&lt;/p&gt;

&lt;p&gt;If you decide to change the hat ranking algorithm to display only hat with HD pictures, you could get an increase in (1) -&amp;gt; (2) because the search results looks prettier. However it could decrease global conversion (1) -&amp;gt; (4) because even if the search results look better, users don’t want to buy the hats with HD pictures. The solution here would be to add HD pictures for all hats and keep the old ranking algorithm.&lt;/p&gt;

&lt;h4 id=&quot;track-your-kpis&quot;&gt;Track Your KPIs&lt;/h4&gt;

&lt;p&gt;Once you identified your KPIs, you have to track them and make sure that the data you use is correct. To do this at Drivy we used Universal Analytics.&lt;/p&gt;

&lt;p&gt;Note that you should be doing this, wether or not you’re doing A/B testing!&lt;/p&gt;

&lt;h4 id=&quot;have-enough-volumes&quot;&gt;Have Enough Volumes&lt;/h4&gt;

&lt;p&gt;First of all, don’t A/B test if you don’t have much traffic.&lt;/p&gt;

&lt;p&gt;If you don’t have enough people using your website, it will take a very long time to reach a good enough level of &lt;a href=&quot;http://en.wikipedia.org/wiki/Statistical_significance&quot;&gt;statistical significance&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I know it sounds cool to be running A/B tests but, if you’re too small, it makes very little sense and it might misguide you more than anything else. You need to focus on the product first and once it is working, use split testing to improve on what you already have.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Also if you say “we improved conversion by 2000% thanks to a/b testing” and your website is a landing page viewed by 500 visitors a months, it honnestly sounds a bit silly.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;starting-your-experiment&quot;&gt;Starting Your Experiment&lt;/h3&gt;

&lt;p&gt;Once you have your KPIs and a decent volume of users on your website, it’s time to start your “experiment”.&lt;/p&gt;

&lt;p&gt;By the way, what I’ll call experiment from now on is the process of testing multiple versions/variations of a given feature.&lt;/p&gt;

&lt;h4 id=&quot;flagging-users&quot;&gt;Flagging Users&lt;/h4&gt;

&lt;p&gt;Every user going to your website must be identified as either being a part of experiment “A” or experiment “B”.&lt;/p&gt;

&lt;p&gt;To implement this, use a random number generator. It is waaaay faster than any other method and will statistically works if you have enough volume.&lt;/p&gt;

&lt;p&gt;Once you know if the user is “A” or “B”, store it somewhere. You can use cookies, or, even better, somewhere that will persist across multiple devices. Of course try to avoid large datastore overheads when running an experiment as it could slow down your site.&lt;/p&gt;

&lt;p&gt;Once we identified the user, we send the information to Universal Analytics &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets&quot;&gt;using custom dimensions&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;displaying-the-various-versions-of-the-site&quot;&gt;Displaying The Various Versions Of The Site&lt;/h4&gt;

&lt;p&gt;Once you know that a given user is A or B, it becomes very easy to change the website based on that information. Here’s a random snippet of code using Ruby, just in case that’s not clear enought:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;experiment?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
 &lt;span class=&quot;nf&quot;&gt;else&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
 &lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Of course, try to do it in a way that is easy to revert. At Drivy we use a simple DSL that allows us to easily search for any part of the code that is related to an experiment. Here is what it looks when used in a HAML view:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Sets up tracking&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_experiment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:welcome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Displays things&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_experiment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_variation&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
 &lt;span class=&quot;no&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_variation&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
 &lt;span class=&quot;no&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all!&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;original&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
 &lt;span class=&quot;no&quot;&gt;Welcome&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Protip: To be faster, don’t try to write robust and elegant code in an experiment. Treat it as a prototype that will be thrown away at the end - and then actually throw it away and rewrite everything once the experiment is over.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;analysing-results&quot;&gt;Analysing Results&lt;/h4&gt;

&lt;p&gt;After a while, check if you reached an acceptable level of statistical significance. Don’t even look at the metrics before that since they don’t mean a thing yet.&lt;/p&gt;

&lt;p&gt;Note that the volume of traffic you need depends on the expected impact of the modification. If you’re making a minuscule change that would impact an already low conversion, you will need hundred of thousands of views on your page to know if it worked. If you’re making a major change that will have a large impact on conversion, you’ll probably need a smaller sample to know if it has a positive or negative impact.&lt;/p&gt;

&lt;p&gt;Once you have a sufficient amount of data, you can go in Universal Analytics and segment your KPIs based on the custom dimensions you set up earlier. That’s where you’ll see which variation performs better.&lt;/p&gt;

&lt;p&gt;Note that it’s where Universal Analytics shines. Not only it is free, but it allows complex segmentation. For instance if you run some kind of marketing campaign, you might want to exclude these users from your reporting because they are not your regular users and therefore might not be relevant in the context of a given A/B test.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;To learn more about the subject of segmenting, take a look at “&lt;a href=&quot;http://analytics.blogspot.fr/2014/04/new-user-and-sequence-based-segments-in.html&quot;&gt;New user and sequence based segments in the Core Reporting API&lt;/a&gt;” or “&lt;a href=&quot;http://analytics.blogspot.fr/2013/07/re-imagining-segmentation-in-analytics.html&quot;&gt;Re-imagining Segmentation In Analytics To Help You Make Better Decisions, Faster&lt;/a&gt;” from the Google Universal Analytics blog.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;close-the-experiment&quot;&gt;Close The Experiment&lt;/h4&gt;

&lt;p&gt;Once you decided which variation performs the best, close the experiment, throw away all the code related to it and write the winning variation properly.&lt;/p&gt;

&lt;p&gt;Once it’s considered “closed”, Never leave an experiment’s code in the codebase for too long. It will add needless complexity to your codebase and no value.&lt;/p&gt;

&lt;h4 id=&quot;checking-tests-validity&quot;&gt;Checking Tests Validity&lt;/h4&gt;

&lt;p&gt;Every once in a while, don’t forget to test your system by running “dummy experiments”. &lt;a href=&quot;http://nerds.airbnb.com/experiments-at-airbnb/&quot;&gt;AirBnB goes into details about this on their blog&lt;/a&gt;. The tl;dr; of this is that if you run an A/A test and one of the two version wins, you must be doing something wrong.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Benchmarking Deployment Speed on Heroku</title>
     <link href="https://marcgg.com/blog/2015/02/26/heroku-deploy-speed/"/>
     <updated>2015-02-26T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2015/02/26/heroku-deploy-speed</id>
     <content type="html">
       &lt;p&gt;Sometimes deploying to Heroku can get really slow. Obviously before spending any time trying to speed it up, you should actually know what part of it is causing the problem. For instance, if you run Ruby on Rails, you get some information regarding the asset precompilation time or for how long Bundler installed your gems.&lt;/p&gt;

&lt;p&gt;However, if this isn’t enough, here is a small script that could help you by simply timestamping every line of the Heroku deploy log, giving you something looking like that:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;  &lt;span class=&quot;no&quot;&gt;Fetching&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-----&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Deleting&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matching&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;slugignore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patterns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-----&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Ruby&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;detected&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-----&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Compiling&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;29&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-----&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Using&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Ruby&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;version: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-----&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Installing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;the-script&quot;&gt;The Script&lt;/h2&gt;

&lt;p&gt;Here’s the script. Note that I use a simple HH:MM:SS formating in this example, but feel free to use what makes sense depending on your setup and preferences.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# !/usr/bin/env bash&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;line; &lt;span class=&quot;k&quot;&gt;do
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;s2&quot;&gt;&quot;%H:%M:%S&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; - &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Save it to a local file called “timestp” and give it write permissions:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;chmod +x timestp&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;running-it&quot;&gt;Running It&lt;/h2&gt;

&lt;p&gt;The tricky part here is to know that git push is actually sending its output to STDERR, so you need to do:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push heroku master 2&amp;gt;&amp;amp;1 | timestp
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Hopefully this will help you pinpoint with more accuracy the problem in your deployment.&lt;/p&gt;

       
     </content>
   </entry>
  
 
  
   <entry>
     <title>The Technical Accomplishments of Grace Murray Hopper</title>
     <link href="https://marcgg.com/blog/2015/02/02/grace-murray-hopper-technical/"/>
     <updated>2015-02-02T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2015/02/02/grace-murray-hopper-technical</id>
     <content type="html">
       &lt;p&gt;Rear Admiral Grace M. Hopper, USN, Ph.D., born December 9 1906, is a really interesting person.&lt;/p&gt;

&lt;p&gt;I ran into information about her a while back while researching the origin of the expression “debugging”. Turns out that she denied coining the term, but it got me reading and I have to say… why don’t we know more about her? She did so much for computer science! Also, I’m pretty sure no coder besides her have &lt;a href=&quot;http://en.wikipedia.org/wiki/USS_Hopper_%28DDG-70%29&quot;&gt;a guided missile destroyer&lt;/a&gt; named after them.&lt;/p&gt;

&lt;p&gt;I know there was a &lt;a href=&quot;/assets/blog/doodle_grace.jpg&quot;&gt;Google doodle&lt;/a&gt; made in her honor but, at the end of the day, a lot of developers don’t even know her name… or they think that she “only” created COBOL, which is not entirely true.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/grace.jpg&quot; style=&quot;width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;I wanted to write something about her back then, but that’s also the point in my life where I realized that I would make a terrible biographer. However, I finally decided to give a shot at summarizing a few of her accomplishments related to computer science. So here I won’t be spending any time on other subjects. I’ll let you keep on reading elsewhere if you want more information regarding her early life, military feats, awards or education.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Interesting fact, while I was finishing my article, a documentary called “&lt;a href=&quot;http://fivethirtyeight.com/features/the-queen-of-code/&quot;&gt;Queen of Code&lt;/a&gt;”, directed by &lt;a href=&quot;http://www.imdb.com/name/nm1843026/&quot;&gt;Gillian Jacobs&lt;/a&gt;, was released. You should give it a watch!&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-havard-mark-computers&quot;&gt;The Havard Mark Computers&lt;/h2&gt;

&lt;p&gt;In 1943 Hopper was teaching mathematics at &lt;a href=&quot;http://en.wikipedia.org/wiki/Vassar_College&quot;&gt;Vassar&lt;/a&gt;, but she decided to take a leave of absence and volonteered to serve in the WAVES - the &lt;a href=&quot;http://ww2db.com/other.php?other_id=24&quot;&gt;Women Accepted for Volunteer Emergency Service&lt;/a&gt;. She did well during training and was sent to Harvard University where she was assigned to work as part of the &lt;a href=&quot;http://chsi.harvard.edu/markone/function.html&quot;&gt;Mark I Computer&lt;/a&gt; programming staff.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“We did coding, we ran the computer, we did everything. We were coders.”&lt;/p&gt;

  &lt;p&gt;Grace Murray Hopper &lt;a href=&quot;http://archive.computerhistory.org/resources/text/Oral_History/Hopper_Grace/102702026.05.01.pdf&quot;&gt;in a 1980 interview&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It was a time of punch cards and switches, but this computer was trully helping the military by running large amount of mathematical operations. It was notably used to figure out the viability of implosions for the &lt;a href=&quot;http://en.wikipedia.org/wiki/Manhattan_Project&quot;&gt;Manhattan Project&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/mark_1.jpg&quot; style=&quot;width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;After the war, she remained in the Navy and worked as a research fellow at Harvard for a few years on the &lt;a href=&quot;http://en.wikipedia.org/wiki/Harvard_Mark_II&quot;&gt;Mark II&lt;/a&gt; (a paper-tape sequenced calculator) and &lt;a href=&quot;http://en.wikipedia.org/wiki/Harvard_Mark_III&quot;&gt;Mark III&lt;/a&gt; (an electronic computer with magnetic drum storage).&lt;/p&gt;

&lt;h2 id=&quot;univac--the-first-compiler&quot;&gt;UNIVAC &amp;amp; The First Compiler&lt;/h2&gt;

&lt;p&gt;In 1949 she joined the team working on the UNIVAC I, the second commercial computer produced in the US. This is where she started working on her compiler, the A-0 System. At a time where every programmer would produce assembly code, it was revolutionnary. In 1952 she had an operational version of her &lt;a href=&quot;http://en.wikipedia.org/wiki/One-pass_compiler&quot;&gt;single-pass&lt;/a&gt; compiler, but she ran into scepticism from the industry.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Nobody believed that, I had a running compiler and nobody would touch it. They told me computers could only do arithmetic; they could not do programs. It was a selling job to get people to try it. I think with any new idea, because people are allergic to change, you have to get out and sell the idea.”&lt;/p&gt;

  &lt;p&gt;Grace Murray Hopper&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It took a while, but this idea was finally accepted. Grace Hopper and her team iterated and released new versions of the compiler. In the end, it was the A-2 compiler that would be the first to be used extensively, leading the way for even more improvements and the creation of new programming languages.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/univac.jpg&quot; style=&quot;width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;math-matic--flow-matic&quot;&gt;MATH-MATIC &amp;amp; FLOW-MATIC&lt;/h2&gt;

&lt;p&gt;In 1954 Hopper was named the first director of automatic programming at &lt;a href=&quot;http://en.wikipedia.org/wiki/Remington_Rand&quot;&gt;Remington Rand&lt;/a&gt;. She and her team worked on a new compiler, the AT-3 that was commercially called “MATH-MATIC”.&lt;/p&gt;

&lt;p&gt;They also created FLOW-MATIC, also known as B-0 (Business Language version 0). It was realized based on the observation that customers processing business data were not comfortable with mathematical notation.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I kept calling for more user friendly languages. I’ve always tried to do that, that’s why I want these other languages that are aimed at people. Most of the stuff we get from academicians, computer science people, is in no way adapted to people.”&lt;/p&gt;

  &lt;p&gt;Grace Murray Hopper &lt;a href=&quot;http://archive.computerhistory.org/resources/text/Oral_History/Hopper_Grace/102702026.05.01.pdf&quot;&gt;in a 1980 interview&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In 1953, Hoper proposed that problems could be expressed with English keywords. Her company’s management at the time decided that the idea would be unfeasible and discarded it. Despite this, in early 1955, Hopper and her team wrote a specification for such a programming language and implemented a prototype.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“It’s always easier to apologize than to ask permission.”&lt;/p&gt;

  &lt;p&gt;Grace Murray Hopper&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This language was FLOW-MATIC, the first language to use English keywords that facilitated its use in business settings. This was proved useful and IBM even released &lt;a href=&quot;http://www.textfiles.com/bitsavers/pdf/ibm/7090/F28-8043_CommercialTranslatorGenInfMan_Ju60.pdf&quot;&gt;COMTRAN&lt;/a&gt; (Commercial Translator) in 1957 following the same principle. It’s also worth mentioning that FLOW-MATIC was also the first language to separate the description of data from the operations made on it.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/flowmatic_banner.jpg&quot; style=&quot;width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;If you are curious, here is &lt;a href=&quot;http://archive.computerhistory.org/resources/text/Remington_Rand/Univac.Flowmatic.1957.102646140.pdf&quot;&gt;the brochure&lt;/a&gt; and how the syntax looked:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/marcgg/f9f2da31a973ba319809.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;em&gt;That’s right, I have a FLOW-MATIC Gist now.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;influence-on-cobol&quot;&gt;Influence On COBOL&lt;/h2&gt;

&lt;p&gt;In 1959, Grace Hopper and a group of colleagues started to push for a common language for business applications. This was aimed to reach a greater compatibility among vendor systems. With this goal, they organized the Conference on Data Systems Languages or CODASYL.&lt;/p&gt;

&lt;p&gt;Following its objective, the organisation designed COBOL (COmmon Business-Oriented Language) to be a compiled English-like computer programming language aimed to be used by businesses. It reached a great level of adoption and is &lt;a href=&quot;http://jobs.monster.com/v-it-q-cobol-programmer-jobs.aspx&quot;&gt;still in use today&lt;/a&gt;, mostly in banking.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/cobol.png&quot; style=&quot;height: 300px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;All the current programming languages at the time , such as &lt;a href=&quot;http://en.wikipedia.org/wiki/Air_Force_Materiel_Command&quot;&gt;AIMACO&lt;/a&gt; or COMTRAN, had some kind of influence on COBOL . However it is notorious that COBOL was mostly based on the previous programming language design work made by Grace Hopper. Several elements of FLOW-MATIC were even incorporated into COBOL, including the separation of input and ouput or the idea of dividing a given program into sections.&lt;/p&gt;

&lt;p&gt;This is why she is refered to as “the (grand)mother of COBOL”.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“If you take the FLOW-MATIC manual and compare it with COBOL 60 you’ll find COBOL 60 is 95% FLOW-MATIC. So the influence of Commercial Translator in fact was extremely small.”&lt;/p&gt;

  &lt;p&gt;Grace Murray Hopper &lt;a href=&quot;http://archive.computerhistory.org/resources/text/Oral_History/Hopper_Grace/102702026.05.01.pdf&quot;&gt;in a 1980 interview&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;standards--portability&quot;&gt;Standards &amp;amp; Portability&lt;/h2&gt;

&lt;p&gt;In the 1970s, Hopper was part of an effort to implement standards for testing computer systems and components. The point was to be able to use a same program on various computers, which was often impossible at this time, and conversion from a vendor to another would cost a fortune.&lt;/p&gt;

&lt;p&gt;Her main focus was on COBOL, both on the language and the validation of compilers. The result was an increased portability and better documentation.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;/assets/blog/cobol_ad_full.jpg&quot;&gt;&lt;img src=&quot;/assets/blog/cobol_ad.jpg&quot; style=&quot;width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;h2 id=&quot;influence-on-best-practices&quot;&gt;Influence On Best Practices&lt;/h2&gt;

&lt;p&gt;During her career, Grace Hopper pushed for reusability and collaboration between developers. She was said to &lt;a href=&quot;http://www.cs.yale.edu/homes/tap/Files/hopper-story.html&quot;&gt;encourage programmers to collect and share common portions of programs&lt;/a&gt; to reduce errors and duplication of effort. This seems even more visible with the idea within FLOW-MATIC of dividing a program into sections and her work on standards as mentioned above.&lt;/p&gt;

&lt;p&gt;She was also very visionnary in seeing the great potential in making computers more accessible to businesses and management groups by making programming languages more expressive.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/flowmatic.png&quot; style=&quot;width: 650px&quot; /&gt;&lt;/div&gt;

&lt;p&gt;An interesting point is that she was very active in trying to get corporations to prefer distributed systems over large mainframes. This implied a large shift in mentality as giant general purpose systems were the norm.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I could see people were going to need these things and the amount of information would increase. And I still think it’s going to increase even more. I don’t think we’ve even begun to recognize how much we are going to have to do with these computers.&lt;/p&gt;

  &lt;p&gt;Grace Murray Hopper &lt;a href=&quot;http://archive.computerhistory.org/resources/text/Oral_History/Hopper_Grace/102702026.05.01.pdf&quot;&gt;in a 1980 interview&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;to-conclude&quot;&gt;To Conclude&lt;/h2&gt;

&lt;p&gt;Rear Admiral Grace M. Hopper, USN, Ph.D. passed away in 1992 at age 85.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The most important thing I’ve accomplished, other than building the compiler, is training young people. They come to me, you know, and say, ‘Do you think we can do this?’ I say, “Try it.” And I back ‘em up. They need that. I keep track of them as they get older and I stir ‘em up at intervals so they don’t forget to take chances&lt;/p&gt;

  &lt;p&gt;Grace Murray Hopper&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/grace_uniform.jpg&quot; style=&quot;width: 300px;&quot; /&gt;&lt;/div&gt;

&lt;h4 id=&quot;quick-references&quot;&gt;Quick References&lt;/h4&gt;

&lt;p&gt;Here is a list of what I read through to write this post. I’m not mentioning the countless wikipedia pages and random websites.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cbi.umn.edu/hostedpublications/pdf/McGee_Book-4.2.2.pdf&quot;&gt;http://www.cbi.umn.edu/hostedpublications/pdf/McGee_Book-4.2.2.pdf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www-gap.dcs.st-and.ac.uk/~history/Biographies/Hopper.html&quot;&gt;http://www-gap.dcs.st-and.ac.uk/~history/Biographies/Hopper.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cs.yale.edu/homes/tap/Files/hopper-wit.html&quot;&gt;http://www.cs.yale.edu/homes/tap/Files/hopper-wit.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://books.google.ca/books?id=QmfyK0QtsRAC&amp;amp;q=hopper#v=snippet&amp;amp;q=hopper&amp;amp;f=false&quot;&gt;http://books.google.ca/books?id=QmfyK0QtsRAC&amp;amp;q=hopper#v=snippet&amp;amp;q=hopper&amp;amp;f=false&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cs.yale.edu/homes/tap/Files/hopper-story.html&quot;&gt;http://www.cs.yale.edu/homes/tap/Files/hopper-story.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://archive.computerhistory.org/resources/text/Remington_Rand/Univac.Flowmatic.1957.102646140.pdf&quot;&gt;http://archive.computerhistory.org/resources/text/Remington_Rand/Univac.Flowmatic.1957.102646140.pdf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://archive.computerhistory.org/resources/text/Oral_History/Hopper_Grace/102702026.05.01.pdf&quot;&gt;http://archive.computerhistory.org/resources/text/Oral_History/Hopper_Grace/102702026.05.01.pdf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://archive.wired.com/science/discoveries/news/2008/08/dayintech_0807&quot;&gt;http://archive.wired.com/science/discoveries/news/2008/08/dayintech_0807&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://archive.computerhistory.org/resources/text/Knuth_Don_X4100/PDF_index/k-8-pdf/k-8-u2776-Honeywell-mag-History-Cobol.pdf&quot;&gt;http://archive.computerhistory.org/resources/text/Knuth_Don_X4100/PDF_index/k-8-pdf/k-8-u2776-Honeywell-mag-History-Cobol.pdf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.dvq.com/oldcomp/oldads.htm&quot;&gt;http://www.dvq.com/oldcomp/oldads.htm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://discover.lib.umn.edu/cgi/f/findaid/findaid-idx?c=umfa;cc=umfa;rgn=main;view=text;didno=cbi00011&quot;&gt;http://discover.lib.umn.edu/cgi/f/findaid/findaid-idx?c=umfa;cc=umfa;rgn=main;view=text;didno=cbi00011&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://fivethirtyeight.com/features/the-queen-of-code/&quot;&gt;http://fivethirtyeight.com/features/the-queen-of-code/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you found that I made a mistake or that something is not clear, please let me know in the comments with a reference to a correction and I’ll fix the article as soon as possible.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>New Website Design!</title>
     <link href="https://marcgg.com/blog/2015/01/22/new-design/"/>
     <updated>2015-01-22T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2015/01/22/new-design</id>
     <content type="html">
       &lt;p&gt;I’m not a good designer, not at all. However I still tried to create a new version of my website based on the old one - mainly because I grew really tired of the previous design.&lt;/p&gt;

&lt;p&gt;Here I tried to put the focus even more on the content without going full &lt;a href=&quot;https://stallman.org/&quot;&gt;Richard Stallman&lt;/a&gt;. You’ll notice that there are less colors, but I added whitespace so that reading is a bit easier. I also gave up on having a logo since I just couldn’t figure out how to do that properly, so instead I added a title changing based on the category. Add to that some cleaning up of useless information, and voila!&lt;/p&gt;

&lt;p&gt;I’ll leave this before/after galery mainly for me to look at it later on, but if you have feedback on the changes, please &lt;a href=&quot;http://twitter.com/marcgg&quot;&gt;let me know&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The old version is on the left, the new on on the right. Click any image to enlarge.&lt;/p&gt;

&lt;h2 id=&quot;homepage&quot;&gt;Homepage&lt;/h2&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
&lt;a href=&quot;/assets/blog/old_home.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/blog/old_home.png&quot; style=&quot;width: 360px;border: 0px; padding: 0px; margin: 0px;&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/assets/blog/new_home.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/blog/new_home.png&quot; style=&quot;width: 360px;border: 0px; padding: 0px;margin: 0px 0px 0px 20px;&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&quot;blog-index&quot;&gt;Blog Index&lt;/h2&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
&lt;a href=&quot;/assets/blog/old_blog_index.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/blog/old_blog_index.png&quot; style=&quot;width: 360px;border: 0px; padding: 0px; margin: 0px;&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/assets/blog/new_blog_index.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/blog/new_blog_index.png&quot; style=&quot;width: 360px;border: 0px; padding: 0px;margin: 0px 0px 0px 20px;&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&quot;blog-post&quot;&gt;Blog Post&lt;/h2&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
&lt;a href=&quot;/assets/blog/old_blog_post.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/blog/old_blog_post.png&quot; style=&quot;width: 360px;border: 0px; padding: 0px; margin: 0px;&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/assets/blog/new_blog_post.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/blog/new_blog_post.png&quot; style=&quot;width: 360px;border: 0px; padding: 0px;margin: 0px 0px 0px 20px;&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&quot;photos&quot;&gt;Photos&lt;/h2&gt;

&lt;p&gt;On this one I removed the navigation on every page by an index page with a preview of each gallery that you can see &lt;a href=&quot;/assets/blog/new_photo_index.png&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
&lt;a href=&quot;/assets/blog/old_photo.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/blog/old_photo.png&quot; style=&quot;width: 360px;border: 0px; padding: 0px; margin: 0px;&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/assets/blog/new_photo.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/blog/new_photo.png&quot; style=&quot;width: 360px;border: 0px; padding: 0px;margin: 0px 0px 0px 20px;&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&quot;hire-me-page&quot;&gt;Hire Me Page&lt;/h2&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
&lt;a href=&quot;/assets/blog/old_hire.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/blog/old_hire.png&quot; style=&quot;width: 360px;border: 0px; padding: 0px; margin: 0px;&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/assets/blog/new_hire.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/blog/new_hire.png&quot; style=&quot;width: 360px;border: 0px; padding: 0px;margin: 0px 0px 0px 20px;&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&quot;mobile&quot;&gt;Mobile&lt;/h2&gt;

&lt;p&gt;The website looks decent on mobile, but I didn’t do a full responsive design. Maybe later!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>How CSS Animations Can Break Your Tests</title>
     <link href="https://marcgg.com/blog/2015/01/05/css-animations-failing-capybara-specs/"/>
     <updated>2015-01-05T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2015/01/05/css-animations-failing-capybara-specs</id>
     <content type="html">
       &lt;p&gt;If you don’t have some kind of acceptance tests, you should probably add some. Personnally I like to use &lt;a href=&quot;https://github.com/jnicklas/capybara&quot;&gt;Capybara&lt;/a&gt; with &lt;a href=&quot;http://phantomjs.org/&quot;&gt;PhantomJS&lt;/a&gt;/&lt;a href=&quot;https://github.com/teampoltergeist/poltergeist&quot;&gt;Poltergeist&lt;/a&gt; and this post takes this stack as example, but other testing options will most likely have similar behavior.&lt;/p&gt;

&lt;p&gt;Once you have your tests running, you would expect your backend code or your javascript to break them. However, it’s entirely possible that your CSS will make them fail randomly as well… and no one likes a randomly failing test suite!&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;Let’s see what’s going on in a simple scenario:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to Page A&lt;/li&gt;
  &lt;li&gt;Click button “Reveal the hidden Form X”&lt;/li&gt;
  &lt;li&gt;Input data in Form X&lt;/li&gt;
  &lt;li&gt;Submit Form X&lt;/li&gt;
  &lt;li&gt;Expect that it creates an item in the database&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let’s say that step 2 triggers a CSS animation. If the animation is not done by the time step 3 runs, it can fail because Form X is not visible yet (by default Capybara doesn’t find hidden elements). This is particularly annoying since the failure will be random, depending on the speed of the machine running the specs.&lt;/p&gt;

&lt;p&gt;You could solve the problem by doing this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formxSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;visible: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;… or wait until the element is visible …&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buttonSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;click&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Or some kind of loop testing if the element is now visible&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formxSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;… but that’s not great as it requires you to either change or slow down your tests.&lt;/p&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;/h2&gt;

&lt;p&gt;I’d recommend disabling CSS animations entirely in your test environment. To do so, you can include this into your code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;transition-property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;-o-transition-property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;-moz-transition-property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;-ms-transition-property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;-webkit-transition-property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

 &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;-o-transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;-moz-transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;-ms-transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;-webkit-transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

 &lt;span class=&quot;nl&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;-o-animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;-moz-animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;-ms-animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;-webkit-animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;edge-cases&quot;&gt;Edge Cases&lt;/h3&gt;

&lt;p&gt;Firstly, do not disable animations if you consider them to be very important and you want to test them. Pretty obvious I think.&lt;/p&gt;

&lt;p&gt;There might also be some weirder cases where the fix above won’t work. For instance if the animation’s end frame is the one holding the visibility state, not running the animation will break the reveal. Here is an example courtesy of &lt;a href=&quot;http://benjaminbouwyn.com/&quot;&gt;Benjamin&lt;/a&gt; showcasing this situation:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;/* Element is hidden */&lt;/span&gt;

 &lt;span class=&quot;nl&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reveal&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.5s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

 &lt;span class=&quot;c&quot;&gt;/* Because of this, the element will stay visible at the end of the anim */&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;animation-fill-mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forwards&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@keyframes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reveal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;/*  Element is hidden */&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;/* Element is visible */&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In this case waiting for the animation to be done seems like the way to go. You could also change your logic to a simpler way of doing CSS3 animations.&lt;/p&gt;

&lt;h3 id=&quot;javascript-too&quot;&gt;JavaScript Too!&lt;/h3&gt;

&lt;p&gt;Note that this issue can also happen because of JavaScript animations with jQuery. You can fix this in the same fashion, by disabling fx in your test environment:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;off&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;for-the-same-price-faster-tests&quot;&gt;For The Same Price: Faster Tests&lt;/h3&gt;

&lt;p&gt;Interesting fact, by removing CSS animations we sped up by a couple of percents our test suite.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Coaching A Young Team Creating a Startup (And Helping Them Get Accepted at Le Camping)</title>
     <link href="https://marcgg.com/blog/2014/12/16/coaching-startup-birdly-le-camping/"/>
     <updated>2014-12-16T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2014/12/16/coaching-startup-birdly-le-camping</id>
     <content type="html">
       &lt;p&gt;A few months back I was contacted by three students that wanted to create their company. As a developer, this happens to me all the time and I often refuse to help because of the projects’ lack of realism. After a phone call I decided that it would be interesting to meet them… and I have to say that I was impressed by how much potential the team was showing.&lt;/p&gt;

&lt;p&gt;They were three students with engineering degrees, a good business sense and no real coding background wanting to create an app prototype in order to get accepted into &lt;a href=&quot;http://accelerate.numa.paris/&quot;&gt;Le Camping&lt;/a&gt;, a famous Parisian accelerator program. They already had some code running written during a &lt;a href=&quot;http://rennes.startupweekend.org/2014/03/29/les-projets-du-startup-weekend/&quot;&gt;startup weekend&lt;/a&gt; by someone who wasn’t in the team anymore, but it was obvious it needed to be rewritten from scratch.&lt;/p&gt;

&lt;p&gt;What made the difference with other projects I was pitched before was their approach. They wanted to build their own app, not look for a fourth person to do all of the technical work. This seems very logical as a team with no technical cofounder is less than optimal, but most inexperienced people underestimate the importance of the technical side of things in a startup.&lt;/p&gt;

&lt;p&gt;It goes without saying that I absolutely loved how they didn’t want me to code their app but instead give them means to do it on their own, and we decided to work together.&lt;/p&gt;

&lt;p&gt;The plan was to produce something functionnal to show in order to get accepted by the accelerator. We had enough time, but a lot of development was required, especially based on the team’s lack of experience. Thankfully they were determined to make it work.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot; style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/birdly.jpg&quot; style=&quot;width: 600px;&quot; /&gt;&lt;em&gt;Just look at that determination :)&lt;/em&gt;&lt;/div&gt;

&lt;p&gt;We decided on starting with a kickoff were we would work together to set up the right bases. I tried to guide them toward a &lt;a href=&quot;http://en.wikipedia.org/wiki/Technology_stack&quot;&gt;tech stack&lt;/a&gt; that wouldn’t be too hard to change later if needed nor slow down development, but that would still teach them a lot about building a real product.&lt;/p&gt;

&lt;p&gt;Once the fundations were in place (Website, Phonegap mobile app, REST API), we started to meet once or twice a week. They’d show me their progress and I’d help make adjustments or get past a technical roadblock.&lt;/p&gt;

&lt;p&gt;After a few months of hard work, they were one of the 12 startups selected by Le Camping out of the &lt;a href=&quot;https://twitter.com/getbirdly/status/507459495912820736&quot;&gt;330 candidates&lt;/a&gt;! Since then they have been working even harder to get their solution to simplify expense reports for employees and freelancers, &lt;a href=&quot;http://www.getbirdly.com/&quot;&gt;Birdly&lt;/a&gt;, out there.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/birdly_screen.jpg&quot; style=&quot;width: 600px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;I really think the Birdly team made a great move by deciding to learn instead of handing the work to someone else. Not only it showed their determination to the Camping’s entry jury, but it will most likely pay even more in the future. Even if they decide that coding is not for them and decide to stop coding themselves, they will be able to make better decisions regarding the technical side of their company.&lt;/p&gt;

&lt;p&gt;On my end this was a great experience. I barely wrote a line of code but still contributed to the very early stage of an interesting startup with a great team!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>A Script To Benchmark MySQL Indexes</title>
     <link href="https://marcgg.com/blog/2014/10/13/mysql-try-all-indexes-combinations-script/"/>
     <updated>2014-10-13T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2014/10/13/mysql-try-all-indexes-combinations-script</id>
     <content type="html">
       &lt;p&gt;I’ve been working with MySQL for a while now and I think that it’s a pretty good solution to store your data. Lately I’m more leaning toward Postgres but that’s another story.&lt;/p&gt;

&lt;p&gt;However every once in a while, when it comes to performance, it can get incredibly frustrating. MySQL decides to use the bad index for no visible reasons, best practices and common optimizations don’t seem to work and everything becomes slow. That’s usually when “computer-rage.jpg” appears, as illustrated by this magnificient stock photos montage I did.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img style=&quot;width: 700px;&quot; src=&quot;/assets/blog/computer_rage.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Usually I would dig into the problem and figure out what is going on, but the other day I got deeply annoyed by the whole process. I was trying the most logical indexes to speed up a really complex query and it just wasn’t working as expected. At this point I didn’t have much time to spend investigating, so I came up with a different approach.&lt;/p&gt;

&lt;h2 id=&quot;try-all-the-indexes&quot;&gt;Try ALL The Indexes!&lt;/h2&gt;

&lt;p&gt;I thought, why not just benchmark all the possible indexes on a given table and see how it would perform on a query. Then, based on the results, I could reduce the scope of my reflexion and figure out what to do faster!&lt;/p&gt;

&lt;p&gt;With this idea I wrote a script that would do just that. After running it, I noticed that &lt;strong&gt;there were indeed some indexes that would nicely improve that query&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;interpreting-the-results--disclaimer&quot;&gt;Interpreting The Results / Disclaimer&lt;/h2&gt;

&lt;p&gt;At this point I need to say that you &lt;strong&gt;SHOULD NEVER&lt;/strong&gt; just take the script’s word for what index to add. There are so many ways in which the script could mislead you if you have no idea of how to optimize queries for MySQL. An index speeding up a given query could slow down another or slow down insertions.&lt;/p&gt;

&lt;p&gt;Run your &lt;code class=&quot;highlighter-rouge&quot;&gt;EXPLAIN&lt;/code&gt;s, your load tests. Take time to think about it.&lt;/p&gt;

&lt;p&gt;In the end the results turned out to be a very nice base for discussion with the team and to really quickly test assumptions. We noticed that some indexes we thought that would be used for sure weren’t, investigated that and ended up greatly improving the speed of the query.&lt;/p&gt;

&lt;p&gt;That’s why I’m sharing it now. Not for the quick win it could give you, but mostly because it can spawn interesting conversations or lead you torward a solution you didn’t think of because of the sheer complexity carried by some queries.&lt;/p&gt;

&lt;h2 id=&quot;the-script&quot;&gt;The Script&lt;/h2&gt;

&lt;p&gt;With all this being said, I’m counting on you to use this script wisely. Again, do not take the results and blindly add indexes, that’s not the point. Also, the code is not perfect and all fancy. It’s a hacky little script and was never meant to be anything more.&lt;/p&gt;

&lt;p&gt;All I’m saying is: don’t put it on Jenkins to automatically add indexes to production and then blame me for the nonsense that will inevitably ensue, alright?&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/marcgg/bb10ba6d80bf598ccd38.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;The script is using Ruby and Rails as well. Of course you could easily take the basic idea and rewrite it for any language and framework if you’d like. It’s very simplistic and didn’t even take me an hour to write.&lt;/p&gt;

&lt;p&gt;Note that you need to specify some params to get it to run, this is mostly to keep the benchmark short enough and somewhat focused. In my case, trying all possibilities on my main table would litteraly take days, so I had to ignore the attributes that wouldn’t make sense in the context of my query.&lt;/p&gt;

&lt;p&gt;It could also be improved to test any combination of indexes accross multiple tables, but I didn’t need it.&lt;/p&gt;

&lt;p&gt;It’s a &lt;a href=&quot;http://opensource.org/licenses/MIT&quot;&gt;gist&lt;/a&gt; and the license is &lt;a href=&quot;http://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt; © &lt;a href=&quot;http://marcgg.com&quot;&gt;Marc G Gauthier&lt;/a&gt;, so feel free to use it and contribute.&lt;/p&gt;

&lt;p&gt;By the way, if you end up with good performance improvements I’d love to read about it in the comments!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Managing Your Project With Github Issues And HuBoard</title>
     <link href="https://marcgg.com/blog/2014/09/17/huboard-kanban-board-github/"/>
     <updated>2014-09-17T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2014/09/17/huboard-kanban-board-github</id>
     <content type="html">
       &lt;p&gt;I’ve been working in startups for a bit now, and the thing I love with this kind of structure is how &lt;a href=&quot;/blog/2014/07/28/company-process-red-tape/&quot;&gt;lightweight&lt;/a&gt; the company processes can be. I don’t need to ask 3 different people to have access to the internet nor do I have an army of managers telling me &lt;a href=&quot;https://www.youtube.com/watch?v=qYodWEKCuGg&quot;&gt;how to code&lt;/a&gt;. Pretty neat.&lt;/p&gt;

&lt;h2 id=&quot;some-structure&quot;&gt;Some Structure&lt;/h2&gt;

&lt;p&gt;However, when scalling a bit the team, having a good overview on what is being worked on get more complex. That’s usually when teams add a physical board with tickets and some kind of organized workflow. These days &lt;a href=&quot;http://en.wikipedia.org/wiki/Kanban&quot;&gt;Kanban&lt;/a&gt; is really popular, and I personnally really like most aspects of it. For instance here is the board we used back when I worked at &lt;a href=&quot;http://www.tigerlilyapps.com&quot;&gt;Tigerlily&lt;/a&gt;. It did it job very well but reached its limit after a while.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/board.jpg&quot; style=&quot;width: 450px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;In some cases you end up with people working remotely that can’t access the physical board, the post-it notes fly all over the place and there is no activity log. That’s when you need to start using tools available on the internet… and there are tons of them!&lt;/p&gt;

&lt;h2 id=&quot;moving-away-from-physical-boards&quot;&gt;Moving Away From Physical Boards&lt;/h2&gt;

&lt;h3 id=&quot;github-issues&quot;&gt;Github Issues&lt;/h3&gt;

&lt;p&gt;Since I’m a developer, I like when I can tie my issues with my code. For this, &lt;a href=&quot;https://guides.github.com/features/issues/&quot;&gt;Github issues&lt;/a&gt; are perfect as it’s a great way to unify things: people discuss pull requests, individual commits and upcoming tasks in the same environement.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/github_issues.jpg&quot; style=&quot;width: 700px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;There is one problem however: Github doesn’t provide a clear workflow like tools such as &lt;a href=&quot;http://www.pivotaltracker.com/&quot;&gt;Pivotal&lt;/a&gt;. Personally I think that it’s both a good and a bad thing.&lt;/p&gt;

&lt;p&gt;It is problematic because a more junior developer might end up loosing their mind in a clutter of issues. I a team of more than a couple of people, it’s also difficult to know what needs to be deployed, what I currently being worked on etc.&lt;/p&gt;

&lt;p&gt;However this limitation can be a good thing. By not forcing a workflow it leaves you the opportunity to create your own way of doing things, adapted to your needs. For instance you could follow the &lt;a href=&quot;http://scottchacon.com/2011/08/31/github-flow.html&quot;&gt;Github Flow&lt;/a&gt; and know that master can be deployed and features branches are being worked on.&lt;/p&gt;

&lt;p&gt;Personnaly I’m more a &lt;a href=&quot;http://nvie.com/posts/a-successful-git-branching-model/&quot;&gt;git flow&lt;/a&gt; kind of guy and I’m not always so confortable with my test suite that I can deploy directly to production. Knowing that, here’s how I decide to organize my issues with HuBoard.&lt;/p&gt;

&lt;h3 id=&quot;huboard-for-the-workflow&quot;&gt;HuBoard For The Workflow&lt;/h3&gt;

&lt;p&gt;In a sentence, HuBoard is a simple tool that acts as a layer on top of your Github issues.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/huboard.jpg&quot; style=&quot;width: 700px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;HuBoard uses the Github public API extensively to give you a better way to manage your workflow. You get to add labels to your issues and these labels are used to define in which “state” they are. For instance you must be familiar with wording like “Going” or “Testing”.&lt;/p&gt;

&lt;p&gt;For reference, here is what we use at &lt;a href=&quot;https://drivy.com&quot;&gt;Drivy&lt;/a&gt;, but obviously it needs to adapt to your own project:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Backlog&lt;/strong&gt; : This needs to be done eventually&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Todo&lt;/strong&gt; : This needs to be done soon&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Going&lt;/strong&gt; : Someone is currently working on it&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;On Staging&lt;/strong&gt; : The ticket is mostly completed and is currently tested on the staging environment&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Ready For Prod&lt;/strong&gt; : The ticket has been tested on staging and works as expected&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;On Prod&lt;/strong&gt; : The ticket has been deployed to production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once the ticket is in production and tested there, then and only then the ticket is closed.&lt;/p&gt;

&lt;p&gt;I confess that I don’t use a lot of the new features available. What makes HuBoard usefull to me is mostly the board visualisation and the ability to use drag &amp;amp; drop to change a Github issue’s state. I also enjoy the ability to order issues to represent priority as well as the quick filtering to know what’s assigned to who.&lt;/p&gt;

&lt;p&gt;Thanks to this approach your issues are left in your repository but you still get a cool Kanban board interface to manage everything! If some people in your team don’t like it, they can always stay on Github.com: the tags will be there and everything is synchronised seemlessly.&lt;/p&gt;

&lt;p&gt;It Just Works™!&lt;/p&gt;

&lt;h3 id=&quot;sounds-cool-how-do-i-use-it-&quot;&gt;Sounds Cool, How Do I Use It ?&lt;/h3&gt;

&lt;p&gt;HuBoard is available as a service on &lt;a href=&quot;https://huboard.com/?utm_source=marcgg&amp;amp;utm_medium=blog&amp;amp;utm_campaign=marcgg&quot;&gt;HuBoard.com&lt;/a&gt;. It’s free for public projects and if you want to use it for private projects &lt;a href=&quot;https://huboard.com/pricing?utm_source=marcgg&amp;amp;utm_medium=blog&amp;amp;utm_campaign=marcgg&quot;&gt;you can pay $24 a month for organization and $7 a month for single users&lt;/a&gt;.
They also have an offer for those working with &lt;a href=&quot;https://enterprise.huboard.com/?utm_source=marcgg&amp;amp;utm_medium=blog&amp;amp;utm_campaign=marcgg&quot;&gt;Github Enterprise&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Since the project is open source, you can also &lt;a href=&quot;https://github.com/rauhryan/huboard&quot;&gt;grab the code&lt;/a&gt; and deploy it to your own servers. For my usage, I’m running my own fork of the code on a &lt;a href=&quot;https://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt; free plan.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Keep in mind that this is just my opinion, and not a sponsored post. I just love this project and been using it for a couple of years for free, so I thought I’d share the love :)&lt;/em&gt;&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Thoughts On Company Procedures</title>
     <link href="https://marcgg.com/blog/2014/07/28/company-process-red-tape/"/>
     <updated>2014-07-28T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2014/07/28/company-process-red-tape</id>
     <content type="html">
       &lt;p&gt;To me, a formal process is just like code. A way to solve a problem. I’m not talking about best practices or common sense but real formalized ways of doing things. For instance if a team constantly have problem communicating, it could be interesting to set and enforce some kind of recurring meeting to facilitate discussions - let’s say every monday, 1 hour, all hands.&lt;/p&gt;

&lt;p&gt;However, in some situations, leadership might want to overengineer and add processes everywhere, even if there is little to no problem. This will not improve a thing, just adding inertia and slowing down the team. If you have too much red tape, energy is wasted on enforcing the newly created procedures while legitimate ideas to improve will be buried or ignored.&lt;/p&gt;

&lt;p&gt;Going back to my first example, if the development team is only two people in the same office talking constantly together there might not be a need for any communication process.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/brazil.jpg&quot; style=&quot;width: 450px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;It’s all about adapting your processes to the situation. A brilliant organizational idea from another company might not work for your team. &lt;a href=&quot;/assets/blog/heck.jpg&quot;&gt;Heck&lt;/a&gt;, what worked for you at some point might not even do it anymore after doubling in size!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;One of my fav authors once said every law should be signed with mourning, “this is where we failed each other, and now require force”.&lt;/p&gt;

  &lt;p&gt;Quinn Norton (&lt;a href=&quot;https://twitter.com/quinnnorton/&quot;&gt;@quinnnorton&lt;/a&gt;), &lt;a href=&quot;https://twitter.com/quinnnorton/statuses/465838348473761792&quot;&gt;May 12th 2014&lt;/a&gt;, paraphrasing &lt;a href=&quot;http://dalependell.com/&quot;&gt;Dale Pendell&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I really like this tweet. A bit extreme but hey, the phrasing is pretty cool. Just replace “law” by “company processes” and &lt;em&gt;voilà&lt;/em&gt;. What I take from it is that, &lt;strong&gt;ideally&lt;/strong&gt;, you should have everyone in your team working well without having to apply force.&lt;/p&gt;

&lt;p&gt;If John often arrives late in meetings doesn’t necessary mean you need to create a company policy about that. You could take 5 minutes to talk with John and try to figure out what the problem is first. Of course this solution doesn’t scale and depends on the team, so again, this has to be adapted.&lt;/p&gt;

&lt;p&gt;To this point I’ve repeated a lot how everything should be adapted and how it depends on a given situation. The corollary of this is that anyone telling you that methodology X is &lt;a href=&quot;/blog/2013/11/05/enough-with-the-language-trolls/&quot;&gt;perfect&lt;/a&gt; for &lt;em&gt;any&lt;/em&gt; team is mistaken.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I suppose it is tempting, if the only tool you have is a hammer, to treat everything as if it were a nail.”&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://books.google.fr/books?id=3%5C_40fK8PW6QC&amp;amp;printsec=frontcover&amp;amp;redir%5C_esc=y#v=onepage&amp;amp;q=hammer&amp;amp;f=false&quot;&gt;Abraham H. Maslow&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I would not claim to have the perfect way to work with a team. I’m bound to make &lt;a href=&quot;/blog/2014/04/28/frame-based-layout-bad-code/&quot;&gt;mistakes&lt;/a&gt;, we all are. And it’s a complex subject… there are even &lt;a href=&quot;http://www.dtic.mil/dtic/tr/fulltext/u2/a346053.pdf&quot;&gt;people writting thesis about it&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The important thing is to know this and be able to adapt to the best of our abilities and keep shipping. Don’t add rules blindly, these new “laws” could have a cost outweighing their benefits.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Some Respect For Legacy Code</title>
     <link href="https://marcgg.com/blog/2014/07/22/in-defense-of-legacy-code/"/>
     <updated>2014-07-22T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2014/07/22/in-defense-of-legacy-code</id>
     <content type="html">
       &lt;p&gt;It’s your first day. You just joined a team working on a cool project. That’s usually at this point that you discover that the code base is not as good as you’d expected. Most likely you’ll then hear from your colleagues something like “Jane wrote that a few years back, we didn’t need to change it so it’s a bit outdated” or “this is some &lt;strong&gt;legacy code&lt;/strong&gt;”. &lt;em&gt;Gasp&lt;/em&gt;.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/reveal.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;This is the definition of legacy code I’m going to use in this article by the way. Meaning, code that still works, is still being used but is not easy to update. This could be due to usage of an outdated frameworks, weird coding conventions, incoherences with the main code base, &lt;a href=&quot;http://www.goodreads.com/quotes/718460-code-without-tests-is-bad-code-it-doesn-t-matter-how&quot;&gt;lack of automated tests&lt;/a&gt; …&lt;/p&gt;

&lt;p&gt;When encountering legacy code, a lot of developers want to refactor everything right away or even rewrite everything from scratch. I can’t blame them, there’s nothing like a greenfield project! I would even go as far as saying that it’s perfectly logical and healthy. It’s important to identify a source of problems and want to fix it.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/rube.jpg&quot; style=&quot;width: 400px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;However, there are ways to approach this issue.&lt;/p&gt;

&lt;h2 id=&quot;someone-wrote-this&quot;&gt;Someone Wrote This&lt;/h2&gt;

&lt;p&gt;First of all, understand that this legacy code was most likely written by someone with good intentions. Coders wanting to purposely hurt a codebase are rare and it’s usually either the lack of experience or the lack of time that lead to what you consider terrible design choices. If you think back, you’ll realize you too wrote terrible code at some point. If you didn’t, either you don’t know it or you’re at the beginning of your career.&lt;/p&gt;

&lt;p&gt;Once you realize that, you’ll see that there is rarely a reason to critize the person behind the code. Nothing positive can come out of it.&lt;/p&gt;

&lt;h2 id=&quot;it-worked-so-far&quot;&gt;It Worked So Far&lt;/h2&gt;

&lt;p&gt;When looking a piece of legacy code and asking for its termination, think that it worked so far. The product is at this point thanks to it. Maybe it’s bad now, but at some point it most likely allowed project to move forward. It created some value… and it’s still working after years!&lt;/p&gt;

&lt;p&gt;Maybe the context is not clear for you now yet. Legacy code is usually written a long time ago, with different best practices, different company objectives, different time constraints. Maybe the code was perfect and awesome at a point, and then requirements changed so much it became more and more clunky and weird.&lt;/p&gt;

&lt;p&gt;So don’t judge a piece of code written by an intern during a rush to ship the v1 the same way you’d judge something calmly written by two experienced developers pairing based on perfectly written specs.&lt;/p&gt;

&lt;h2 id=&quot;detect-fix-avoid&quot;&gt;Detect, Fix, Avoid&lt;/h2&gt;

&lt;p&gt;You might get my point by now: there is no need to be overly harsh. Yeah, maybe you think this piece of code is garbage… and maybe it is! But it’s counter productive to attack the previous coder or to trash talk the way it was coded.&lt;/p&gt;

&lt;p&gt;Identify the issue, put it in some kind of ticketing system and prioritize it based on risks, time wasted and so on.&lt;/p&gt;

&lt;p&gt;For instance I wouldn’t stress out too much for a poorly written code that’s never updated and works perfectly. If I tried to fix it, I might introduce regression bugs and it wouldn’t be much better. However, if the project requires me to update this part of the code every other week, it becomes an entirely different discussion.&lt;/p&gt;

&lt;p&gt;When you get to it, fix it the best you can and do everything you can in order to avoid introducing some &lt;em&gt;different&lt;/em&gt; legacy code! You could also see if the system would still work &lt;a href=&quot;http://blog.codinghorror.com/the-best-code-is-no-code-at-all/&quot;&gt;with no code at all&lt;/a&gt;.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/wtfminute.png&quot; style=&quot;width: 400px;&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;you-will-write-legacy-code&quot;&gt;You Will Write Legacy Code&lt;/h2&gt;

&lt;p&gt;Sorry to break the news, but there is no way you’ll go your entire developer career without &lt;a href=&quot;/blog/2014/04/28/frame-based-layout-bad-code/&quot;&gt;leaving some legacy code behind you&lt;/a&gt;. And it’s okay. If you try to avoid leaving less than perfect code behind you, you might end up not writting anything at all. We all need to learn and hopefully your learning mistakes won’t be too bad. Having good mentors helps.&lt;/p&gt;

&lt;p&gt;I really like Sandi Metz’s talk “&lt;a href=&quot;http://www.confreaks.com/videos/1115-gogaruco2012-go-ahead-make-a-mess&quot;&gt;Go Ahead, Make A Mess&lt;/a&gt;” where she explains that you won’t reach perfection any time soon. You will have people in your team, including yourself, writting poor code at some point. Knowing that, you can focus on mitigating the risk of writting bad code - with strategies as reducing dependecies, good testing, good training and so on. Have some metrics or process (code reviews?) to spot what could become legacy and keep on refactoring.&lt;/p&gt;

&lt;p&gt;In this whole process, learn from what you just refactored or rewrote, and always thrive to achieve better design and a cleaner coding style. It can only lead to better software and happier teammates.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>My Problem With Apps To Track Your Life (and Why I Created My Own)</title>
     <link href="https://marcgg.com/blog/2014/05/06/quantified-self-iphone-app-track-mood-day/"/>
     <updated>2014-05-06T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2014/05/06/quantified-self-iphone-app-track-mood-day</id>
     <content type="html">
       &lt;p&gt;I wouldn’t say that I’m into quantified self, but I do enjoy having some idea of what I’m doing with my life. Wearing gear tracking you, a Jawbone for instance, feels overkill to me. My approach is simply based on Foursquare to see where I’ve been and a calendar app to note what I’ve done.&lt;/p&gt;

&lt;p&gt;A while back I thought it would be cool to have stats summing up how I felt about my life. It’s a thing to know facts about my activities, but it’s another to see if I actually enjoyed myself ! So I searched the web for good mobile applications but didn’t find anything matching what I wanted.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: From this point on, please understand that I’m not here to bash anyone. The apps I tried were not for me, but I’m sure they work for some. I might also have missed some good apps, but I did spend a while looking. Either they had bad SEO or they weren’t released when I searched.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;First, let’s look at some of the apps I tried. I’ll spare you the countless joke “mood scanners”.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/all_apps.jpg&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;too-simplistic-or-too-complicated&quot;&gt;Too Simplistic or Too Complicated&lt;/h3&gt;

&lt;p&gt;Most of the apps I tried out asked for an explicit rating for a given day. Was my day a “5 out of 10” or a “6 out of 10” ? Was it a “frowning face” or a “smiling face” ? Was it “red” or was it “green” ? Was I “happy” or “sad” ?&lt;/p&gt;

&lt;p&gt;It just felt too simplistic. A day can be way more than one thing ! Saying that my day was terrible just because a part of it was bad wouldn’t be right. Mitigating the result by stating that it was “average” would only hide the interesting data and I’d constantly end up with average notes…&lt;/p&gt;

&lt;p&gt;Some apps would get into more details… but then it would be too much and the process becomes tedious ! To be fair, most clearly had a more medical approach and were destined to track every single details of one’s day. Other apps would go in depth in one direction, such as calories intake or miles ran. These apps were ok, but not what I was looking for.&lt;/p&gt;

&lt;h3 id=&quot;dont-judge-me&quot;&gt;Don’t Judge Me&lt;/h3&gt;

&lt;p&gt;Some days are good, some days are bad. This is life !&lt;/p&gt;

&lt;p&gt;When a day is good, I’m already enjoying myself so I don’t need anymore reinforcement… and let’s just say that if my day was bad, I don’t want to tell it to an app that rewards me with an “aww poor you” alert box alongside a crying smiley face gif.&lt;/p&gt;

&lt;p&gt;I also really don’t like the green/red color coding for the same reason.&lt;/p&gt;

&lt;h3 id=&quot;everything-doesnt-have-to-be-social&quot;&gt;Everything Doesn’t Have To Be Social&lt;/h3&gt;

&lt;p&gt;I was really surprised by the number of apps that have some kind of social sharing built in. My take on these kind of apps is that they should be treated like the new iteration of diaries, just a bit more data oriented… and you wouldn’t go show your diary around, would you ?&lt;/p&gt;

&lt;p&gt;I think this leads to dishonest daily ratings just for sharing purposes, defeating the whole point of rating your day.&lt;/p&gt;

&lt;h2 id=&quot;my-solution&quot;&gt;My Solution&lt;/h2&gt;

&lt;p&gt;I do enjoy the “&lt;a href=&quot;https://gettingreal.37signals.com/ch02_Whats_Your_Problem.php&quot;&gt;scratch your own itch&lt;/a&gt;” mentality that I apply to the extent of my available time in &lt;a href=&quot;http://stackoverflow.com/a/5233378&quot;&gt;open source&lt;/a&gt;, so I teamed up with a &lt;a href=&quot;http://dribbble.com/kevintunc&quot;&gt;designer friend&lt;/a&gt; and we created &lt;a href=&quot;https://itunes.apple.com/app/liff-understand-your-life/id834944345&quot;&gt;Liff&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here’s how this new app addresses the points above.&lt;/p&gt;

&lt;h3 id=&quot;everything-falls-in-6-categories&quot;&gt;Everything Falls In 6 Categories&lt;/h3&gt;

&lt;p&gt;Basing ourselves very losely on &lt;a href=&quot;http://www.bcbusiness.ca/lifestyle/bryan-dysons-30-second-speech&quot;&gt;Brian G. Dyson’s juggling metaphore&lt;/a&gt;, we decided to classify everything happening in one’s life into 6 categories: Love, Friendship, Health, Family, Spirit and Work. For instance a fun birthday party might have positive effects on Friendship, Love and Family… but could have a negative impact on Health if you stay out too late !&lt;/p&gt;

&lt;p&gt;Based on that, you don’t rate your day with a single grade or smiley face. Instead you get to use 6 sliders, one for each category. This allows you to be more granular. A bad day at work doesn’t mean a bad day in general.&lt;/p&gt;

&lt;p&gt;It’s both simple enough that rating a day doesn’t take much time and complex enough so that the result is interesting. This results in better data and a way for the user to relativize a day’s events.&lt;/p&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;&lt;img style=&quot;width: 700px;&quot; src=&quot;/assets/blog/liff_3d.jpg&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;track-your-day-with-no-judgment&quot;&gt;Track Your Day With No Judgment&lt;/h3&gt;

&lt;p&gt;You might have noticed that there is no explicit value on the app sliders. This is because the rating system is left to the user to decide ! Maybe a good day is 75% filled, maybe it’s 100% … the only sure thing is that Liff will never give you any hints on what it “thinks” of your input.&lt;/p&gt;

&lt;p&gt;Overall, the app design and copy try to be neutral without being completely impersonal.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img style=&quot;width: 220px;&quot; src=&quot;/assets/misc/loader.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;To help you have a coherent grading system, note that the current day’s sliders are prefiled with yesterday’s values.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;and-the-rest&quot;&gt;And The Rest&lt;/h3&gt;

&lt;p&gt;Of course, like any quantified self app, you get graphs, daily push reminders, data exports via email, notes, backups on the cloud and so on. I might get more into this part of Liff in another article.&lt;/p&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;&lt;img style=&quot;width: 700px;&quot; src=&quot;/assets/blog/liff_all.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Oh, and absolutely no social media integration… and let’s just say that it’s not because I don’t know how - &lt;a href=&quot;/blog/2012/09/24/working-with-apis-facebook/&quot;&gt;I worked with the Facebook API&lt;/a&gt; for years after all !&lt;/p&gt;

&lt;h2 id=&quot;give-it-a-try-its-free&quot;&gt;Give It A Try, It’s Free&lt;/h2&gt;

&lt;p&gt;I’ve been using &lt;a href=&quot;https://itunes.apple.com/app/liff-understand-your-life/id834944345&quot;&gt;Liff&lt;/a&gt; ever since it was somewhat functional, so for about 8 months now. So far I’m very happy with it and I did notice some patterns with the way I feel about my days.&lt;/p&gt;

&lt;p&gt;We released it recently on &lt;a href=&quot;https://itunes.apple.com/app/liff-understand-your-life/id834944345&quot;&gt;iOS for free&lt;/a&gt;. Depending on reception we’ll release on Android too (it uses &lt;a href=&quot;/blog/2014/04/09/phonegap-steroids-hybrid-native-app-tips/&quot;&gt;SteroidsJs&lt;/a&gt; so it should be possible quickly). If you share my opinion, please give the app a try and send me your feedback… and if you don’t agree, remember that I don’t claim to have the truth, but feel free to leave a comment. I’d love to know what you think !&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Tips on Creating a Website From When I Was 12</title>
     <link href="https://marcgg.com/blog/2014/04/28/frame-based-layout-bad-code/"/>
     <updated>2014-04-28T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2014/04/28/frame-based-layout-bad-code</id>
     <content type="html">
       &lt;p&gt;I’ve been writing code for a while. I started with QBasic when I was a kid and the two things I remember from
that time was using PRINT and the fact I was dead confused by the editor I had to use.&lt;/p&gt;

&lt;p&gt;I might also have written something calculating my age based on my birthday…&lt;/p&gt;

&lt;p&gt;Computer science!&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/qbasic.png&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;the-internet&quot;&gt;The Internet&lt;/h2&gt;

&lt;p&gt;A few years later, I’m around 12 years old and the internet is a brand new thing. I use my AOL browser and my 56k modem
to browse &lt;em&gt;the web&lt;/em&gt; and it’s amazing.&lt;/p&gt;

&lt;p&gt;Seeing all these websites makes me want to create my own. Something great. Something about pokemons, AOL chatroom bots
or whatever I was interested in at the time !&lt;/p&gt;

&lt;p&gt;The thing is that back then there was very little information available… or at least I didn’t know where to find it.
After time spent on forums whinning for help, I only found that I had to download SiteAid.&lt;/p&gt;

&lt;p&gt;For reference, here is what it looked like in all its glory:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/siteaid.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Since I wanted a menu on the left and content on the right, I somehow understood that I could use frames to do that.
After some fiddling around with the UI, I got it to work.&lt;/p&gt;

&lt;p&gt;The problem is that I stopped trying to figure out things here and started building my website.&lt;/p&gt;

&lt;h2 id=&quot;tutorial-aka-the-abomination&quot;&gt;Tutorial (aka The Abomination)&lt;/h2&gt;

&lt;p&gt;So first you want to create your main page:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;HTML&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;TITLE&amp;gt;&lt;/span&gt;INTERNET!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TITLE&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAMESET&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cols=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;20%, 80%&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;f1.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;f2.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/FRAMESET&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HTML&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s add some sweet design in each frame file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;BODY&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bgcolor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;orange&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Content!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/BODY&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Right away it starts looking good:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/frames/page1.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;That’s nice, but I want to have more than 1 element in my left menu, so how can I do that ?
You could very much do this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;BODY&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bgcolor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;orange&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Menu 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;BR&amp;gt;&amp;lt;BR&amp;gt;&amp;lt;BR&amp;gt;&lt;/span&gt;Menu 2&lt;span class=&quot;nt&quot;&gt;&amp;lt;BR&amp;gt;&amp;lt;BR&amp;gt;&amp;lt;BR&amp;gt;&lt;/span&gt;Menu 3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/BODY&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The problem is that then you won’t have colors on your menu items ! That’s when my very clever trick
comes in. You just need… more frames !&lt;/p&gt;

&lt;p&gt;Change f1.html to look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;HTML&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;TITLE&amp;gt;&lt;/span&gt;INTERNET!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TITLE&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAMESET&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;25%, 25%, 25%, 25%&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;menu1.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;menu2.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;menu3.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;menu4.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/FRAMESET&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HTML&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Wow. Such color. Much design.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/frames/page2.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;You can even create some impressive gradients with only a few more lines of code and
knowledge of &lt;em&gt;advanced colors in HTML&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;BODY&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bgcolor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;black&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;white&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Menu 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/BODY&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/frames/page3.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Finally let’s say I want to add an image next to a menu item. Seems complicated, right?&lt;/p&gt;

&lt;p&gt;No. It’s easy when you use frames!&lt;/p&gt;

&lt;p&gt;You only need to change menu.html like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;HTML&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;TITLE&amp;gt;&lt;/span&gt;INTERNET!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TITLE&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAMESET&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cols=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;20%, 80%&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;new.gif&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;menu1_text.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/FRAMESET&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HTML&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/frames/page4.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Perfect.&lt;/p&gt;

&lt;p&gt;Now for the protip. If you want your website to look perfect, you want to hide the construction
lines that are the frame borders. To do this, add a frameborder set to 0.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;HTML&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;TITLE&amp;gt;&lt;/span&gt;INTERNET!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TITLE&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAMESET&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cols=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;20%, 80%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;frameborder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;f1.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;f2.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/FRAMESET&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HTML&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now you have a professional looking website.&lt;/p&gt;

&lt;p&gt;You’re welcome.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/frames/page5.png&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;the-worst-code&quot;&gt;The Worst Code&lt;/h2&gt;

&lt;p&gt;My take on this is that the code you wrote yesterday will always be crap compared to what you can
write today. Don’t be depressed about it, that’s a good thing ! It means you’re getting better!&lt;/p&gt;

&lt;p&gt;On some forum a few years back, someone asked “what’s the worst code you ever saw ?”.
Someone responded something along the line of “every single piece of code I’ve written a long enough time ago”.
I really liked this answer, quite humbling and much better than bashing a coworker or a random funny story.&lt;/p&gt;

&lt;p&gt;So keep improving your skills, don’t feel too bad about past coding mistakes and don’t hate on new developers
still learning - you were making the same mistakes at some point !&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Tips &amp; Tricks Learned Releasing an Hybrid App Using&amp;nbsp;Steroids.js</title>
     <link href="https://marcgg.com/blog/2014/04/09/phonegap-steroids-hybrid-native-app-tips/"/>
     <updated>2014-04-09T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2014/04/09/phonegap-steroids-hybrid-native-app-tips</id>
     <content type="html">
       &lt;p&gt;A while ago I &lt;a href=&quot;/blog/2013/08/29/appgyver-steroids-iphone-hybrid-javascript/&quot;&gt;wrote about AppGyver’s SteroidsJS&lt;/a&gt;
and its interesting take on hybrid app development. If you haven’t read it, basically they add the ability
to use native UI elements in PhoneGap applications.&lt;/p&gt;

&lt;p&gt;Since then I’ve teamed up
with &lt;a href=&quot;http://dribbble.com/kevintunc&quot;&gt;Kevin Tunc&lt;/a&gt;, worked a lot, managed to actually release something
&lt;a href=&quot;https://itunes.apple.com/app/liff-understand-your-life/id834944345&quot;&gt;on the appstore&lt;/a&gt; and
won AppGyver’s app of the month!&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/win_app_month.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;It wasn’t all that easy to create an hybrid app with a quality UI,
so I figured I’d share some of the gotchas I ran into.
I know it’s a longer article than what I use to post, but really this is what I wish was written when I started
working on my app.&lt;/p&gt;

&lt;p&gt;Of course, like any other things I write here,
&lt;a href=&quot;/blog/2013/11/05/enough-with-the-language-trolls/&quot;&gt;I don’t claim to know everything&lt;/a&gt;.
Please take this as it is: some tips I learned making mistakes and wasting time.
I’m no JavaScript guru master ninja 2.0 rock star,
&lt;a href=&quot;https://www.youtube.com/watch?v=Nh7UgAprdpM&quot;&gt;ain’t nobody got time for that&lt;/a&gt;!
I’ll also focus on iOS because I built an iOS app, but a lot of this
applies to Android phones as well. Also note that some parts of the article are just as
true for any kind of hybrid app development, be it with PhoneGap or something else.&lt;/p&gt;

&lt;h2 id=&quot;getting-the-device-to-leave-you-alone&quot;&gt;Getting The Device To Leave You Alone&lt;/h2&gt;

&lt;p&gt;You probably know all about using a &lt;a href=&quot;http://meyerweb.com/eric/tools/css/reset/&quot;&gt;reset.css file&lt;/a&gt;, but
for a webview trying to pass for a native view, it’s not enough.&lt;/p&gt;

&lt;h3 id=&quot;ms-tap-delay&quot;&gt;300ms Tap Delay&lt;/h3&gt;

&lt;p&gt;Mobile browsers implement a delay on tap to check if you tried to double
tap or not. Overall it goes: touchstart -&amp;gt; touchend -&amp;gt; wait 300ms -&amp;gt;
send click. This results in a terrible experience when navigating your
app as it feels slow and/or broken.&lt;/p&gt;

&lt;p&gt;For some browsers you can just
&lt;a href=&quot;http://updates.html5rocks.com/2013/12/300ms-tap-delay-gone-away&quot;&gt;specify a viewport and it’ll go away&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, user-scalable=no&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If this solution doesn’t work, for instance if your code runs on Safari, use &lt;a href=&quot;https://github.com/ftlabs/fastclick&quot;&gt;FastClick&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'load'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;FastClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;disable-selectioncopy-when-long-tapping&quot;&gt;Disable Selection/Copy When Long Tapping&lt;/h3&gt;

&lt;p&gt;You know… this thing:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/copy.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Fixing this one is pretty easy. For webkit you add this in your CSS:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;-webkit-user-select&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-webkit-touch-callout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;disable-double-tap&quot;&gt;Disable Double Tap&lt;/h3&gt;

&lt;p&gt;If you don’t like double tapping and use jQuery, try &lt;a href=&quot;http://stackoverflow.com/a/9728511&quot;&gt;this stackoverflow answer&lt;/a&gt;.
Just in case this answer disapears, here’s what it looks like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// jQuery no-double-tap-zoom plugin&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Triple-licensed: Public Domain, MIT and WTFPL license - share and enjoy!&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IS&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_IOS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/iphone|ipad/i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userAgent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nodoubletapzoom&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;IS_IOS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'touchstart'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;preventZoom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeStamp&lt;/span&gt;
	      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lastTouch'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t2&lt;/span&gt;
	      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t1&lt;/span&gt;
	      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fingers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;touches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lastTouch'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fingers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// not double-tap&lt;/span&gt;

	    &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// double tap - prevent the zoom&lt;/span&gt;
	    &lt;span class=&quot;c1&quot;&gt;// also synthesize click events we just swallowed up&lt;/span&gt;
	    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;disable-overscroll&quot;&gt;Disable Overscroll&lt;/h3&gt;

&lt;p&gt;I think that you want the “bounce” effect when you scroll out of a
webview. It actually feels better for the end user. However in some
specific cases you might need to disable this behavior. There are many ways of doing this and I personnaly used
this one from
&lt;a href=&quot;http://stackoverflow.com/questions/10238084/ios-safari-how-to-disable-overscroll-but-allow-scrollable-divs-to-scroll-norma&quot;&gt;stackoverflow&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disallowOverscroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'touchmove'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'touchstart'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.scrollable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	  &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollHeight&lt;/span&gt;
	          &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt;
	              &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	  &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'touchmove'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.scrollable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stopPropagation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;higcharts&quot;&gt;Higcharts&lt;/h3&gt;

&lt;p&gt;If you use &lt;a href=&quot;http://www.highcharts.com/&quot;&gt;highcharts&lt;/a&gt;, you could run into some scrolling trouble when
the user touches the graphs. This gist might help:
&lt;a href=&quot;https://gist.github.com/skarface/2994906&quot;&gt;https://gist.github.com/skarface/2994906&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;allow-text-selection-for-input&quot;&gt;Allow Text Selection For Input&lt;/h3&gt;

&lt;p&gt;This is an iOS issue. In some cases you won’t be able to select and edit
the text in your inputs as you’d like. You can fix this using
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/user-select&quot;&gt;user-select&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;-webkit-user-select&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;better-looking-text&quot;&gt;Better Looking Text&lt;/h3&gt;

&lt;p&gt;I noticed that changing the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/text-rendering&quot;&gt;text-rendering&lt;/a&gt;
option gets things to look better. The trade-off is performance, but if you don’t have
huge chunks of text you’ll be fine.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;text-rendering&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;optimizeLegibility&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;remove-glossy-looking-buttons-in-safari&quot;&gt;Remove Glossy Looking Buttons in Safari&lt;/h3&gt;

&lt;p&gt;How to go from a glossy stylized button (left) to a cleaner, flatter,
easier to update button (right)?&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/glossysafari.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Easy!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;-webkit-appearance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;carret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-webkit-appearance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;alernatively&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can read more about this &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/-moz-appearance&quot;&gt;here&lt;/a&gt;.
I also found that changing box sizing could help in the “undesign” process. Smarter people than me explained
&lt;a href=&quot;http://www.paulirish.com/2012/box-sizing-border-box-ftw/&quot;&gt;how it works&lt;/a&gt;,
you can &lt;a href=&quot;http://quirksmode.org/css/user-interface/boxsizing.html&quot;&gt;read about it&lt;/a&gt; or try it out like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;-webkit-box-sizing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;border-box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;removing-gray-highlight-when-tapping-links&quot;&gt;Removing Gray Highlight When Tapping Links&lt;/h3&gt;

&lt;p&gt;On mobile Safari, tapped links will get quickly highlighted, which
doesn’t look very “native” once embeded in a Steroids JS webview. This is especialy true
for images. Change this using:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;-webkit-tap-highlight-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#123456&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;To&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;change&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*/&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-webkit-tap-highlight-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;transparent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;To&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;remove&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I found that changing the color feels better than removing it.&lt;/p&gt;

&lt;h3 id=&quot;overflow-scrolling&quot;&gt;Overflow Scrolling&lt;/h3&gt;

&lt;p&gt;If you have some elements that are set to scroll when overflowing, you
might feel that the scrolling itself doesn’t “feel right”. I suggest
looking in this direction:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt; &lt;span class=&quot;nt&quot;&gt;-webkit-overflow-scrolling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;touch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;on-fluid-layouts&quot;&gt;On Fluid Layouts&lt;/h3&gt;

&lt;p&gt;Using percentages for size can be a good option to handle different screen sizes.
Just know that there is a &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/9282&quot;&gt;known issue&lt;/a&gt; where Safari
rounds up percentages that can cause for weird behaviors when using fluid layouts.&lt;/p&gt;

&lt;h2 id=&quot;retina&quot;&gt;Retina&lt;/h2&gt;

&lt;p&gt;If you build for iOS, you have to take retina into account. Spoiler:
it’s a pain.&lt;/p&gt;

&lt;h3 id=&quot;the-big-idea&quot;&gt;The Big Idea&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Retina Display is a brand name used by Apple for liquid crystal displays
that have a pixel density high enough that the human eye is unable to discern
individual pixels at a typical viewing distance.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Retina_Display&quot;&gt;wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The short version of how to deal with it is pretty straightforward: create images twice as big, call them
my_image@2x.jpg and resize them in CSS.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;_image&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.jpg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;background-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;100px&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;_image&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.jpg&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;being&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;200x200&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;dont-bother-with-normal-size&quot;&gt;Don’t Bother With Normal Size&lt;/h3&gt;

&lt;p&gt;If all your images are in your build and not on a remote server, I would recommend always loading the @2x version.
The rule of thumb is that if it looks fine in retina, it will look fine in 1x and embeding
the 1x image will only increase your build’s size and complexify the way you manage your assets.&lt;/p&gt;

&lt;h3 id=&quot;background-position&quot;&gt;Background Position&lt;/h3&gt;

&lt;p&gt;Be careful when using background positions with background sizes as they
sometimes &lt;a href=&quot;http://stackoverflow.com/questions/17033806/background-size-with-background-position-doesnt-scale-the-position&quot;&gt;don’t play well together&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;px-border&quot;&gt;1px Border&lt;/h3&gt;

&lt;p&gt;If you specify a 1px border in your CSS, a 2px border will be displayed
on retina displays. Yeah, this is pretty unituitive and a major pain.
There are a lot of ways to try to get this to work.&lt;/p&gt;

&lt;p&gt;This might not be best for you but, for my use case, I found
&lt;a href=&quot;https://excellenteasy.com/devblog/posts/how-to-target-physical-pixels-on-retina-screens-with-css/&quot;&gt;Stephan Bönnemann’s solution&lt;/a&gt;
simpler, and I ended adding a DOM element and styling it like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;physical_1px&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.physical&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;_1px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear-gradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#DFDFDF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#DFDFDF&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;transparent&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;no-repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is not ideal, but I wasn’t a fan of the alternatives either. Check
them out and make an opinion for yourself:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://atirip.com/2013/09/22/yes-we-can-do-fraction-of-a-pixel/&quot;&gt;Yes We Can Do Fraction Of A Pixel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://n12v.com/css-retina-and-physical-pixels/&quot;&gt;CSS, Retina, and Physical Pixels&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://makandracards.com/makandra/12019-css-emulate-borders-with-inset-box-shadows&quot;&gt;CSS: Emulate borders with inset box shadows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;performances&quot;&gt;Performances&lt;/h2&gt;

&lt;h3 id=&quot;avoid-http-calls&quot;&gt;Avoid HTTP Calls&lt;/h3&gt;

&lt;p&gt;This seems obvious, but embed as many images and javascript libraries as possible in your build.
It will run on mobile, and connectivity is an issue there. Yes it does increases build size, but
it’s totally worth it.&lt;/p&gt;

&lt;h3 id=&quot;jquery-&quot;&gt;jQuery ?&lt;/h3&gt;

&lt;p&gt;I used jQuery. There, I said it.&lt;/p&gt;

&lt;p&gt;I knew it would degrade performances, but I benchmarked it a bit versus Vanilla JS and the
difference was not really noticable for my use cases, so I kept it because I’m used to the
syntax and it &lt;a href=&quot;/blog/2013/11/05/enough-with-the-language-trolls/&quot;&gt;gets the job done&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Of course I followed &lt;a href=&quot;http://www.artzstudio.com/2009/04/jquery-performance-rules/&quot;&gt;the usual performances tips&lt;/a&gt;,
not too much DOM manipulation, do not reselect the same element over and
over etc.&lt;/p&gt;

&lt;h3 id=&quot;css-performances&quot;&gt;CSS Performances&lt;/h3&gt;

&lt;h4 id=&quot;animations&quot;&gt;Animations&lt;/h4&gt;

&lt;p&gt;On a lot of devices CSS animations are slow. Often it’s not slow enough
you want to stop using them altogether, but they are still not that good.&lt;/p&gt;

&lt;p&gt;My point is that you should not count on perfectly smooth animations when designing your app.&lt;/p&gt;

&lt;h4 id=&quot;linear-gradients-qtwebkit-and-graphics&quot;&gt;Linear Gradients, QtWebkit and Graphics&lt;/h4&gt;

&lt;p&gt;During development I did run into major CSS performance issues. I’m not even kidding.
This happened when I tried to apply an animation to a div with a linear-gradient.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sometimes it’s tempting to use webkit’s drawing features, like -webkit-gradient,
when it’s not actually necessary - maintaining images and dealing with Photoshop
and drawing tools can be a hassle. However, using CSS for those tasks moves that
hassle from the designer’s computer to the target’s CPU. Gradients, shadows,
and other decorations in CSS should be used only when necessary
(e.g. when the shape is dynamic based on the content) - **otherwise, static images
are always faster**. On very low-end platforms, it’s even advised to use static images
for some of the text if possible.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://trac.webkit.org/wiki/QtWebKitGraphics#Usestaticimages&quot;&gt;webkit.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The solution here is to prefer using images as background images rather
than CSS gradients. This is irritating, but I never found a way
around this performance issue.&lt;/p&gt;

&lt;h3 id=&quot;javascript&quot;&gt;JavaScript&lt;/h3&gt;

&lt;p&gt;I’m not going to explain everything about JS performances. This could be
a serie of articles in itself. It could even be a book.
Actually, it is a book! &lt;a href=&quot;http://shop.oreilly.com/product/9780596802806.do&quot;&gt;Go check it out&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;To sum it up: reuse objects, do not lock processes, be evented, large
arrays will slow everything down.&lt;/p&gt;

&lt;h2 id=&quot;working-with-steroidsjs&quot;&gt;Working with SteroidsJS&lt;/h2&gt;

&lt;p&gt;Alright, we talked a lot of general facts that could apply to any hybrid
HTML 5 / CSS 3 app, but what about SteroidsJS itself?&lt;/p&gt;

&lt;h3 id=&quot;learning&quot;&gt;Learning&lt;/h3&gt;

&lt;p&gt;Like any new libraries there will be problems, bugs and API changes.
It is important to keep up to date, I’d suggest:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Following what goes on in the &lt;a href=&quot;http://forums.appgyver.com&quot;&gt;forums&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Keep an eye on the &lt;a href=&quot;http://blog.appgyver.com/changelog/&quot;&gt;changelog&lt;/a&gt;
and the &lt;a href=&quot;http://blog.appgyver.com/&quot;&gt;blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For documentation and tips on how to code:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use &lt;a href=&quot;http://docs.appgyver.com/en/edge/index.html&quot;&gt;the API documentation&lt;/a&gt; which is quite
extensive. Be aware that it is very poorly referenced on Google right now so
you’ll have to be precise in your searches.&lt;/li&gt;
  &lt;li&gt;Reading &lt;a href=&quot;http://academy.appgyver.com/&quot;&gt;the tutorials&lt;/a&gt;
is a must. They are well done and give a good overview of what the technology can do.
There are also a lot of good step by step examples.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;organizing-code&quot;&gt;Organizing Code&lt;/h3&gt;

&lt;p&gt;I personnally didn’t go the AngularJS route because it felt overkill for
what I tried to achieve. I also didn’t like the MVC solution proposed by
basic steroids scaffolding. In the end what worked for me was quite
view-centric approach that looked like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;/app/views/my_scope/action.html (a view in a separate webview)&lt;/li&gt;
  &lt;li&gt;/app/controllers/my_scope/action.js (all the JS related to a view)&lt;/li&gt;
  &lt;li&gt;/app/models/data_persistence.js (everything that is transversal and
relates to data)&lt;/li&gt;
  &lt;li&gt;/www/javascripts/application.js (shared code between all views)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Overall once I set it up like this, it was easier to figure out what
would interact with what.&lt;/p&gt;

&lt;h2 id=&quot;basic-customization--features&quot;&gt;Basic Customization &amp;amp; Features&lt;/h2&gt;

&lt;h3 id=&quot;slider&quot;&gt;Slider&lt;/h3&gt;

&lt;p&gt;If you’re in need of a touch slider, I recommend using &lt;a href=&quot;https://github.com/thebird/Swipe&quot;&gt;Swipe.Js&lt;/a&gt;.
It’s both simple, effective and very customizable.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mySwipe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Swipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'slider'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The only gotcha is that you won’t be able to put inputs in a slide
because text edition (long press on iOS) will not work properly.&lt;/p&gt;

&lt;h3 id=&quot;hammerjs&quot;&gt;Hammer.js&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://eightmedia.github.io/hammer.js/&quot;&gt;Hammer&lt;/a&gt; ships with Steroids JS, so I gave it a try.
Overall it works fine for some events such as tap or release, but the
way it handles clicks seemed buggy. I can’t quite put my finger on it,
but in some cases I was better of just using jQuery for click events.&lt;/p&gt;

&lt;h3 id=&quot;use-clicks&quot;&gt;Use Clicks&lt;/h3&gt;

&lt;p&gt;When in doubt, use links and their click event. It will feel better for
the end user than using tap or any other event. There is no need
to get fancy.&lt;/p&gt;

&lt;h3 id=&quot;loader&quot;&gt;Loader&lt;/h3&gt;

&lt;p&gt;I liked having a global way of calling a loader in any view and
centralize the style and retry logic. The javascript code is pretty
domain specific to my app, but I’ll share the CSS part if you want it to
look like this:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/loader.jpg&quot; /&gt;&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loader&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loader&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text_load&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loader_content&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-t=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loading&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;retry_load&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loader_content&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-t=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;retry&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loader&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loader_overlay&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The loader overlay is to prevent any clicking to happened while the
loader is present on the screen. The retry_load and text_load are the
elements displayed when it succeeds or fails.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;130px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;70px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;9999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;190px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.2em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;retry&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;_load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.loader&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;70px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;_overlay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;620px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;320px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you can see, the CSS is very simple. Again, not claiming to provide the definitive
solution here, just some guidance. Feel free to improve on it and add a
comment.&lt;/p&gt;

&lt;h3 id=&quot;settings&quot;&gt;Settings&lt;/h3&gt;

&lt;p&gt;I think I managed to get a decent looking settings tab, but I didn’t
find anything that would do it out of the box. Here’s a screenshot:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/settings_liff.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;I’m not perfectly happy with the way I had to do it, so I won’t share it even if it does look fine.
However you can take a look at what I used for the checkbox
&lt;a href=&quot;http://www.cyberantics.net/toggle.html&quot;&gt;here&lt;/a&gt;. I found it in a comment
on &lt;a href=&quot;http://www.designcouch.com/home/why/2013/09/19/ios7-style-pure-css-toggle/&quot;&gt;a very interesting article&lt;/a&gt;.
Based on this I only had to change a couple of things (webkit-appearance, mostly)
to get it to work perfectly within my app.&lt;/p&gt;

&lt;h3 id=&quot;local-storage&quot;&gt;Local Storage&lt;/h3&gt;

&lt;p&gt;Here is a quick extract of my User model using the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Storage#localStorage&quot;&gt;localStorage API&lt;/a&gt;
for persistence.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;localStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;liff_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nl&quot;&gt;setStatsMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;localStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;liff_stats_mode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Way more things go here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If I were to complexify my data model, I would consider using
&lt;a href=&quot;https://github.com/AppGyver/steroids-plugins/tree/master/sqlite&quot;&gt;SQLite&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;deeper-into-steroidsjs-and-cordova&quot;&gt;Deeper Into SteroidsJS and Cordova&lt;/h2&gt;

&lt;h3 id=&quot;i18n&quot;&gt;I18n&lt;/h3&gt;

&lt;p&gt;I decided to create my app in both French and English, so I had to deal
with internationalization right away. I prefered handling it in the app
rather than creating multiple builds or other complicated solutions. The
performance problem was a non issue thanks to preloading (as explained
further below).&lt;/p&gt;

&lt;p&gt;Working with SteroidsJS means working with Cordova/PhoneGap. In this case the
&lt;a href=&quot;http://docs.phonegap.com/en/2.2.0/cordova_globalization_globalization.md.html&quot;&gt;globalization API&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;deviceready&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;globalization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getPreferredLanguage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	    &lt;span class=&quot;nx&quot;&gt;localize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
	  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	    &lt;span class=&quot;nx&quot;&gt;localize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;localize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\*[data-t]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;I18n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;t&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;… meaning it will use my I18n object (very basic JSON) and replace the
content of any HTML element with a data-t attribute. The body ID is set
so I can load different images in CSS if needed.&lt;/p&gt;

&lt;p&gt;I find it very easy to use every day and it’s decent performance wise if you don’t have
too much text displayed.&lt;/p&gt;

&lt;h3 id=&quot;preloading&quot;&gt;Preloading&lt;/h3&gt;

&lt;p&gt;Preloading is great, it really speeds up everything.&lt;/p&gt;

&lt;p&gt;As explained above, I internationalized my whole app. Because of this I’d have a couple of miliseconds blink before the text appears.
Preloading views fixed this.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/views/settings/some\_view.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;anotherView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/views/settings/another\_view.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;preload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;someView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;anotherView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I also wait a bit before actually preloading the views, so the first app load
time is reduced. I think it’s better to only preload when you really need
it in order to preserve ressources.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Learn more about it on &lt;a href=&quot;http://academy.appgyver.com/categories/3/contents/19&quot;&gt;AppGyver’s website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;_Note that this not fully functional in production on my app because of
an issue in Steroids JS where loading the navigation bar in a certain
way disrupts preloading. Because of this you will see some minor
blinking in some internal setting screens. It will be fixed soon :)_&lt;/p&gt;

&lt;h3 id=&quot;getting-out-of-the-background&quot;&gt;Getting Out Of The Background&lt;/h3&gt;

&lt;p&gt;You might want to do something when the user reopens the app after
putting it in the background. Here’s how to do it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;resume&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Do things&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;communicate-between-views&quot;&gt;Communicate Between Views&lt;/h3&gt;

&lt;p&gt;Using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window.postMessage&quot;&gt;the postMessage API&lt;/a&gt;
to communicate between views is the way to go.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;postMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;something\_happened&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;\*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\*&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt; In the second view &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\*&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;something\_happened&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;_Right now there is an open issue when adding alerts in the event listener
as discussed [on the forum)[http://forums.appgyver.com/#!/steroids:sometimes-alerts-block-th)_.&lt;/p&gt;

&lt;h2 id=&quot;check-out-the-result&quot;&gt;Check Out The Result!&lt;/h2&gt;

&lt;p&gt;Of course you don’t have to take my word for it, give my application a try !&lt;/p&gt;

&lt;p&gt;It’s called Liff and is
&lt;a href=&quot;https://itunes.apple.com/en/app/liff-understand-your-life/id834944345&quot;&gt;available on the appstore&lt;/a&gt;.
The goal is to give a &lt;a href=&quot;http://liffapp.io&quot;&gt;relevant way to get insights on ones day&lt;/a&gt; and
we put in extra efforts in order to create a pleasant experience with a solid design.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/liff_screen.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Clearly creating an hybrid app is easier than ever, but there is still a
lot of things to keep in mind when doing so. Projects like PhoneGap push
the ball in the right direction and I can’t wait to see what kind of
apps we’ll be creating in a few years!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>The Problem With Peak</title>
     <link href="https://marcgg.com/blog/2013/11/12/peak-productivity/"/>
     <updated>2013-11-12T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2013/11/12/peak-productivity</id>
     <content type="html">
       &lt;p&gt;A couple of days ago I ran into a new application by &lt;a href=&quot;http://metalabdesign.com/&quot;&gt;MetaLab&lt;/a&gt; called
&lt;a href=&quot;http://www.usepeak.com/&quot;&gt;Peak&lt;/a&gt;. The application is supposed to be “the automated way to keep track
of what everyone is working on”. Basically you plug in a bunch of
services such as Gmail, Github or Basecamp and the app gives your an
overview of what’s going on as well as metrics about your team.
Since I’m a big fan of what MetaLab produces, I decided to check it out.&lt;/p&gt;

&lt;p&gt;I was very disappointed.&lt;/p&gt;

&lt;p&gt;Don’t get me wrong, the app looks amazing. The UI is slick and
everything is very well organized. My problem with it is that
the product seems misguided.&lt;/p&gt;

&lt;p&gt;I might be mistaken and I’m totally open to change my mind if proven wrong,
but I’ll try to demonstrate in this article why I feel this way.&lt;/p&gt;

&lt;h2 id=&quot;about-metrics&quot;&gt;About metrics&lt;/h2&gt;

&lt;p&gt;I love The Daily WTF and its cautionary tales about software development.
Some are just funny, but others tell a lot about what can actually happens
in some misguided companies. For instance
&lt;a href=&quot;http://thedailywtf.com/Articles/Productivity-20.aspx&quot;&gt;what happens when you start measuring productivity by the number of
commits&lt;/a&gt; or &lt;a href=&quot;http://thedailywtf.com/Articles/Measured\_By\_The\_Line.aspx&quot;&gt;by the
number of lines of code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Spoiler: it’s a disaster.&lt;/p&gt;

&lt;p&gt;Some metrics are interesting, such as progress on the
deadlines, what’s the team velocity, how much time is spent on a
given task and so on. Peak kind of track this thanks to the Github and
Harvest integration. They tell me something and I can act based on them.
For instance I could assign more people to a hard task, organize the roadmap or plan for team growth.&lt;/p&gt;

&lt;p&gt;Others are not interesting, and downright noise. For instance I don’t
see how the number of emails sent is relevant.&lt;/p&gt;

&lt;p&gt;Let’s say Alice sent 100 emails this week and Bob sent 10. What does it
tell me? Is Alice really productive and Bob slacking off? Is Alice
wasting time sending emails and Bob is very efficient? I just know, with
absolutely no context, that emails were exchanged. It might even be internal
emails with jokes in them.&lt;/p&gt;

&lt;p&gt;Same thing with file editions. If Bob edited 20 files, what does that
tell me? Is he working a lot? Is he reorganizing his dropbox? Again,
this tells me nothing of value.&lt;/p&gt;

&lt;p&gt;I might be able to get something out of these if I spend time talking
with Alice and Bob, but then it defeats the purpose of the app.
So I ask, why even bother looking at metrics if I can’t do anything based on the information they provide?&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/peak_emails.png&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;activity--productivity&quot;&gt;Activity ≠ Productivity&lt;/h2&gt;

&lt;p&gt;I’m going to make some assumptions about the way Peak works. I
don’t have an access to the app, so I’m just going to make educated guesses
based on the commercial websites. If I’m wrong, please let me know.&lt;/p&gt;

&lt;p&gt;It seems like that, based on the employees’ activity, the app will output metrics for the
managers or team leads to read.&lt;/p&gt;

&lt;h3 id=&quot;ranking-employees&quot;&gt;Ranking employees&lt;/h3&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/graph_peak.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;On one side we have “red employees”. Color coding seems to indicate that these
are not performing well as red is always related to something negative.
On the other side we have “green employees”, these must be working well
because green is usually a good thing.&lt;/p&gt;

&lt;p&gt;Since the metrics used are not relevant, this ranking is biased and
unusable. It just creates random ranks based on nothing else but
activity.&lt;/p&gt;

&lt;p&gt;The value of an employee is not her activity but what she produces. If
Jane sent 0 emails about a new feature, but delivered on time and
customers were happy, then Jane did a good job even if there is no perceivable
activity within the Peak app.&lt;/p&gt;

&lt;p&gt;On the other end, if William doesn’t produce anything but sends of lot of emails
while messing around with files on the dropbox, he will be deemed
“productive”. Jane will be “red” and William will be “green” in the eyes
of management. This can’t lead to good things when you reward people
based on the wrong kind of metric.&lt;/p&gt;

&lt;p&gt;One could say that the intent isn’t to say that “red” employees are bad,
but seriously, who would like to be flagged as the “least active
employee” of the company ?&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/activity_peak.png&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;measuring-work-hours&quot;&gt;Measuring work hours&lt;/h3&gt;

&lt;p&gt;I personally think that measuring hours doesn’t help producing value. You just
know that your employees were here, but they could be reading Facebook
all day. Still this is the oldest and easiest form of management so it’s
not surprising that it’s the way it is in most places.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;What [banning remote working] reveals more than anything is that Yahoo management doesn’t have a clue as to who’s
actually productive and who’s not. In their blindness they’re reaching for the lowest form of
control a manager can assert: Ensuring butts in seats for eight hours between 9-5+. Though while
they can make people come to the office under the threat of termination, they most certainly
cannot make those same people motivated to do great work.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://twitter.com/dhh&quot;&gt;@dhh&lt;/a&gt; about &lt;a href=&quot;http://37signals.com/svn/posts/3453-no-more-remote-work-at-yahoo&quot;&gt;Yahoo banning remote work&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Again, this rewards employees that are not necessarily the best ones.
Someone completing her tasks working a 40 hours week is probably
more valuable than another person working 100 hours a week to produce
the same output. One could also add that long hours are not sustainable
and that the employee working crazy hours is more prone to burn out,
which is not good for anyone - employer included.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Working overtime sucks the spirit and motivation out of your team.
When your team becomes tired and demoralized they will get less work done,
not more, no matter how many hours are worked.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://www.extremeprogramming.org/rules/overtime.html&quot;&gt;Extreme Programming Manifesto&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/brandon.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Note that this applies mostly for qualified workers, but Peak seems to
be targeted to startups where there are a lot of engineers, product
managers or designers.&lt;/p&gt;

&lt;h2 id=&quot;automated-micromanagement&quot;&gt;Automated Micromanagement&lt;/h2&gt;

&lt;p&gt;A lot of people throw the term micromanagement around, so I’ll define
what I believe is micromanagement before continuing.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In business management, micromanagement is a management style whereby a manager
closely observes or controls the work of subordinates or employees.
Micromanagement generally has a negative connotation.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Micromanagement&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;micromanage: to manage especially with excessive control or attention to details&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://www.merriam-webster.com/dictionary/micromanage&quot;&gt;Merriam Webster&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To me knowing what tasks someone is working
on and assuring that it is delivered on time is management. Checking how
many emails are sent is micromanagement, checking a detail that is irrelevant unless
your job description is to write and send as many emails as possible.&lt;/p&gt;

&lt;p&gt;Some features in Peak encourage micromanagement even if the automated
tweet when sharing from their website says otherwise.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/micro.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;To me it feels that the solution here would be to stop micromanaging
altogether and not provide an app to make it easier! If, as a manager,
I have the need to interrupt my team every hours to know what they are
doing, I must be doing something wrong.&lt;/p&gt;

&lt;p&gt;There are no perfect solution for this and it’s a really hard subject.
I’m not trying to solve this issue here, there are a lot of smart people
theorizing about it out there. I just want to point out that making it
automated doesn’t make it something else than some kind of less
intrusive micromanagement.&lt;/p&gt;

&lt;h2 id=&quot;still-a-promising-app&quot;&gt;Still a promising app&lt;/h2&gt;

&lt;h3 id=&quot;risks&quot;&gt;Risks&lt;/h3&gt;

&lt;p&gt;It seems that Peak has a lot of potential, but the team working on it should
take all this into consideration. I’m sure that they mean well and,
in an ideal world, people will take the metrics as they
are - possibly flawed outputs of a complex process aimed at creating
value for the company. No one will consider the “red employee” factor.
No one will game the system.&lt;/p&gt;

&lt;p&gt;Except we’re not in a perfect world.&lt;/p&gt;

&lt;p&gt;Managers will abuse it, employees will game it.&lt;/p&gt;

&lt;p&gt;Of course this will not happen everywhere! There are some great companies that know how
to deal with these subjects, but it’s very likely that some will use this for “evil”.&lt;/p&gt;

&lt;h3 id=&quot;what-id-do&quot;&gt;What I’d do&lt;/h3&gt;

&lt;p&gt;I’m sure they have thought about it, and I’m not a product guy. But I
don’t like criticizing without giving ideas on how to improve the
situation.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Get rid of employee ranking, nothing good can come out of it&lt;/li&gt;
  &lt;li&gt;Remove Gmail integration, this is not relevant&lt;/li&gt;
  &lt;li&gt;Hour tracking should not judge people (red vs green) and should just be a neutral data&lt;/li&gt;
  &lt;li&gt;Make some things active, like allowing the employees to input what they are working on&lt;/li&gt;
  &lt;li&gt;Do not track hours if you don’t bill by the hour (with harvest for instance)&lt;/li&gt;
  &lt;li&gt;Keep up the good work with the UI. Loving it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;hopes&quot;&gt;Hopes&lt;/h3&gt;

&lt;p&gt;I really hope that people will use this product for good (helping companies
create value and protect employees from interruptions) and not evil
(micromanagement).&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Enough With The Trolls</title>
     <link href="https://marcgg.com/blog/2013/11/05/enough-with-the-language-trolls/"/>
     <updated>2013-11-05T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2013/11/05/enough-with-the-language-trolls</id>
     <content type="html">
       &lt;p&gt;Every week I see people arguing over languages, frameworks, hosting
solutions, architectural patterns… and every week it’s pointless.
I cringe when, interviewing candidates for a Rails developer position,
I hear something along the lines of “Hey, PHP is so bad, AMIRIGHT? *nudge*
*nudge*”. So much energy wasted into this.&lt;/p&gt;

&lt;p&gt;Because of that I felt like I should just write a post I can link people to when
they start talking about this, so here we go!&lt;/p&gt;

&lt;h2 id=&quot;a-mean-to-an-end&quot;&gt;A Mean To An End&lt;/h2&gt;

&lt;p&gt;The thing to understand is that languages and frameworks are just means
to an end. They are here to help us create software. If they accomplish
this, it’s a success. Everything else is a question of context and preferences.&lt;/p&gt;

&lt;p&gt;It’d be nice if there was a solution clearly superior to every other, with absolutely
no drawbacks whatsoever, but let’s be pragmatic here. Some languages are
slower, have complex syntax, do not scale well, have a small community,
use a lot of memory… so in the end it’s a mater of picking what would
work.&lt;/p&gt;

&lt;div style=&quot;width:560px; margin: auto&quot;&gt;
&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/b2F-DItXtZs?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/b2F-DItXtZs?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;
&lt;/div&gt;

&lt;h2 id=&quot;creating-a-new-product&quot;&gt;Creating A New Product&lt;/h2&gt;

&lt;p&gt;Let’s say I only knew PHP and MySQL and I wanted to create a very simple
website to test out an idea. No need for scalability, maintanability,
performances or even security. Just a simple prototype.&lt;/p&gt;

&lt;p&gt;I would probably use PHP and MySQL and that would be fine, because here the decision
factor is speed and simplicity.At that point I want to build something .
This doesn’t mean that using ElasticSearch wouldn’t be cool or that MySQL is
superior. It’s just a set of tools fitting my needs.&lt;/p&gt;

&lt;p&gt;Fast forward and I got very good feedbacks on the prototype. Maybe then I’d want to
improve on what I already have by refactoring it using a PHP framework like Symfony. I
could also rewrite it using NodeJS if I expect a lot of concurency.
Maybe if I met a really good Go developer willing to help me on this
project I could use Go.&lt;/p&gt;

&lt;p&gt;What I’m trying to say here is that there is no “NODEJS IS BETTER THAN PHP SO USE THIS,
YOU ARE THE WORST PERSON IF YOU USE THIS AND SHOULD BE ASHAMED”.&lt;/p&gt;

&lt;p&gt;If my project fails because I spent 2 months learning NodeJS, then NodeJS
was a bad choice. If my whole team is depressed because I enforced
using Rails instead of Django, then Rails was a bad choice.&lt;/p&gt;

&lt;h2 id=&quot;the-side-project&quot;&gt;The Side Project&lt;/h2&gt;

&lt;p&gt;There is never a definitive answer to what technology one should use, just different situations.&lt;/p&gt;

&lt;p&gt;If I start a &lt;a href=&quot;/blog/2012/01/09/start-working-on-your-side-project/&quot;&gt;side project&lt;/a&gt; to
learn cool new stuff, then it wouldn’t make sense to use what I already know.
In this case my whole technical knowledge is a bad choice for this project.&lt;/p&gt;

&lt;p&gt;This is simply because the goal here is different, so my choices need to
adapt.&lt;/p&gt;

&lt;h2 id=&quot;to-sum-it-up&quot;&gt;To Sum It Up&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;Don't define yourself by hating other things. Define yourself by building cool stuff.&quot;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://twitter.com/steveklabnik&quot;&gt;Steve Klabnik&lt;/a&gt; at &lt;a href=&quot;http://www.dotrb.eu/&quot;&gt;DotRB&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Mixing Languages</title>
     <link href="https://marcgg.com/blog/2013/10/29/mixing-languages/"/>
     <updated>2013-10-29T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2013/10/29/mixing-languages</id>
     <content type="html">
       &lt;p&gt;I was born in France and lived there for the most part of my life. I have
the &lt;a href=&quot;http://bit.ly/17UlpMx&quot;&gt;frenchiest of names&lt;/a&gt;.
I’m not big into striped shirts, but I could easily switch to a cheese-only
diet if given the opportunity.&lt;/p&gt;

&lt;p&gt;It’s also fair to say that I love the French language.
I think that using it well enough can produce
&lt;a href=&quot;http://www.amazon.fr/L%C3%A9tranger-Albert-Camus/dp/2070360024&quot;&gt;amazing novels&lt;/a&gt;,
&lt;a href=&quot;http://www.youtube.com/watch?v=rslShTbqNbo&quot;&gt;songs&lt;/a&gt;
or just cool sounding conversations.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/french.png&quot; alt=&quot;Actual Google results&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;image_notes&quot;&gt;Actual Google Search results page&lt;/div&gt;

&lt;p&gt;A few years back I went to live in the US. At that point I knew some
English from school, but never actually used it in real life. Also, my accent was
terrible. After a while I got better at it even if I never
got the accent quite down. However to my amusement I could pass for American
with French tourists asking for directions in Times Square.&lt;/p&gt;

&lt;p&gt;So really I think that the English language is very interesting as well. I wouldn’t say that I
love it as much as I love French, but it’s a close second. We can say
that it’s because I’m annoyed about the fact that I can’t be perfectly billingual.&lt;/p&gt;

&lt;p&gt;For the record, I got back to Paris in 2009 so I’ve lost a lot, so
please bear with my written English on this one. I’m sure talking about
mixing languages while writing poorly constructed sentences will sound
silly at some point, but hey.&lt;/p&gt;

&lt;h2 id=&quot;mixing&quot;&gt;Mixing&lt;/h2&gt;

&lt;p&gt;The thing is during my time abroad, I started to mix the two languages in my
head. In some cases a word in French would come up, sometimes in
English, and then, depending on the situation, I would translate it
approprietly.&lt;/p&gt;

&lt;p&gt;I’ve been told that you know you can speak a language when you dream in that language.
To be honest, while I can sometimes remember the subject of my dreams, I never know what language is being spoken.
Same goes for articles that I read online, I’ll remember the facts but
often forget if I read them in French or not. Of course right after I’ll
still have some memory of it, but a few months later some information would
stick but the language behind it gets blurry if there wasn’t some
memorable quote in the text.&lt;/p&gt;

&lt;p&gt;While staying in New York I met people that would speak English but also
some French. This was really a lot of fun since we could just switch
back and forth between languages as we felt, picking the most fitting
words to communicate. The novelty of doing that wearing off, I realized that it was
really the perfect way to go for me. In each languages there are
concepts that you can’t express in the other… or at least not a
specifically.&lt;/p&gt;

&lt;p&gt;For instance let’s take “whimsical”. &lt;a href=&quot;http://www.wordreference.com/enfr/whimsical&quot;&gt;WordReference&lt;/a&gt;
would say “Fantasque”, “Capricieux” or “Saugrenu”. To me it doesn’t
work, this is not what “whimsical” is at all. There is just no way to
capture the essence of this word in French.&lt;/p&gt;

&lt;h2 id=&quot;translating&quot;&gt;Translating&lt;/h2&gt;

&lt;p&gt;Here is a conversation I see myself having all the time:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;« Hey! How do you translate X in French/English ?&lt;/p&gt;

  &lt;p&gt;- You don’t !»&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And I’m not just being annoying. This is quite true that you wouldn’t say
some things this way. Languages tend to lead you in a direction when it comes to
constructing sentences and sometimes even your reflection changes when
thinking with a given language. If you write something in X and translate to Y,
you lose the soul of the text.&lt;/p&gt;

&lt;p&gt;Obviously you can do some clever translating, but without moving huge blocks
of ideas around, it won’t sound good.&lt;/p&gt;

&lt;h2 id=&quot;back-in-france&quot;&gt;Back In France&lt;/h2&gt;

&lt;p&gt;When I got back to France I kept this habit going with some friends
of mine that could follow such a way of speaking.&lt;/p&gt;

&lt;p&gt;The problem was with the others. When unable to use English to complement my French, I would end
up stumbling on words, losing track of what I wanted to do… and
overall feeling like I couldn’t even speak French! Sometimes it could
get annoying because France loves to make fun of people mixing
languages. The perception of such a person is either that the guy is really smug or just an idiot.&lt;/p&gt;

&lt;p&gt;As time passed, my English got worse since I didn’t get any practice, but
I still had this mixing issue. This felt weird because I didn’t get to speak
English everyday anymore, but if you look at my situation it makes
sense. My job as a developer requires reading a lot of documentation
always written in English with terms that don’t even exist in French.
Once this is done I get to write code, bug reports, emails… all that in English.&lt;/p&gt;

&lt;p&gt;While I like listening to
&lt;a href=&quot;http://www.europe1.fr/MediaCenter/Emissions/Au-coeur-de-l-histoire/&quot;&gt;podcasts&lt;/a&gt;
in &lt;a href=&quot;http://www.franceculture.fr/emission-les-nouveaux-chemins-de-la-connaissance&quot;&gt;French&lt;/a&gt;,
I mostly find &lt;a href=&quot;http://www.radiolab.org/&quot;&gt;my&lt;/a&gt; &lt;a href=&quot;http://www.thisamericanlife.org/&quot;&gt;content&lt;/a&gt;
&lt;a href=&quot;http://continuecast.podomatic.com/&quot;&gt;in&lt;/a&gt; &lt;a href=&quot;http://themoth.org/about/programs/the-moth-podcast&quot;&gt;English&lt;/a&gt;.
Same goes for reading, I like novels written in French, but most of the
blog posts or in-depth articles that I read will be in English. Same
logic goes for movies, shows, songs…&lt;/p&gt;

&lt;p&gt;All this seems to keep the confusion alive, even if I don’t speak the
language.&lt;/p&gt;

&lt;h2 id=&quot;who-cares&quot;&gt;Who Cares&lt;/h2&gt;

&lt;p&gt;In the end this isn’t a real problem for me. I’d much rather be
understood by more people than be perfectly eloquent for less people.&lt;/p&gt;

&lt;p&gt;It has downsides, but it often consists in me having to repeat words again
in some situations. I manage to mostly use French words and only add English
when there is no good translation available. If the person I’m talking
to is not confortable with this I can shift to speaking only French -
I’ll just take a couple more seconds to translate in some cases.&lt;/p&gt;

&lt;p&gt;Maybe sometimes people will think that I’m an idiot, or that I’m smug… but I don’t mind.&lt;/p&gt;

&lt;p&gt;I grew to like the process of finding the best way to say something from two
sets of words instead of one. It allows me to expand the way I can
express a concept, convey an idea or construct a sentence.&lt;/p&gt;

&lt;p&gt;… and if they get to do it in &lt;a href=&quot;http://www.youtube.com/watch?v=crXVMTHZI1Q&quot;&gt;Quebec&lt;/a&gt;
I don’t see why I couldn’t either!&lt;/p&gt;

       
     </content>
   </entry>
  
 
  
   <entry>
     <title>My First Impressions of AppGyver's Steroids.js</title>
     <link href="https://marcgg.com/blog/2013/08/29/appgyver-steroids-iphone-hybrid-javascript/"/>
     <updated>2013-08-29T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2013/08/29/appgyver-steroids-iphone-hybrid-javascript</id>
     <content type="html">
       &lt;p&gt;*&lt;strong&gt;Update 9 April 2014&lt;/strong&gt;: Since this post, I released a &lt;a href=&quot;http://liffapp.io&quot;&gt;quantified self app&lt;/a&gt;
using SteroidsJs and
wrote another article with &lt;a href=&quot;/blog/2014/04/09/phonegap-steroids-hybrid-native-app-tips/&quot;&gt;tips &amp;amp; tricks to know when building a
Steroids.js app&lt;/a&gt; (or any hybrid app really).
300ms delay, overscroll, text rendering, 1px borders, local storage, performances, i18n … it’s all there!*&lt;/p&gt;

&lt;p&gt;As I wrote before, I like the idea of developing mobile applications. I
don’t plan to focus exclusively on it, but having an iPhone app as a pet
project seems pretty cool and creating something for Android could be
interesting as well in the future.&lt;/p&gt;

&lt;p&gt;The problem is that, like a lot of people, I don’t enjoy the
experience of working with Objective C
and XCode. I thought I found a solution with &lt;a href=&quot;http://www.rubymotion.com/&quot;&gt;RubyMotion&lt;/a&gt;,
I even &lt;a href=&quot;/blog/2012/10/22/custom-slider-ios-rubymotion/&quot;&gt;wrote about it&lt;/a&gt;…
but I was mistaken. While RubyMotion is a great project, it’s not for me.&lt;/p&gt;

&lt;p&gt;Yes you get to write Ruby code, but that’s pretty much it. You still
have to learn about the SDK to even start to create something simple.
This can be perfectly fine for some with more experience or wanting to
get experience with the iOS SDK, but I just want to build something.
Overall it felt like using Ruby just complexified development for me. I couldn’t
use code snippets or the main iPhone resources available, and RubyMotion lacked
documentation and tutorials. I got something done, but it wasn’t good enough and I
never released anything.&lt;/p&gt;

&lt;p&gt;I tried again a couple of months later with an idea more simple: create a web view wrapper using
RubyMotion and do everything inside a single page HTML 5 app. Sadly the
lack of native UI made everything feel a bit off, so I scrapped that as well.
I thought about using &lt;a href=&quot;http://phonegap.com/&quot;&gt;PhoneGap&lt;/a&gt;
but I figured that the app would end up with the same problem.&lt;/p&gt;

&lt;p&gt;Fast forward 6 months and I read that AppGyver released
&lt;a href=&quot;http://www.appgyver.com/steroids&quot;&gt;Steroids.js&lt;/a&gt;, an solution
promising to
“&lt;a href=&quot;http://techcrunch.com/2013/08/20/steroids-js-bridges-the-performance-gap-between-phonegap-and-native-apps-by-using-native-ui-components-and-animations/&quot;&gt;Bridge The Performance Gap Between PhoneGap And Native Apps By Using Native UI Components And Animations&lt;/a&gt;”.
I immediatly thought that it was what I wanted! The next day AppGyver
announced that Steroids would be
&lt;a href=&quot;http://appgyver.blogspot.fr/2013/08/steroids-is-now-free-for-everyone.html&quot;&gt;free for everyone&lt;/a&gt;,
so I decided to give it a try and write about it here.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/steroids.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Before reading more, please take this article as it is: feedback on this new solution to create mobile apps.
I’m not trying to  educate anyone on how to do things or evangelize. I
only played with it for a few days and haven’t put anything in
production using Steroids. I also know I’m making a lot of mistakes because, while
I’m a decent web developer, I’m not really a great mobile developer.&lt;/p&gt;

&lt;p&gt;Alright.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;AppGiver provides a pretty good documentation. It’s far from complete, but
what is there is well written and very clear. To set my development
environment I followed their &lt;a href=&quot;http://academy.appgyver.com/courses/2/lessons/32&quot;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Overall everything went smoothly aside from a couple of gotchas very
easy to figure out.&lt;/p&gt;

&lt;p&gt;For instance Steroids uses an older version of node.js so I had to set up &lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;nvm&lt;/a&gt;
in order to get it to run. The thing is that nvm creates a
.bash_profile, but since I use &lt;a href=&quot;http://www.zsh.org/&quot;&gt;zsh&lt;/a&gt; it wouldn’t pick up the correct path
automatically as promised. Moving the concerned code to .zshrc fixed
that.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; -s /Users/marcgg/.nvm/nvm.sh &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; . /Users/marcgg/.nvm/nvm.sh &lt;span class=&quot;c&quot;&gt;# This loads NVM&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;nvm requires that you specify the version you need in order for you to
access the steroids command. It’s similar to what rvm does, but you still have to think about it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;nvm use 0.8.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;first-impression&quot;&gt;First Impression&lt;/h2&gt;

&lt;p&gt;After completing the installation, I executed the script to scaffold a new application,
downloaded the scanner app, started the application, scanned the QR code and …
Wow! It’s really neat!
The application ran on my iPhone just a few minutes after starting
working.&lt;/p&gt;

&lt;p&gt;By the way, if you run the Steroids connect script with the watch option it will reload the app
automatically on every device connected for maximum effect.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;steroids connect --watch&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;organizing-files&quot;&gt;Organizing Files&lt;/h2&gt;

&lt;p&gt;Right away you don’t really get a full structured project.
To do so you have to run some generators.
The default approach is to give you free
choice over what you want to do about file organisation. Personnally I
would have prefered it was the other way around, giving me the structure
but allowing me to remove it… or maybe an option in the scaffolding
script.&lt;/p&gt;

&lt;h2 id=&quot;building-the-ui&quot;&gt;Building The UI&lt;/h2&gt;

&lt;h3 id=&quot;drawer&quot;&gt;Drawer&lt;/h3&gt;

&lt;p&gt;Steroids comes with a very cool “native” Drawer, meaning that it will
display a webview on the side of your app with a native animation. The
&lt;a href=&quot;http://academy.appgyver.com/courses/4/lessons/44&quot;&gt;tutorial&lt;/a&gt; explaining
that got me excited so I decided that my app would have a drawer!&lt;/p&gt;

&lt;p&gt;Getting it to work was almost as simple as going:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;drawer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/views/drawer/show.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;openDrawer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And then create a webview with a link to open it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ontouchend=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;openDrawer()&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Open&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Doing this will work, but you’d prefer to have a gesture to open and
close the drawer. This is handled by Steroids as well, but this
breaks gestures inside your webview. It’s also a bit more complicated to
have the drawer on some screens and not others.&lt;/p&gt;

&lt;p&gt;After a few hours playing with it and talking with
&lt;a href=&quot;http://twitter.com/jeclic&quot;&gt;a real iOS developer&lt;/a&gt;
(“you have a drawer for your app with 4 screens???”) I decided that it wasn’t really the
UI I needed for this project.&lt;/p&gt;

&lt;h3 id=&quot;natives-navs--tabs&quot;&gt;Natives Navs &amp;amp; Tabs&lt;/h3&gt;

&lt;p&gt;The next day I dropped everything and went for a more classical
approach with tabs at the bottom and a nav bar up top. It turned out it was way simpler and
actually pretty straightforward to do with Steroids.&lt;/p&gt;

&lt;p&gt;Adding the following in a controller gives you a nav bar:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;navigationBar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;My Nav Bar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This added in the config gives you a tab menu:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statusBar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tabBar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tabs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Fun&quot;&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;icons/myicon@2x.png&quot;&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost/views/fun/have\_it.html&quot;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Excitement&quot;&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;icons/myothericon@2x.png&quot;&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost/views/excitement/amazing.html&quot;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You then get access to ways to customize colors for everything as
explained &lt;a href=&quot;http://academy.appgyver.com/courses/4/lessons/50&quot;&gt;here&lt;/a&gt;,
and… tadaaaa:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/app_steroids.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;The text displayed is contained in the have_it.html file placed in the
project.&lt;/p&gt;

&lt;p&gt;It is really simple and, even if this was written with javascript, it
looks native. The result feels really right and it didn’t take long to
create.&lt;/p&gt;

&lt;p&gt;There are some limits to this. For instance, while you can add buttons
in the nav bar, you can’t add icons yet. I’m sure they will improve on
it, but for customization you don’t have as much options as going full
native.&lt;/p&gt;

&lt;h3 id=&quot;login-modal&quot;&gt;Login Modal&lt;/h3&gt;

&lt;p&gt;The application I’m building requires that you login. At first I wanted
to have two different webviews and shift between disconnected and
connected mode, but it got complicated because of the tab menu… so in
the end I just put a modal window that pops up when the user is not
logged in. It’s not perfect but it gets the job done for now.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;../views/login/show.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hiding it is pretty simple as well:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;the-layer-stack&quot;&gt;The Layer Stack&lt;/h3&gt;

&lt;p&gt;A cool feature provided by Steroids is the layer stack.&lt;/p&gt;

&lt;p&gt;This gives you a navigation between independent webviews within your
application. You just display a single HTML page and can organize all
your files into a tree structure in a pretty straightforward fashion.
Steroids also handles adding and removing views so that it feels native.&lt;/p&gt;

&lt;p&gt;They explain it better than me in their tutorials,
&lt;a href=&quot;http://academy.appgyver.com/courses/15/lessons/10&quot;&gt;Enhancing Your App with Native UI&lt;/a&gt;
and
&lt;a href=&quot;http://academy.appgyver.com/courses/4/lessons/12&quot;&gt;Layer stack&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;some-random-features&quot;&gt;Some Random Features&lt;/h2&gt;

&lt;h3 id=&quot;session&quot;&gt;Session&lt;/h3&gt;

&lt;p&gt;I needed to have some kind of session. I knew about local storage but
wasn’t sure how to go about it, so I quickly hacked something based on
cookies.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;setSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createCookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my_session&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eraseCookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my_session&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// And so on ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It works well, but I don’t think this is the best way to go.&lt;/p&gt;

&lt;h3 id=&quot;calling-external-api&quot;&gt;Calling External API&lt;/h3&gt;

&lt;p&gt;My application will work with an API that I am also developing.
Overall it’s just like developing a website: you get jQuery or whatever
library you want and make calls and display the result on the page.&lt;/p&gt;

&lt;p&gt;It might seem obvious, but it is still good to mention that the API will need to accept
&lt;a href=&quot;http://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;cross-origin resource sharing&lt;/a&gt;
for the calls to work.&lt;/p&gt;

&lt;p&gt;I use Rails, and the quick way to do that was to use the
&lt;a href=&quot;https://github.com/cyu/rack-cors&quot;&gt;rack-cors gem&lt;/a&gt;
and set it up as such:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;middleware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Cors&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;origins&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'*'&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;headers: :any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;methods: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;workflow&quot;&gt;Workflow&lt;/h2&gt;

&lt;h3 id=&quot;the-scanner-app&quot;&gt;The Scanner App&lt;/h3&gt;

&lt;p&gt;You can download an application on the
&lt;a href=&quot;https://itunes.apple.com/us/app/appgyver-scanner/id575076515?mt=8&quot;&gt;appstore&lt;/a&gt;,
scan a QR code with it, and it will take you straight to your application. This
is great to show previews to people and iterate quickly and saves time
compared to solution like TestFlight that requires you to upload a
build.&lt;/p&gt;

&lt;p&gt;Of course it has limitation as your app runs inside the scanner
application, but in some cases it can be enought if it’s just about
displaying the latest modifications, checking the design or proofreading
the wording.&lt;/p&gt;

&lt;h3 id=&quot;creating-a-build&quot;&gt;Creating a Build&lt;/h3&gt;

&lt;p&gt;AppGyver provides a solution to build in the cloud. You need to spend
some time setting it up, but once it’s done a new build can be scheduled
in the click of a button.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/cloudbuild.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;This works fine, but still needs some polishing, mainly on ways to get an
ETA for the build. Right now I’ve seen build times varying between 12
hours and a couple of minutes. Apparently
&lt;a href=&quot;http://forums.appgyver.com/#!/steroids#how-long-does-a-adhoc-build&quot;&gt;it should be better moving forward&lt;/a&gt;,
so I’ll wait and see.&lt;/p&gt;

&lt;h2 id=&quot;the-documentation--community&quot;&gt;The Documentation &amp;amp; Community&lt;/h2&gt;

&lt;p&gt;The documentation provided by Appgyver is very clean, but could use some
more tutorials and examples. This was to be expected since the project has only been
released very recently.&lt;/p&gt;

&lt;p&gt;It’s worth mentioning that the team is very responsive on
&lt;a href=&quot;https://twitter.com/appgyver&quot;&gt;twitter&lt;/a&gt; or the
&lt;a href=&quot;http://developers.appgyver.com/forums&quot;&gt;forums&lt;/a&gt;. For instance I was confused about
customizing colors, so I asked on the site. The next day they would have
put up a new tutorial with concrete examples. Pretty sweet.&lt;/p&gt;

&lt;p&gt;The community is small right now, and looking online for documentation
or blog posts will yield absolutely no results. Hopefully this will
improve.&lt;/p&gt;

&lt;h2 id=&quot;wrapping-it-up&quot;&gt;Wrapping It Up&lt;/h2&gt;

&lt;p&gt;I think that this is a very interesting project so I will keep on
working with Steroids to get as far as I can creating my app. You can
see that the team put a lot of work into it and the product feels right.&lt;/p&gt;

&lt;p&gt;The next steps on my part is to stop playing around and actually start developing something more concrete.
I’m also waiting for some features that are supposed to be in the roadmap,
such as icons in nav bar or iOS 7 native UI.&lt;/p&gt;

&lt;p&gt;*&lt;strong&gt;2014 Update&lt;/strong&gt;: Since this, I’ve released an application using Steroids.js, it’s a &lt;a href=&quot;http://liffapp.io&quot;&gt;quantified self application
to track your day&lt;/a&gt;. You can check it out &lt;a href=&quot;https://itunes.apple.com/en/app/liff-understand-your-life/id834944345&quot;&gt;on the appstore&lt;/a&gt;!*&lt;/p&gt;

&lt;p&gt;If you have any remarks, I’ll be happy to hear them in the comments. For
questions, I’m not sure to be able to answer all of them - but I’ll try!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>J'ai Passé Un Deuxième Bac. Pour Voir.</title>
     <link href="https://marcgg.com/blog/2013/07/09/passer-deuxieme-bac/"/>
     <updated>2013-07-09T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2013/07/09/passer-deuxieme-bac</id>
     <content type="html">
       &lt;p&gt;J’ai obtenu mon baccalauréat scientifique en 2004. Malgré cela, ces deux dernières années j’ai mis un peu de temps de côté pour passer mon bac L en candidat libre.&lt;/p&gt;

&lt;p&gt;Cet article relate cette petite aventure. Je donnerai les différentes étapes par lesquelles je suis passé ainsi que toutes mes notes - glorieuses ou non.&lt;/p&gt;

&lt;h2 id=&quot;la-motivation&quot;&gt;La motivation&lt;/h2&gt;

&lt;p&gt;J’ai aujourd’hui donc mon Bac S en poche, cependant à l’époque j’avais hésité avec la possibilité de faire un bac L. Il faut dire que j’ai toujours eu un attrait pour le côté littéraire des choses, mais comme mon objectif était de travailler dans l’informatique, le S s’est imposé. De plus le bac S m’a toujours  été présenté comme la voie royale, celle qui ouvre le plus de portes.&lt;/p&gt;

&lt;p&gt;Un jour je finis par me motiver à tenter de passer le bac à nouveau. Juste comme ça, pour voir.&lt;/p&gt;

&lt;p&gt;Cette fois ci j’ai 25 ans, j’ai fini mes études depuis quelques années et je n’ai aucune envie de changer de carrière. Je m’amuse même plutôt bien à écrire &lt;a href=&quot;https://marcgg.com/blog/2013/01/14/html5-nodejs-websockets-games-learning/&quot;&gt;des lignes de code&lt;/a&gt;, mais je me demande vraiment si j’ai les capacités pour réussir l’épreuve sans passer des heures à bachoter et sans avoir à m’inscrire au &lt;a href=&quot;http://www.cned.fr/&quot;&gt;CNED&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Je finis donc par m’inscrire, ce qui se s’avéra être beaucoup plus simple que prévu. &lt;a href=&quot;http://ocean.siec.education.fr/&quot;&gt;Un formulaire en ligne&lt;/a&gt; et me voila
candidat individuel au Bac L, spécialité Anglais.&lt;/p&gt;

&lt;p&gt;Je devrais donc passer les épreuves sur une période de deux ans, la première séance proposant le français et les sciences, le reste venant l’année d’après. L’objectif à ce moment là était de voir si j’arriverais à m’en sortir lors des épreuves anticipées. Si je partais avec des points de retard je comptais arrêter les frais, par contre, si tout se passait bien, je continuerais jusqu’au bout.&lt;/p&gt;

&lt;p&gt;Mes deux plus grosses questions étaient: vais-je l’avoir et combien aurais-je en philo ? J’avais été un peu vexé de n’avoir eu que 10/20 dans cette matière lors de mon Bac S et j’espèrais faire mieux cette fois-ci.&lt;/p&gt;

&lt;h2 id=&quot;le-dbut-des-rvisions&quot;&gt;Le début des révisions&lt;/h2&gt;

&lt;p&gt;Après l’inscription, j’oublie un peu mon projet, et tout d’un coup juin - et donc les épreuves - s’approche dangereusement.&lt;/p&gt;

&lt;p&gt;N’étant plus lycéen je me retrouve avec très peu de temps pour réviser car mon temps est passé entre travail et autres considérations de la vie active. Malgré ça, j’arrive tout de même à potasser le programme entier de science. Ce dernier est d’ailleurs vraiment très différent de ce que j’avais pu voir en S à l’époque. Pour ce qui est du français, l’écrit n’est pas un problème: je prendrais l’écriture d’invention quoi qu’il arrive, ce qui me permet de ne pas vraiment travailler et viser une improvisation sur le moment.&lt;/p&gt;

&lt;p&gt;C’est au niveau de l’oral que les problèmes commencent. Le programme spécifie que l’élève doit venir avec une suite de texte &lt;em&gt;étudiés en cours&lt;/em&gt;. Je n’ai pas eu de cours, je n’ai donc pas de textes - duh. Il est très difficile de trouver quels types de documents sont valides, je me retrouve donc à créer un dossier frankenstein fait de morceaux d’anabac, de souvenirs de
2004 et de mes lectures personnelles.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/anabacs.jpg&quot; alt=&quot;Anabacs&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;les-preuves-anticipes&quot;&gt;Les épreuves anticipées&lt;/h2&gt;

&lt;p&gt;Je ne m’y attendais pas du tout, mais les épreuves se déroulaient toutes dans un lycée. Sans vraiment de raisons je supposais être avec d’autres candidats individuels dans un centre d’examen spécifique.&lt;/p&gt;

&lt;p&gt;Me voila donc à gratter ma copie double avec des ados qui ont 10
ans de moins que moi! On me regarde un peu avec surprise, la barbe et les tatouages n’aidant pas.&lt;/p&gt;

&lt;p&gt;L’oral de français est assez surprenant aussi bien pour moi que pour l’examinatrice. Déjà les documents que j’ai choisi sont assez approximatifs… mais comme  j’ai vu dans une circulaire que si les documents fournis ne sont pas suffisants l’examinateur peut en donner de nouveaux, je propose l’idée. Heuresement je dois faire peine à voir et elle me laisse
passer sur un livre de Camus… le problème est que je l’ai lu
il y a plus de 5 ans et je ne m’en rappelle plus très bien. Je fais donc une présentation plus que bancale, oubliant la moitié de ce que je dois faire.&lt;/p&gt;

&lt;p&gt;Une fois les 20 minutes écoulées, l’examinatrice me demande sur un ton plus informel pourquoi je passe le bac en candidat libre.
Vu la performance que j’ai pu donner j’imagine qu’elle pense que
je ne l’ai pas eu! En tout cas elle parait fort surprise
quand je lui explique les vraies raisons. Elle me pose énormément de questions, bien plus interessée que quand je démontrais le parallèle entre &lt;em&gt;La Peste&lt;/em&gt; et le nazisme. Notre discussion se conclue par l’examinatrice m’expliquant qu’en 15 ans de correction de bac elle n’avait jamais vu ça - mais que ça n’influerait pas sur ma note. Dommage.&lt;/p&gt;

&lt;p&gt;Après quelques semaines d’attente, les résultats tombent et je m’en sors pas trop mal avec 15 au français écrit, 12 au français oral et 12 en sciences. J’ai donc atteint mon objectif et je suis obligé de continuer l’année prochaine avec la suite des épreuves.&lt;/p&gt;

&lt;h2 id=&quot;la-suite-des-rvisions&quot;&gt;La suite des révisions&lt;/h2&gt;

&lt;p&gt;La deuxième vague d’épreuves s’annonce être bien plus compliquée que la première. Tout d’abord parce qu’il y en a bien plus, mais également parce que mon emploi du temps est bien plus chargé. Je viens de changer de travail en début d’année et j’ai un voyage au Canada prévu juste avant le début des épreuves orales.&lt;/p&gt;

&lt;p&gt;Comme la première année je prépare un plan de bataille par
matière, mais je me rend compte que je ne pourrais pas tout réviser. En effet le programme est incroyablement vaste. Par exemple la géographie parle aussi bien de la mondialisation que de Mumbai ou bien des Caraïbes. L’histoire quant à elle traite de sujets obscurs comme le socialisme en Allemagne. La littérature se penche quant à elle sur une pièce de théâtre qui a énormément de liens avec la situation politique en France durant la révolution de juillet…&lt;/p&gt;

&lt;p&gt;Il y a également beaucoup de choses à apprendre par coeur, comme les cartes de géographie ou les dates d’histoire. Sachant très bien que je n’arriverais pas à mener tous ces combats de front, je décide de faire l’impasse sur énormément de points et me concentrer sur les grandes lignes du programme.&lt;/p&gt;

&lt;p&gt;Comme pour moi la philosophie est non seulement ce qui m’intéresse le plus dans ce bac, mais également ce qui déterminera si je l’obtient ou non du fait de son coefficient très élevé, j’accorde le plus clair de mon temps de révision sur cette matière. Hormis les fiches de révision que j’ai pu
acheter, je trouve quelques podcasts spécialisés comme &lt;a href=&quot;http://www.sfr.com/les-mondes-numeriques/sfr-player/05232012-1009-tendance-bob-radio-les-revisions-dans-la-poche&quot;&gt;Bob Radio&lt;/a&gt; ou bien des émissions de France Culture comme
&lt;a href=&quot;http://www.franceculture.fr/emission-les-nouveaux-chemins-de-la-connaissance&quot;&gt;les nouveaux chemins de la connaissance&lt;/a&gt; que j’écoute en boucle dans le métro pour me mettre dans le bain.&lt;/p&gt;

&lt;h2 id=&quot;les-surprises&quot;&gt;Les surprises&lt;/h2&gt;

&lt;p&gt;A mon grand découragement, je découvre avec ma convocation que la LV2 possède un oral. Je n’ai pas parlé un mot d’espagnol depuis des années et, même à l’époque, j’étais plutôt médiocre. Je peux sauver les meubles à l’écrit, mais m’envoyer passer l’épreuve orale est simplement du suicide. Je me lance donc dans des révisions avec &lt;a href=&quot;http://www.duolingo.com/&quot;&gt;duolingo&lt;/a&gt;, mais sans grand espoir.&lt;/p&gt;

&lt;p&gt;L’autre petite blague est que je suis sensé passer les épreuves de sport, c’est à dire le badminton et le 3x500m. Ouch. Bien sûr je pourrais me faire dispenser, mais ça serait tricher. Je me retrouve donc à recruter un ami et, deux semaines avant l’épreuve, je dois louer un terrain pour voir si je me rappelle comment jouer avec des raquettes.&lt;/p&gt;

&lt;p&gt;Enfin revient l’horrible &lt;em&gt;dossier préparé en cours&lt;/em&gt; pour les oraux d’espagnol et d’anglais. Je dois donc concocter à nouveau une suite de documents en espérant que les examinateurs ne soient pas trop regardants sur la cohérence de ce que je produis.&lt;/p&gt;

&lt;h2 id=&quot;les-preuves&quot;&gt;Les épreuves&lt;/h2&gt;

&lt;p&gt;Les épreuves de 2013 commencèrent par le sport, qui fut un grand moment de solitude. Imaginez un groupe d’ados de 17-18 ans qui se sont entraînés toute l’année pour l’épreuve, et moi qui sais à peine ce qu’il doit se passer.&lt;/p&gt;

&lt;p&gt;Le 3x500 est une catastrophe car même si je ne suis pas complètement rouillé, c’est une distance assez batarde car rapide mais également longue. Pendant la course je trouve quelqu’un qui a l’air d’avoir les mêmes difficultés que moi, ce qui me rassure. C’est donc avec une grande détresse quand je le vois vomir et à moitié tomber dans les pommes à la fin du premier 500m… Par contre le badmiton fut une réussite, j’imagine que ces années à m’entraîner aux raquettes de plage ont enfin payé.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/stade.jpg&quot; alt=&quot;Stade&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Les oraux de langue vivantes furent littéralement une épreuve.
J’étais parti au Canada et mon avion revenait lundi matin, ce qui coïncidait avec mon oral d’espagnol… &lt;em&gt;lundi après midi&lt;/em&gt;. C’est donc au saut de l’avion, épuisé et jet laggué, que je me
suis présenté pour expliquer des textes que je ne comprenais qu’à moitié dans une langue que je ne parlais pas. Magique.&lt;/p&gt;

&lt;p&gt;Le reste des épreuves se déroulaient dans un lycée du 16ème arrondissement, ce qui a permis de réaliser l’incroyable différence d’environnement avec le lycée de banlieue dans lequel j’ai passé 3 années. Nettement plus charmant.&lt;/p&gt;

&lt;p&gt;C’est dans ce lycée où pour la première fois j’ai pu avoir la satisfaction de ne pas être le plus vieux. En effet un autre candidat libre qui semblait avoir un petit début de quarantaine se trouvait vers le début des rangées de table. C’était réconfortant car pendant toute la durée des épreuves les gens croyaient que j’étais un surveillant et pas un élève.&lt;/p&gt;

&lt;p&gt;Sur cette deuxième série, j’ai eu beaucoup de chance. En effet l’épreuve d’histoire géo est tombée sur des sujets que je connaissais relativement bien juste par mes intérêts personnels: la mondialisation et les différentes visions de l’implication de l’état dans la vie de ses citoyens. L’épreuve d’espagnol était honnêtement &lt;a href=&quot;http://baccalaureat.blog.lemonde.fr/2013/06/20/bac-2013-les-sujets-de-langues-vivantes-trop-faciles/&quot;&gt;beaucoup trop simple&lt;/a&gt;. La moitié des points étaient donnés pour simplement citer le texte, et il y avait même une question à laquelle on pouvait répondre en français!&lt;/p&gt;

&lt;h2 id=&quot;la-philo&quot;&gt;La philo&lt;/h2&gt;

&lt;p&gt;L’épreuve de philosophie était non seulement celle ouvrant la semaine d’hostilités, mais c’est surtout la plus mythique.&lt;/p&gt;

&lt;p&gt;J’ai choisi le sujet “La science se limite-t-elle à constater les faits?” car la deuxième option sur le langage semblait rempli de pièges et que je ne voulais même pas regarder le commentaire de documents… je n’y peux rien, l’épreuve de philo ça sera toujours pour moi répondre à une question un peu obscure pendant 4 heures!&lt;/p&gt;

&lt;p&gt;À la fin de la journée je surveillais les sites de correction en ligne afin de voir si j’avais pris un plan qui collait aux leurs, et à mon plus grand désespoir tous les sites étaient partis dans une autre direction que moi, mettant plus le poids sur le fait que la science doit surtout analyser les faits et pas seulement les constater. Moi de mon côté j’essayais
d’expliquer pourquoi les faits ne sont pas pertinents en rebondissant entre Descartes et les nombres imaginaires.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/sujets.jpg&quot; alt=&quot;Sujets&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;les-rsultats&quot;&gt;Les résultats&lt;/h2&gt;

&lt;p&gt;Pour être honnête, je n’ai pas réellement ressenti de stress pendant les épreuves ou même après. Si je n’étais pas reçu, ça ne changerait absolument rien à ma vie… mais le jour des résultats j’ai eu l’impression d’être en terminale à nouveau. Mine de rien j’avais passé pas mal de temps à faire les démarches, monter les dossiers, réviser… et si c’était pour
rien? J’ai donc hâté le pas pour arriver au lycée qui affichait les résultats.&lt;/p&gt;

&lt;p&gt;Pour rajouter au suspens je me suis trompé de panneau de jury, et j’ai donc passé 2 minutes à chercher désespérément mon nom dans une liste dont j’étais forcément absent. De la joie à l’état pur. Finalement je retrouve mon nom sur la liste des reçus, accolé de la mention Bien! Je mentirais si je disais que ce n’était pas un gros soulagement.&lt;/p&gt;

&lt;p&gt;À partir de là il m’a fallu récupérer le détail de mes notes et je me suis retrouvé à nouveau incrédule: 9 en littérature, 18 en histoire/géo, 17 en anglais, 14 en espagnol, 14 en LELE (littérature étrangère en langue étrangère), 20 en philosophie et 10 en sport.&lt;/p&gt;

&lt;p&gt;Je pense avoir complètement bloqué sur le 20 en philo. J’ai du fixer cette ligne dans le relevé de note, d’abord en supposant m’être trompé de ligne, puis en imaginant que c’était 20 après pondération et que j’avais donc environ 2,8… mais non. Je suis donc sorti calmement entre les lycéens hurlant de joie et ceux pleurant et j’ai effectué une petite danse de la victoire.&lt;/p&gt;

&lt;h2 id=&quot;alors-&quot;&gt;Alors ?&lt;/h2&gt;

&lt;p&gt;Déjà, je ne vais pas le cacher, je suis content que tout soit fini. Revenir à une époque où il me fallait réviser n’était pas un plaisir. Mon mode de vie actuel me laisse peu de temps libre et le remplir ainsi était parfois frustrant. De plus poser des congés pour passer des épreuves était assez contrariant.&lt;/p&gt;

&lt;p&gt;Cependant si c’était à refaire, je le referais avec plaisir. J’ai pu me replonger dans des sujets que j’avais complètement oublié et pu donner une nouvelle chance à la philosophie.
Je me suis d’ailleurs rendu compte à quel point cette matière est difficile à l’âge où les lycéens l’abordent. Je vois bien qu’à 17 ans j’étais incapable de produire le même raisonnement que maintenant, car il suppose plus d’expérience et une culture générale plus solide. C’est d’autant plus vrai pour un élève de Terminale S car la philosophie demande de produire un raisonnement assez proche du raisonnement scientifique classique, mais basé sur un autre groupe de repères et avec une production écrite tout a fait différente. Je comprends donc mieux pourquoi je ne comprenais pas vraiment ce
que l’on attendait de moi.&lt;/p&gt;

&lt;p&gt;Sur ce, je vous laisse. Je dois mettre à jour mon CV pour dérouter tous les futurs recruteurs qui le liront!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/ressmall.jpg&quot; alt=&quot;Résultats&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Why I'm Not Proud To Be French</title>
     <link href="https://marcgg.com/blog/2013/06/24/not-proud-to-be-french/"/>
     <updated>2013-06-24T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2013/06/24/not-proud-to-be-french</id>
     <content type="html">
       &lt;p&gt;A few years back, when I was living in the US, a lot of people asked me if I
were proud of being French. I always found this question very strange and
never knew exactly how to respond without getting into a two hours long
argumentation… because no, I am not proud to be French.
Of course to be fair I have to mention at that point that if I were born
American I wouldn’t be proud of it either.&lt;/p&gt;

&lt;p&gt;So here’s my humble written reflexion that I will redirect people to next
time I’m asked how I feel about my nationality.
Note that I won’t get into the negative aspects of national pride because I think
it’s beside the point. I can get how people are proud of their countries
without being radical nationalists.&lt;/p&gt;

&lt;p&gt;Alright.&lt;/p&gt;

&lt;p&gt;To me being proud of one’s nationality makes very little sense. I’m
usually proud of the things I accomplish or, at the very least, that I helped create. If I
work months on a project that succeeds, obviously I’ll be very proud. If I spend
time helping out a friend and she turns out very successfull, I’ll share
a subset of the pride while being happy for her. Being proud
of where I was born sounds a bit like being proud to be blond, or being
proud to be right handed. It’s a fact about me, true, but it does not
define me and I had no choice in it.&lt;/p&gt;

&lt;p&gt;I can honestly say that I love France and that being French is a good
situation to be in. I’m not necessarily a big fan of
&lt;a href=&quot;http://www.hadopi.fr/&quot;&gt;every aspect of it&lt;/a&gt;,
but it’s a great place to live. I don’t have to pay
ridiculous tuitions for my education, I get a fair share of freedom,
Paris is one of my favorite cities, I can go in most places in Europe
without having to worry about visas and being able to
speak french will make me seem sophisticated and charming abroad.&lt;/p&gt;

&lt;p&gt;It’s pretty cool if you ask me!&lt;/p&gt;

&lt;p&gt;The thing is that, while I can feel glad to be born french, I won’t take any
pride in the mere act of being born that is really a product of pure luck.&lt;/p&gt;

&lt;p&gt;If my country achieved a lot 300 years ago, what does it has to do with
me and why should all of this influence the way I feel? If I start
to think this way, then comes the question of what
events I should take into account to make up my mind about the way
I “live” my nationality.
It’s a hard question because France did great things and was host
of &lt;a href=&quot;http://en.wikipedia.org/wiki/Voltaire&quot;&gt;amazing&lt;/a&gt;
&lt;a href=&quot;http://www.amazon.com/L%C3%A9tranger-Collection-Folio-French-Edition/dp/2070360024&quot;&gt;minds&lt;/a&gt;,
but also had some dark sides, both &lt;a href=&quot;http://en.wikipedia.org/wiki/Vichy_France&quot;&gt;relatively recently&lt;/a&gt;
or &lt;a href=&quot;http://en.wikipedia.org/wiki/Reign_of_Terror&quot;&gt;way back&lt;/a&gt;. I’m sure
it’s a harder one for countries with a harsher history.&lt;/p&gt;

&lt;p&gt;Of course I’m not asking for a clean slate or to forget what happened in
the past as it’s obvious that we be able to look back at
what occurred before and learn from it. I just think that such a gut
feeling as pride (or shame) has no place here.&lt;/p&gt;

&lt;p&gt;There are situations where I could be proud of be a part of my country,
but that would be more the pride of of belonging to a movement I judge
positive or important than something related to my nationality.
To illustrate, if I lived in Canada and the country as a whole, myself included,
did something great, I would have the exact same feeling even though I’m not Canadian.&lt;/p&gt;

&lt;p&gt;To conclude I’ll leave you with a song by Brassens, another one of my
most talented fellow countryman.&lt;/p&gt;

&lt;div style=&quot;width:560px; margin: auto&quot;&gt;
&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/RSJmN-Mg978?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/RSJmN-Mg978?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&lt;/div&gt;

       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Information About Bots &amp; People Clicking a Link</title>
     <link href="https://marcgg.com/blog/2013/05/20/track-link-clicks/"/>
     <updated>2013-05-20T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2013/05/20/track-link-clicks</id>
     <content type="html">
       &lt;p&gt;A couple of days ago I saw
&lt;a href=&quot;http://www.zdnet.com/is-microsoft-reading-your-skype-instant-messages-7000015388/&quot;&gt;articles popping around&lt;/a&gt;
saying that Microsoft
&lt;a href=&quot;http://www.h-online.com/security/news/item/Skype-with-care-Microsoft-is-reading-everything-you-write-1862870.html&quot;&gt;is visiting links posted on Skype&lt;/a&gt;. In my opinion it got a bit blown out of proportion, but I’m
not writing this to discuss the matter.&lt;/p&gt;

&lt;p&gt;The thing is that the first thing that came to me is that it would have
been pretty hard for a regular user to identify such a thing.
This is why I created a very simple project that does just that.
You can create a link by entering a password. Then the site gives you
two links: one to see your access logs, the other to paste around.
If someone clicks the link it saves some info about the user.&lt;/p&gt;

&lt;h2 id=&quot;what-it-looks-like&quot;&gt;What It Looks Like&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/t1.png&quot; alt=&quot;&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/t2.png&quot; alt=&quot;&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/t3.png&quot; alt=&quot;&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;its-not-good---but-it-could-be&quot;&gt;It’s Not Good - But It Could Be&lt;/h2&gt;

&lt;p&gt;Right now it’s only a couple hours of work. As it is, it won’t scale.
This is mainly because I deploy it on heroku and heroku doesn’t provide a good
database solution for free. After 10000 people try it out I’ll run out
of space and the server will go down.&lt;/p&gt;

&lt;p&gt;It also lacks features and needs a better UI.&lt;/p&gt;

&lt;p&gt;I could improve it a bit and open source the code for people to set up on
their own heroku server - or whatever they like. The only thing is that
I don’t really know if there is a point. Web developers can already
easily set this up without my help, and I suspect others to not care about this.&lt;/p&gt;

&lt;p&gt;I also had feedbacks of people saying that it could be used for “evil” as
it gives a very easy way to get the IP and referer of someone… but
again, for anyone with a webserver this is all very basic stuff so I
feel like this won’t be a problem.&lt;/p&gt;

&lt;h2 id=&quot;for-now&quot;&gt;For Now&lt;/h2&gt;

&lt;p&gt;Anyways, for the moment being I’ll put the link out there:
&lt;a href=&quot;http://tracklink.herokuapp.com&quot;&gt;tracklink.herokuapp.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Depending on the feedbacks I’ll get - or don’t get - I’ll decide what to
do with this! Worst case scenario I keep this as a pet project that I
use once in a while when feeling paranoid.&lt;/p&gt;

       
     </content>
   </entry>
  
 
  
   <entry>
     <title>What I Learned While Teaching</title>
     <link href="https://marcgg.com/blog/2013/04/22/what-i-learned-teaching-web/"/>
     <updated>2013-04-22T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2013/04/22/what-i-learned-teaching-web</id>
     <content type="html">
       &lt;p&gt;A few months back I wrote &lt;a href=&quot;/blog/2013/02/04/developers-teach-non-tech-startup/&quot;&gt;an article about how developers should share
their knowledge with others&lt;/a&gt;.
Once it was published I received tons of very positive feedbacks from
both developers and non tech people, some of them even asking what
they should do to learn more about how the web works.&lt;/p&gt;

&lt;p&gt;At the same time I happened to be talking with a &lt;a href=&quot;http://emiland.me/&quot;&gt;friend of mine&lt;/a&gt;
who started giving classes to young entrepreneurs via &lt;a href=&quot;http://leeaarn.com/&quot;&gt;leeaarn&lt;/a&gt;
and it seemed pretty cool.
One thing lead to another and I decided it would be a good experiment to take this
blog post even further and actually try to create a series of classes to
teach something to non developers.&lt;/p&gt;

&lt;h2 id=&quot;the-class&quot;&gt;The Class&lt;/h2&gt;

&lt;p&gt;After discuting with &lt;a href=&quot;https://twitter.com/antoamiel&quot;&gt;one of leeaarn’s co-founders&lt;/a&gt;
we decided on a format of 3 classes of 2 hours each dedicated to
people with little to no experience in creating websites.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Class #1: What is the web (internet, client/servers, networks, IP, DNS…)&lt;/li&gt;
  &lt;li&gt;Class #2: What is coding (Front/Back, HTML/CSS/JS, algorithms…)&lt;/li&gt;
  &lt;li&gt;Class #3: How to work with developers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I spent quite a while laying out the content of these classes.&lt;/p&gt;

&lt;p&gt;Of course I already knew
the subjects quite well but making complex ideas simple can get pretty hard!
Also I had to find a good middle point in technical accuracy and not
boring everyone to death with details or wasting too much time.&lt;/p&gt;

&lt;h2 id=&quot;what-i-learned&quot;&gt;What I Learned&lt;/h2&gt;

&lt;p&gt;While I already helped out friends or teammates learning new concepts,
this was the first time where I’d give a more formal class to complete strangers.
In the process I learned a lot.&lt;/p&gt;

&lt;h3 id=&quot;people-are-interested&quot;&gt;People are interested&lt;/h3&gt;

&lt;p&gt;I was really surprised when around 10 people showed up,
and even more surprised by how involved they were. A lot of
relevant questions were asked and there often was a discussion going on.
It was great to see a non tech crowd so genuinely interested in concepts
as obscure to them as DNS or source control. This made my day every time.&lt;/p&gt;

&lt;h3 id=&quot;some-obvious-things-are-not--vice-versa&quot;&gt;Some obvious things are not (&amp;amp; vice versa)&lt;/h3&gt;

&lt;p&gt;While writing my slides for the first class I overlooked some concepts
that seemed obvious to me and focused on others that felt more complex.&lt;/p&gt;

&lt;p&gt;In some cases I was way off, like when I thought that the word “protocol” was known by everyone.
Spoiler: it’s not. On the other hand people understood very quickly what
HTML, CSS and Javascript were and how they intereacted with one another
when I thought it would take half the class to get this point accross.&lt;/p&gt;

&lt;h3 id=&quot;people-dont-know-much-about-security&quot;&gt;People don’t know much about security&lt;/h3&gt;

&lt;p&gt;I feel there is a great need of education regarding this
topic. For instance it didn’t shock a lot of people that some websites
would store their password without encryption and send them back by
email when pressing “I forgot my password”.&lt;/p&gt;

&lt;p&gt;I hope I freaked them out enough about the risks they’ll spend the extra
time needed to properly secure their company’s website :evilsmileyface:&lt;/p&gt;

&lt;h3 id=&quot;examples-are-great&quot;&gt;Examples are great&lt;/h3&gt;

&lt;p&gt;I did some live coding and it seemed like it helped them a lot to understand what
programming is all about. Overall I’d say that 2 minutes spent in the Chrome
inspector are worth 10 slides of tedious HTML syntax description or
any other kind of theory.&lt;/p&gt;

&lt;p&gt;I also spent time in the console, using whois, dig, ping, curl and so on to
showcase a bit of the web’s behind the scene. While I think that the
console felt a bit weird to people present (the “wtf is that black screen
with lines of text scrolling?” effect), it helped demonstrate that there is a lot
going on when you try to access a website.&lt;/p&gt;

&lt;p&gt;It was also very fun to crash one of the student’s website with a simple
&lt;a href=&quot;http://en.wikipedia.org/wiki/Denial-of-service_attack&quot;&gt;DoS attack&lt;/a&gt;
to explain what this was all about and introduce a part of the class about performances!&lt;/p&gt;

&lt;h3 id=&quot;two-hours-is-short&quot;&gt;Two hours is short&lt;/h3&gt;

&lt;p&gt;At first I was really worried I wouldn’t have enough material to keep
people interested for two hours… but by the last session it seemed
like we should have spent a full day talking and there would still be
discussions to be had! The subjects I presented are very broad and each have immense
ramifications, so staying focused and not taking too much time was
actually the hard part.&lt;/p&gt;

&lt;p&gt;To sum it up, I now think that it isn’t an overstatement when I say “I
could talk about the web for days”.&lt;/p&gt;

&lt;h3 id=&quot;public-speaking-is-a-skill-that-requires-practice&quot;&gt;Public speaking is a skill that requires practice&lt;/h3&gt;

&lt;p&gt;While working on my engineering degree we had quite a lot of projects and keynotes.
This taught us to talk in public, and at the end I felt that I got decent at
it… but damn does it go away! This is clearly something you need
to work on every once in a while to be efficient right away.&lt;/p&gt;

&lt;p&gt;In my case it came back very quickly, but the first minutes of the class
were painful and a better preparation would have fixed that.&lt;/p&gt;

&lt;h3 id=&quot;making-complex-things-simple-is-hard&quot;&gt;Making complex things simple is hard&lt;/h3&gt;

&lt;p&gt;Ok, this isn’t news to anyone who tried to explain how to use a computer to
an old relative, but it’s always worth mentionning that it really is a challenge.
While preparing for the class I realized that I wasn’t really able to explain some
concepts off the top of my head. Just like public speaking it’s a skill that needs practice.&lt;/p&gt;

&lt;p&gt;No wonder the &lt;a href=&quot;http://www.reddit.com/r/explainlikeimfive&quot;&gt;Explain Like I’m 5 subreddit&lt;/a&gt;
is so popular, it truly is an intellectual and stylistic exercice!&lt;/p&gt;

&lt;h2 id=&quot;overall&quot;&gt;Overall&lt;/h2&gt;

&lt;p&gt;This was a great experience. I got to teach things I am pasionated about and so far
I got some very positive feedbacks. I think that I’ll do it again sometimes!&lt;/p&gt;

&lt;p&gt;In the meantime, here’s a picture of me looking all teachery:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/leeaarn.jpg&quot; alt=&quot;Presenting&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Please Keep a Changelog For Your Open Source Lib</title>
     <link href="https://marcgg.com/blog/2013/03/25/please-changelog-open-source/"/>
     <updated>2013-03-25T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2013/03/25/please-changelog-open-source</id>
     <content type="html">
       &lt;p&gt;I love open source. I think it’s amazing that some people are willing to
share their hard work with everyone and accepting contributions.
I don’t help out myself as much as I’d like to (couple of commits in
&lt;a href=&quot;https://github.com/fog/fog/commit/c35f4affa79dea5cf520dd1c954c8f32022dfb96&quot;&gt;fog&lt;/a&gt;,
&lt;a href=&quot;http://contributors.rubyonrails.org/contributors/marc-g-gauthier/commits&quot;&gt;rails&lt;/a&gt;,
&lt;a href=&quot;https://github.com/arsduo/koala/commit/85d5e16bccde1b153f861043a7ac818f61409633&quot;&gt;koala&lt;/a&gt;
&lt;a href=&quot;https://github.com/marcgg/Simple-Placeholder&quot;&gt;…&lt;/a&gt;)
but I use open source frameworks and software every day both professionnally and at home.&lt;/p&gt;

&lt;p&gt;Today I’m writing this article because something has been bothering me in a lot
of projects I use: they don’t keep any form of changelog.&lt;/p&gt;

&lt;p&gt;Before I get started, I just want to make clear that
if you have an open source project and don’t keep a changelog, I don’t
want to be pointing fingers going “shame on you! shame on you!”. Not at all.
I really appreciate and respect the fact that you put your code out there for me
to use.&lt;/p&gt;

&lt;p&gt;It’d just be extra awesome if it was there, that’s all.&lt;/p&gt;

&lt;h2 id=&quot;sometimes-you-just-have-to-update&quot;&gt;Sometimes You Just Have To Update&lt;/h2&gt;

&lt;p&gt;Say I use LibY for a project and it’s great. So great that it does
exactly what I want perfectly and I end up leaving it there without looking at it
too much. Maybe after a couple of months I’ll run
into a weird bug that requires me to update LibY, or maybe another
project has a dependency to a more recent version of LibY.
The result will be that I need to update.&lt;/p&gt;

&lt;p&gt;So I’ll go to the repository / website / tracker / github’s page or
whatever and look up the latest version… and have no clue what
changed since last time.&lt;/p&gt;

&lt;p&gt;Of course I could look up every commit since last version, but often my
knowledge of the project is too basic to fully understand everything
that happened. This is particulary true for very large projects of
which I only use a very small subset.&lt;/p&gt;

&lt;h2 id=&quot;i-know-i-know&quot;&gt;I Know, I Know&lt;/h2&gt;

&lt;p&gt;At that point someone will point out that I should keep all my libraries
up to date. Obviously that someone would be right, but let’s stay realistic.
While I can find time to update my main dependencies, it is really hard
to keep up and have everything at the latest version. And even then, if
there is a minor update in one of the libraries I use and there
is no changelog… well it would still be complicated to know if it’s updatable!&lt;/p&gt;

&lt;p&gt;I’m sure someone else will say that my automated tests should find any bug when I
update. This is true as well, it is always better to be able to have an
exhaustive test suite that guaranties you that nothing will break. But
we live in the real world and test suites are not perfect. You could
even argue that testing your libraries is not within the scope of your
app.&lt;/p&gt;

&lt;p&gt;And hey, if &lt;a href=&quot;https://github.com/blog/1440-today-s-email-incident&quot;&gt;Github&lt;/a&gt;
can get it wrong, how can I not fail every once in a while!&lt;/p&gt;

&lt;p&gt;Lastly I also wanted to point out that sometimes checking the changelog
is not the only thing you need to do.
If you want to update a very major and central library, checking quickly
the changelog is clearly not enough. You need to make sure everything
still works fine, maybe look up the discussion that went on to lead to
this new release and so on.&lt;/p&gt;

&lt;p&gt;However, even in that case, a simple list of the changes is still a good
point to start your reflexion on how you should update.&lt;/p&gt;

&lt;h2 id=&quot;the-changelog-i-need&quot;&gt;The Changelog I Need&lt;/h2&gt;

&lt;p&gt;I don’t need much to be in a changelog. If you want to make me (and probably other developers)
happy, here’s what would do the trick.&lt;/p&gt;

&lt;h3 id=&quot;a-version-number-that-makes-sense&quot;&gt;A Version Number That Makes Sense&lt;/h3&gt;

&lt;p&gt;If it’s a release candidate, label it RC. If it’s a beta or an alpha, write it down
as well. I want to know if this version is supposed to be stable.&lt;/p&gt;

&lt;p&gt;Keep a logical versioning logic and stick to it. I don’t care exactly how you do it,
as long as you explain it. People like to go MAJOR.MINOR.PATCH,
so if it’s like that it’s even better, but really anything that helps me
understand if there are bug fixes, new features or breaking DSL changes
in the update is perfect.&lt;/p&gt;

&lt;h3 id=&quot;a-changelog-file&quot;&gt;A Changelog File&lt;/h3&gt;

&lt;p&gt;A file called “changelog” somewhere at the root of your project. Maybe you want to
keep track of changing versions on your website and that’s fine. I would still love
if the file was there and referenced the place you want to keep the
actual changes.&lt;/p&gt;

&lt;h3 id=&quot;a-brief-list-of-what-changed&quot;&gt;A Brief List Of What Changed&lt;/h3&gt;

&lt;p&gt;Again, you don’t need to be exhaustive. I usually want to know:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Did anything changed so much I’d need to update my code?&lt;/li&gt;
  &lt;li&gt;What are the new features?&lt;/li&gt;
  &lt;li&gt;Are there bugfixes? Security updates?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No need to make it long, no need to reference the commits or tickets.
While it’s a nice thing to have, a simple bullet point list with a
sentence for each major change is usually enough for me to get the big picture.&lt;/p&gt;

&lt;h2 id=&quot;example-why-i-love-thins-changelog&quot;&gt;Example: Why I Love Thin’s Changelog&lt;/h2&gt;

&lt;p&gt;Let’s look at some of what
&lt;a href=&quot;http://macournoyer.com/&quot;&gt;Marc-André Cournoyer&lt;/a&gt; did
with &lt;a href=&quot;https://github.com/macournoyer/thin&quot;&gt;thin&lt;/a&gt;’s
&lt;a href=&quot;https://github.com/macournoyer/thin/blob/master/CHANGELOG&quot;&gt;changelog&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;== 1.5.1 Straight Razor
 * Fix issue when running as another user/group without a PID file.
 * Allow overriding Connection &amp;amp; Server response headers.
 * Update vlad example [Mathieu Lemoine]
 * Keep connections in a Hash to speedup deletion [slivu]
 * Force kill using already known pid. Prevents &quot;thin stop&quot;
   from leaving a process that removed its pid file,
    but is still running
    (e.g. hung on some at_exit callback) [Michal Kwiatkowski]

== 1.5.0 Knife
 * Fix compilation under Ubuntu 12.04
   with -Werror=format-security option.
 * Raise an error when no PID file.
 * Prevent duplicate response headers.
 * Make proper response on exception [MasterLambaster].
 * Automatically close idling pipeline connections on
   server stop [MasterLambaster].

== 1.4.1 Chromeo Fix
 * Fix error when sending USR1 signal and no log file is supplied.

== 1.4.0 Chromeo
 * kill -USR1 $PID for log rotation [catwell].
 * Fix HUP signal being reseted after deamonization [atotic].
 * Fix error with nil addresses in Connection#socket_address.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/rainbows.png&quot; alt=&quot;Rainbows&quot; style=&quot;margin: 0px auto 20px auto; display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To me it’s perfect. Not too long and very clear.
He mentions contributors and even have codenames for each release making
it extra easy to remember.
You can clearly see what’s new in each release and what will happen if you
update. This also gives a good overview of how the project is doing.&lt;/p&gt;

&lt;h2 id=&quot;pretty-please&quot;&gt;Pretty Please?&lt;/h2&gt;

&lt;p&gt;If you have an open source project and want to be even nicer to the
people using it, please please please keep a changelog.&lt;/p&gt;

&lt;p&gt;You don’t need to make it fancy, but anything would be better than
random version numbers with no explanations.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;

       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Developers, Share Your Technical Knowledge</title>
     <link href="https://marcgg.com/blog/2013/02/04/developers-teach-non-tech-startup/"/>
     <updated>2013-02-04T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2013/02/04/developers-teach-non-tech-startup</id>
     <content type="html">
       &lt;p&gt;When you think startup, you might get the picture of a bunch of
developers writing code all day. While this can be true, the vast
majority will incorporate some people that have absolutely no technical
background.&lt;/p&gt;

&lt;p&gt;I’m thinking about the ones working on marketing, sales, project management, product design,
support, business development, graphic design and so on. All of them like the
idea of working in a small and promising company, but they never learned
anything about coding - and I’m not here to blame them.&lt;/p&gt;

&lt;h2 id=&quot;no-need-to-learn-how-to-code&quot;&gt;No need to learn how to code&lt;/h2&gt;

&lt;p&gt;I’m personnaly not an advocate of the concept of &lt;a href=&quot;http://www.codeyear.com/&quot;&gt;getting everybody to code&lt;/a&gt;.
Of course I love this field, but I wouldn’t say that it is a
required skill to live a successful life, no matter how big technology is today.&lt;/p&gt;

&lt;p&gt;However I’m all for giving people a basic overview of how everything
works behind the scene of a successfull piece of software. Then, if the
person wants to learn how to code for fun or to make a living out of it,
great! But if not, I wouldn’t mind.&lt;/p&gt;

&lt;p&gt;To each his own and bla bla bla.&lt;/p&gt;

&lt;h2 id=&quot;just-get-the-big-picture&quot;&gt;Just get the big picture&lt;/h2&gt;

&lt;p&gt;As a developer, I’m always trying to give some technical references
to my colleagues. Of course I won’t get into
the details about how I optimized a complicated database query, but I
might say that I got a page to load faster because I did &lt;em&gt;something&lt;/em&gt; to
the way the app talks to the database.&lt;/p&gt;

&lt;p&gt;To sum it up:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t say&lt;/strong&gt;: “I refactored module X to speed up the GC in order to stop the memory
leak occuring for the workers processing the queue Y.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Say&lt;/strong&gt;: “Our machines would use too much memory doing Y, so I had to improve how we
would handle that.”&lt;/p&gt;

&lt;p&gt;As time passes I might add some information and complexify my
vocabulary as people get the idea. It’s all about introducing concepts
step by step.&lt;/p&gt;

&lt;p&gt;I’m absolutely not saying take them for idiots. They are not. They just
do not have the same vocabulary and the same background as me. Imagine a
marketing guy showing up and starting to talk about &lt;a href=&quot;http://en.wikipedia.org/wiki/Marketing_mix&quot;&gt;4Ps&lt;/a&gt;
without giving you any indication of what all those Ps are about.&lt;/p&gt;

&lt;h2 id=&quot;what-everyone-should-know&quot;&gt;What everyone should know&lt;/h2&gt;

&lt;p&gt;Spoilers: all that is written here is nothing more than my opinion.&lt;/p&gt;

&lt;p&gt;I think that everyone in a startup working
on a web product should know some things about how the software works.
This is not the definitive ultimate most awesomest list,
so feel free to add your points in the comments and I might update the
article accordingly.&lt;/p&gt;

&lt;p&gt;Here we go.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What code is. The fact that a bunch of text files can
create a website, a game or whatever can be surprising for a lot of people.&lt;/li&gt;
  &lt;li&gt;What a browser is and understand that there are differences between
browsers.&lt;/li&gt;
  &lt;li&gt;Recognize different kinds of problems. A complete crash is way worse
than a CSS alignment issue or a word change!&lt;/li&gt;
  &lt;li&gt;How to report a bug and understand that developers are not wizards that can
guess the steps to reproduce it (if only).&lt;/li&gt;
  &lt;li&gt;What &lt;a href=&quot;http://en.wikipedia.org/wiki/Software_regression&quot;&gt;software regression&lt;/a&gt; is,
or why sometimes a feature working yesterday is broken today.&lt;/li&gt;
  &lt;li&gt;What a server is.&lt;/li&gt;
  &lt;li&gt;Understand that something can be really complicated even if it seems
simple. It’s rarely about just “adding a button”, there is &lt;strong&gt;way more&lt;/strong&gt; to
a feature than the UI.&lt;/li&gt;
  &lt;li&gt;What it means to deploy something in production. What is a migration.
Why every once in a while you need to put the site down for maintenance.&lt;/li&gt;
  &lt;li&gt;What a URL is.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s not much, but knowing all this will help a lot communication between the development
team and everyone else. To an extent it will also help the team be more
efficient. Obviously it’s easier when everyone within a team
can have a &lt;a href=&quot;http://martinfowler.com/bliki/UbiquitousLanguage.html&quot;&gt;common vocabulary&lt;/a&gt;
to talk about what occurs during development.&lt;/p&gt;

&lt;p&gt;Going further, there are some subjects that can be very interesting if
someone wanted to learn more. This can be particularly good for a person
working on the product or selling it. Knowing more gives a better insight on what
the app &lt;em&gt;could&lt;/em&gt; do based on what is already there.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Databases. How things are stored, how the data can be used.&lt;/li&gt;
  &lt;li&gt;What are the possibilities and &lt;a href=&quot;/blog/2012/09/24/working-with-apis-facebook/&quot;&gt;risks&lt;/a&gt;
of using third party APIs.&lt;/li&gt;
  &lt;li&gt;Performances. What can make a site slow. Understand what asynchronous means.&lt;/li&gt;
  &lt;li&gt;Code reusability and its limit. Why it’s good to have a consistent product.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bonus points to learn if you want to show off at dinner parties:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In most cases the cloud is really just a fancy way of talking about the internet.&lt;/li&gt;
  &lt;li&gt;Developers are just as bad as you at fixing printers.&lt;/li&gt;
  &lt;li&gt;Internet Explorer is terrible. Critize it and befriend developers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;learning-something-different-is-also-for-developers&quot;&gt;Learning something different is also for developers&lt;/h2&gt;

&lt;p&gt;Working in a small structure like a startup is a lot of fun because you
get to see what everybody is doing. All the people involved should take
this opportunity to learn more.&lt;/p&gt;

&lt;p&gt;So far I’ve talked a lot about non-technical people learning technical things,
but a good idea for another blog post would be developers learning things
non related to coding!&lt;/p&gt;

&lt;p&gt;For instance knowing a bit about product design can help you
catch wireframe mistakes before implementing them, or see an easy to
create feature that could improve the application because you knew exactly what
is possible with the current code base.&lt;/p&gt;

&lt;p&gt;A front-end with an eye for graphic design could add a little polish to
a website using the latest CSS3 techniques that the designer maybe
didn’t know about.&lt;/p&gt;

&lt;h2 id=&quot;be-nice&quot;&gt;Be nice&lt;/h2&gt;

&lt;p&gt;This part is mainly a few tips for my fellow developers.&lt;/p&gt;

&lt;p&gt;If you decide to follow my advice - or if you already do what I’m
talking about, keep in mind that a lot of things that we take for granted are only
obvious because we’ve been playing around with computers for waaay too
long. If someone doesn’t get it, take the time to explain. No matter what it
is. Remember that you had to learn this too at some point.&lt;/p&gt;

&lt;p&gt;Be aware that what you can find amazing can
be really boring for others, so don’t go too far harassing people with technical facts.
Stick to what’s important, but stay available and helpful.
Of course if the person wants to know more, go crazy.&lt;/p&gt;

&lt;p&gt;To help you be clear in your explanations, it’s convenient to have some graphs,
simple flow charts or even drawings that you can refer to when discussing a subject.
Also, remember that
&lt;a href=&quot;http://programmers.stackexchange.com/questions/2410/whats-a-good-programming-metaphor&quot;&gt;metaphors&lt;/a&gt;
can go a &lt;a href=&quot;http://xenia.media.mit.edu/~mt/thesis/mt-thesis-2.2.html&quot;&gt;long way&lt;/a&gt;. Extrem programming
even lists this as &lt;a href=&quot;http://en.wikipedia.org/wiki/Extreme_programming_practices#System_metaphor&quot;&gt;a good practice&lt;/a&gt;
that can &lt;a href=&quot;http://reports-archive.adm.cs.cmu.edu/anon/isri/CMU-ISRI-03-103.pdf&quot;&gt;have positive results&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Personnaly, I like talking about robots walking around a warehouse doing tasks while
I’m yelling orders from afar… and now that I’m writing that, I think I might pass for someone with a very odd job!&lt;/p&gt;

&lt;h2 id=&quot;go&quot;&gt;Go!&lt;/h2&gt;

&lt;p&gt;If you agree that this is important and you’re a developer,
go ahead and start explaining what you’re doing to others!&lt;/p&gt;

&lt;p&gt;If you are on the non technical side of things, ask your colleagues writing code what’s up. Most of them
would be happy to explain. If they aren’t, drop me a line &lt;a href=&quot;http://twitter.com/marcgg&quot;&gt;on twitter&lt;/a&gt;
and if I can, I’ll happily take a few minutes to help you out!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>2 Days Trying To Create a Multiplayer HTML5 Game</title>
     <link href="https://marcgg.com/blog/2013/01/14/html5-nodejs-websockets-games-learning/"/>
     <updated>2013-01-14T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2013/01/14/html5-nodejs-websockets-games-learning</id>
     <content type="html">
       &lt;p&gt;Okay. Let’s start by saying that I’m a developer that does mostly web stuff.&lt;/p&gt;

&lt;p&gt;This means that a majority of the code I write will end up displaying something in a browser.
Of course I do &lt;a href=&quot;/2012/09/24/working-with-apis-facebook/&quot;&gt;interact with APIs&lt;/a&gt;, write background jobs, add some
security, optimize databases and so on… the point here is that, professionnally, I do not write
entire projects that have nothing to do with a web app.&lt;/p&gt;

&lt;p&gt;My friend &lt;a href=&quot;http://www.andreberlemont.com/portfolio/&quot;&gt;André&lt;/a&gt; on the other hand
has a different background as he mainly &lt;a href=&quot;http://www.oneliferemains.com/&quot;&gt;develops games&lt;/a&gt;.
One evening we started talking about how complex it would be to create an online multiplayer
game from scratch. Being the web guy, I felt that I should know how all this was supposed to work… after
all, the multiplayer happens over the internet, right?&lt;/p&gt;

&lt;h2 id=&quot;i-can-code-that-with-my-eyes-closed&quot;&gt;I Can Code That With My Eyes Closed…?&lt;/h2&gt;

&lt;p&gt;On paper it seemed pretty simple.&lt;/p&gt;

&lt;p&gt;People connect to a server.
This server keeps the game board and broadcasts it to everyone when
needed. Each player keeps some kind of state on its side for caching.
Everything related to drawing the game board as well as UI should be
handled by the client.&lt;/p&gt;

&lt;p&gt;Of course I knew it couldn’t be that simple and I was 100% sure
I was disregarding most of the problems that can occur when creating an online game.&lt;/p&gt;

&lt;p&gt;I &lt;a href=&quot;/blog/2012/01/09/start-working-on-your-side-project/&quot;&gt;already blogged&lt;/a&gt; about how side projects are the best response to such
situation, therefore at that point I pretty much had to create some kind of game to try it out!&lt;/p&gt;

&lt;h2 id=&quot;stack&quot;&gt;Stack&lt;/h2&gt;

&lt;p&gt;Time being a factor, I didn’t want to go all out game development with C++, Unity or
something like that. Instead I kept it in my “safe” zone by using
technologies I had a bit of experience with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodejs.org/&quot;&gt;NodeJS&lt;/a&gt; (for the server)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTML/Canvas/Tutorial&quot;&gt;HTML5 Canvas&lt;/a&gt; (to display the game board)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/WebSocket&quot;&gt;Websockets&lt;/a&gt; with &lt;a href=&quot;http://socket.io/&quot;&gt;Socket.io&lt;/a&gt; (to make it fast)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/stackgame.png&quot; alt=&quot;logos&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;building-the-game&quot;&gt;Building The Game&lt;/h2&gt;

&lt;p&gt;I wanted a simple game so that I could focus on the online aspect of it.
The rules I came up with are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There are n players represented as squares on a board.&lt;/li&gt;
  &lt;li&gt;1 player is the target and earns 1 point per 30 movements.&lt;/li&gt;
  &lt;li&gt;If another player hits the target, she becomes the target and win 1 point.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also added a simplistic chat system so that players could talk
to one another during the game.&lt;/p&gt;

&lt;p&gt;The first version of the multiplayer code was pretty simple:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When the player connects she gets the latest version of the game board.&lt;/li&gt;
  &lt;li&gt;Each time the player moves it sends an event to the server that
updates the world and broadcasts it to everyone connected.&lt;/li&gt;
  &lt;li&gt;Client side javascript renders the board in the canvas at each change.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is when I started to see why it wouldn’t be as simple.&lt;/p&gt;

&lt;h2 id=&quot;oh-wait-problems&quot;&gt;Oh Wait. Problems.&lt;/h2&gt;

&lt;h3 id=&quot;speed&quot;&gt;Speed&lt;/h3&gt;

&lt;p&gt;My first version was hosted on Heroku and lagged like crazy. This is
because right now Heroku doesn’t support Websockets and forces socket.io
to fall back to its polling mode. After some &lt;a href=&quot;https://github.com/joyent/node/wiki/Node-Hosting&quot;&gt;research&lt;/a&gt;
I moved to &lt;a href=&quot;https://www.dotcloud.com/&quot;&gt;DotCloud&lt;/a&gt; and got an impressive boost in speed.&lt;/p&gt;

&lt;p&gt;I also had to rewrite a lot of code using &lt;a href=&quot;http://expressjs.com/&quot;&gt;Express&lt;/a&gt; because it would make
deployment way easier.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/morestackgaming.png&quot; alt=&quot;logos&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now that hosting and basic interactions were a bit more optimized, I started to see
another problem: passing around the whole board was still too costly
network-wise.&lt;/p&gt;

&lt;p&gt;At that moment of development the board was just a JSON object containing
all the players, their names, positions, scores and other meta data
regarding the game. It seemed pretty small but it wasn’t, and as the
game would grow the problem would only get worse.&lt;/p&gt;

&lt;p&gt;The solution here would be to only broadcast what changed instead of
redrawing everything. This was annoying because it meant that you need to be able
to draw the board from scratch (when you connect) as well as
incrementally (while you play). Twice the logic.&lt;/p&gt;

&lt;p&gt;I also noticed a lag for the player’s own actions. This was because it
would always go via the server before updating the board. As a matter of
fact there wasn’t even a board on the client side, just its rendering
on the HTML5 Canvas.&lt;/p&gt;

&lt;p&gt;Soooo to fix this the client code should also be able to know the state of the world
and update it locally.&lt;/p&gt;

&lt;h3 id=&quot;fun-gameplay--complexity&quot;&gt;Fun, Gameplay &amp;amp; Complexity&lt;/h3&gt;

&lt;p&gt;A game needs to be fun, or else there is no point. And a couple of laggy
squares moving around is clearly not fun. This seems trivial, but when
you spend your time working on web apps, you don’t spend a lot of time thinking about
whether the app is fun or not. Making it efficient, fast and user friendly
is complicated enought!&lt;/p&gt;

&lt;p&gt;I added some rules and gameplay elements to make it feel more like
something one would like to play, including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Feedbacks when you get hit&lt;/li&gt;
  &lt;li&gt;Scoreboards during game&lt;/li&gt;
  &lt;li&gt;Invicibility frames when you get hit&lt;/li&gt;
  &lt;li&gt;Board boundaries&lt;/li&gt;
  &lt;li&gt;Changing a player’s name&lt;/li&gt;
  &lt;li&gt;Tweaks in the player’s speed &amp;amp; size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s also good to know that some of the gameplay elements are based on constants.
For instance you always move of X, and your player is Y pixel-wide. When you get hit you
are invicible for Z frames and so on. To tweak it I had to add a debug
mode to change everything while playing to quickly see how it felt.&lt;/p&gt;

&lt;p&gt;All these changes made my simple game complex and it became harder to maintain the code,
even only after something like 6 hours of work in.
I had to throw away a lot of code and start again fresh.&lt;/p&gt;

&lt;h3 id=&quot;concurent-access&quot;&gt;Concurent Access&lt;/h3&gt;

&lt;p&gt;When you have a lot of players connected and modifying the same board,
you’re bound to run into some &lt;a href=&quot;http://en.wikipedia.org/wiki/Concurrency_control&quot;&gt;concurent access&lt;/a&gt; issues.
For instance let’s say two players touch the target at the same time.
Who gets +1 point?&lt;/p&gt;

&lt;p&gt;To fix this I hacked together a basic
&lt;a href=&quot;http://en.wikipedia.org/wiki/Mutual_exclusion&quot;&gt;mutex&lt;/a&gt; system
to handle the simple problems that kept on happening. This did the trick
after an hour of code, but it wasn’t something I’d put in production!&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Overall I’m pretty happy with the results.
Even with my lack of experience in the subject I still got
something running and gained a better grasp of why game developers
tremble when you mention online multiplayer.&lt;/p&gt;

&lt;p&gt;Now I think the next step would be to design a game taking the
constraints discovered into account in order to simplify development. You don’t want a
game where precision and timing is key.
You could instead create a massively online turn-by-turn game and
save yourself major headaches while still producing something fun! It all
depends if you seek a technical challenge or if you just want to create
a cool project.&lt;/p&gt;

&lt;p&gt;Also I’ll need to find a graphic designer because my game looked like shit, but
that’s another story.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/screengame.png&quot; alt=&quot;the game&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>I Left Tigerlily</title>
     <link href="https://marcgg.com/blog/2013/01/06/left-tigerlily-job/"/>
     <updated>2013-01-06T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2013/01/06/left-tigerlily-job</id>
     <content type="html">
       &lt;p&gt;I joined &lt;a href=&quot;http://tigerlilyapps.com&quot;&gt;Tigerlily&lt;/a&gt; even before it was called that and, for 3 years, I contributed to the creation of &lt;a href=&quot;http://www.tigerlilyapps.com/products&quot;&gt;amazing products&lt;/a&gt; that are now used by major companies in France and abroad. We built a great team of very talented people, brought innovation to how brands would interact with their users on social networks and always thrived to be the best at what we’d put our minds into.&lt;/p&gt;

&lt;p&gt;It was a great experience in which I learned a lot and enjoyed the &lt;a href=&quot;/blog/2011/12/12/developer-from-ssii-to-startup/&quot;&gt;startup atmosphere&lt;/a&gt;. I became really invested in the project and became the lead developer, but now I feel that it is time for another adventure.&lt;/p&gt;

&lt;p&gt;There are a few personal reasons that made me decide to leave. The main one is the opportunity that was given to me by &lt;a href=&quot;http://www.drivy.com/&quot;&gt;Drivy&lt;/a&gt; (&lt;a href=&quot;http://blog.drivy.com/2013/voiturelib-change-de-nom-et-devient-drivy/&quot;&gt;formerly known as VoitureLib&lt;/a&gt;), the startup I’m going to join.&lt;/p&gt;

&lt;p&gt;This company is centered around a product that can be roughly summarized by « It’s like &lt;a href=&quot;https://www.airbnb.com/&quot;&gt;AirBnB&lt;/a&gt;, but for cars ». The idea of &lt;a href=&quot;http://vimeo.com/14408878&quot;&gt;collaborative consumption&lt;/a&gt; always attracted me because I think this is what will make a difference in the long run. Instead of buying products we barely need, why not collaborate? Picture a city where you can get a car, quickly, for cheap and without having to go through the hassle of the main renting companies. That’d be pretty cool!&lt;/p&gt;

&lt;p&gt;On the technical side, yes, I’ll still be working with &lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Ruby On Rails&lt;/a&gt;. Of course changing job will put me in front of new problems to solve or ones I haven’t tackled in years, so it’s going to be interesting!&lt;/p&gt;

&lt;p&gt;Don’t get me wrong, I still think that what Tigerlily is doing is cool and that the team is amazing. I simply feel like I’ve done everything I needed to do there and that I must seek something different. It’s very hard to leave the people and not be able to contribute to the progress the company will make, but there are times when you have to look for something else.&lt;/p&gt;

&lt;p&gt;Life, heh.&lt;/p&gt;

&lt;p&gt;I wish the best to the Tigerlily team, and now I’m looking forward to my first day tomorrow!&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>How We Made Third Place At AngelHack Paris</title>
     <link href="https://marcgg.com/blog/2012/12/10/angelhack-third-place-paris-hackathon/"/>
     <updated>2012-12-10T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2012/12/10/angelhack-third-place-paris-hackathon</id>
     <content type="html">
       &lt;p&gt;A couple of weeks ago &lt;a href=&quot;http://twitter.com/kevintunc&quot;&gt;Kevin&lt;/a&gt;, &lt;a href=&quot;http://twitter.com/etiennebarrie&quot;&gt;Étienne&lt;/a&gt;, &lt;a href=&quot;http://twitter.com/benjaminbouwyn&quot;&gt;Benjamin&lt;/a&gt;, &lt;a href=&quot;http://twitter.com/emilanddc&quot;&gt;Emiland&lt;/a&gt; and I decided to go to the the Paris’ session of &lt;a href=&quot;http://angelhack.com&quot;&gt;AngelHack&lt;/a&gt;. This is a worldwide &lt;a href=&quot;http://en.wikipedia.org/wiki/Hackathon&quot;&gt;hackathon&lt;/a&gt; with fancy &lt;a href=&quot;http://angelhack.com/#sponsors&quot;&gt;sponsors&lt;/a&gt; giving you the opportunity to build and pitch a new product in 24 hours. This edition gathered 165 attendees and 47 projects.&lt;/p&gt;

&lt;p&gt;In this article I’ll try to present what we did while hopefully recreating a bit the experience and giving some tips.&lt;/p&gt;

&lt;h2 id=&quot;brainstorming&quot;&gt;Brainstorming&lt;/h2&gt;

&lt;p&gt;Two weeks prior, we started brainstorming over lunch. We knew we wanted to make a product with a positive concept, original if possible, and not try to build yet another Twitter connected app plugging your instagram to your last.fm account or whatever.&lt;/p&gt;

&lt;p&gt;We started by talking about a time sharing solution based on the concept that 1 hour of someone is worth 1 hour of anyone else. You would give a way for people to exchange services. Since there was already a lot of projects doing this we focused on the education niche: how we could apply this idea to make teaching better. From this idea we jumped to sharing goods. From sharing to trading, to giving.&lt;/p&gt;

&lt;p&gt;We liked the idea of giving objects, but &lt;a href=&quot;http://www.freecycle.org/&quot;&gt;some websites&lt;/a&gt; did that already, so we looked for incentives for people to give away their things and found the idea of tracking every steps of an object’s life very interesting. This concept has a lot of potential. It not only made giving an object more fun, it could also lead to great stories and maybe give the feeling that property can be temporary, lasting just long enough to have an experience.&lt;/p&gt;

&lt;h2 id=&quot;getting-ready&quot;&gt;Getting Ready&lt;/h2&gt;

&lt;p&gt;According to the &lt;a href=&quot;http://angelhack.com/rules&quot;&gt;rules&lt;/a&gt; of AngelHack, you can’t start coding before the limit, but you are allowed to prepare wireframes and use cases… so we did that!&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img style=&quot;width: 320px; float: right;&quot; src=&quot;http://distilleryimage7.instagram.com/8e2b7cae3b1a11e2ab4c22000a1faffd_7.jpg&quot; /&gt;&lt;img style=&quot;width: 320px; float: left; margin: 0px !important;&quot; src=&quot;/assets/blog/ready.png&quot; /&gt;&lt;/div&gt;

&lt;div style=&quot;clear:both&quot;&gt;&amp;nbsp;&lt;/div&gt;

&lt;p&gt;The hardest part at that point was to determine what our minimal viable product would be.&lt;/p&gt;

&lt;p&gt;In this kind of situation it is very easy to get side tracked and try to build too much. Obviously you want to make your project as good as possible, with a ton of awesome features and shiny graphics. The bad news is, by doing that, you’ll end up with nothing, or an app messy and bugged beyond belief. We also knew we’d only get 2 minutes to present our work… which is REALLY short. Therefore it was important to focus and get the most important feature done and polished.&lt;/p&gt;

&lt;p&gt;Tech-wise, the stack was pretty obvious since we are all well versed with Ruby on Rails and wanted to get the project as complete as possible. However we left some room for improvisation in terms of what &lt;a href=&quot;http://en.wikipedia.org/wiki/RubyGems&quot;&gt;gems&lt;/a&gt; or database we’d use.&lt;/p&gt;

&lt;p&gt;The day before the hackathon, in order to gain some time, we prepared how the first hour would go, dispatching tasks and so on.&lt;/p&gt;

&lt;h2 id=&quot;hacking&quot;&gt;Hacking&lt;/h2&gt;

&lt;p&gt;The first day started around 9am with presentations, pitches from teams missing members and sponsors. Around noon we started coding. Right away we got some issues with the internet, leading to my deepest despair as we installed most of what we needed to work, but not everything. After a while it got fixed and we were finally able to install the gems we needed.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;&lt;img style=&quot;width: 500px;&quot; src=&quot;/assets/blog/githack.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;In the middle of the development we got the crazy idea of switching database from MySQL to Posgres in case we’d need it for its geospatial features. It didn’t break everything we made before or destroy one of our dev machine, which was pretty good.&lt;/p&gt;

&lt;p&gt;We also quickly got the need to get everyone to test the site. Since the non technical people on the team didn’t have a laptop fully setup for development, we had to deploy the project to Heroku. This lead to an awesome moment where we had a problem and just had to turn around to get help from the guys on the Heroku stand sitting feets away from us.&lt;/p&gt;

&lt;p&gt;Since we like the added challenge, one of our team member had to leave
for a couple of hours to see a &lt;a href=&quot;http://www.youtube.com/watch?v=56E8yYgLNHE&quot;&gt;Crystal Castle&lt;/a&gt;
concert nearby… but it worked out fine and to our surprise,
the minimal viable product was more or less ready around 4am! This was great
news because it meant that we could spend the remaining time adding the extra
features like some Facebook &lt;a href=&quot;https://developers.facebook.com/docs/concepts/opengraph/&quot;&gt;open graph&lt;/a&gt;
 or a better integration of &lt;a href=&quot;http://mapbox.com/&quot;&gt;mapbox&lt;/a&gt; to show how an object travelled.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img style=&quot;width: 350px; float: right;&quot; src=&quot;/assets/blog/screen2.png&quot; /&gt;&lt;img style=&quot;width: 350px; float: left; margin: 0px !important;&quot; src=&quot;/assets/blog/screen1.png&quot; /&gt;&lt;/div&gt;

&lt;div style=&quot;clear:both&quot;&gt;&amp;nbsp;&lt;/div&gt;

&lt;p&gt;It’s also good to note that at that point we already entered the phase where we didn’t really cared
about best practices, and it shows a lot in our &lt;a href=&quot;https://github.com/marcgg/thegoodslife/commits/master&quot;&gt;git log&lt;/a&gt;.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;&lt;img style=&quot;width: 500px;&quot; src=&quot;/assets/blog/gitlol.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;This is when I decided to get a couple hours of sleep while others stayed to work a bit more. Some will say that &lt;a href=&quot;/assets/blog/sleep.jpg&quot;&gt;sleep is for the weak&lt;/a&gt;, but I still think that getting rest in a hackathon is important. When you need to be able to focus and think, it’s always better to have some kind of sanity left or you’ll just end up coding bugs after bugs and get frustrated.&lt;/p&gt;

&lt;p&gt;There is also the solution of some of my teammates which was taking advantage of the free Redbulls. I guess it can work too.&lt;/p&gt;

&lt;div style=&quot;width:640px; margin: auto&quot;&gt;
&lt;iframe width=&quot;640&quot; height=&quot;400&quot; src=&quot;http://www.youtube.com/embed/c2iqbAirnAk?rel=0&quot; frameborder=&quot;0&quot;&gt;Loading&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&quot;pitching&quot;&gt;Pitching&lt;/h2&gt;

&lt;p&gt;Some of us started to prepare the pitch, while others were fixing the
last remaining bugs. For this presentation we decided before that we’d do a
a couple of slides followed by a screencast serving as demo.
This was a choice in order to avoid internet connections issues, aspect ratio problems on the video projector…
or really any Murphy’s law related incident.&lt;/p&gt;

&lt;div style=&quot;width:560px; margin: auto&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/mDdNOf0EKy4?rel=0&quot; frameborder=&quot;0&quot;&gt;Loading&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;While waiting we got to see the other teams’ presentation. When it was
close to our turn we were sent to another room, and let me tell you that even
I wasn’t the one giving the presentation,
&lt;a href=&quot;http://emiland.me/&quot;&gt;Emiland&lt;/a&gt; was, but I was stressing out for him.
I got the opportunity to pitch at the
&lt;a href=&quot;http://blog.tigerlilyapps.com/en/tigerlily-wins-the-facebook-mobile-hack-with-watchify-a-social-tv-web-app/&quot;&gt;last hackathon&lt;/a&gt;
I participated in, so I know how hard it can be. The fact that everything was in english
and we’re not native speakers didn’t help either.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;&lt;img style=&quot;width: 500px;&quot; src=&quot;/assets/blog/pres.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Overall the presentation went well, even if I failed to answer a question while
trying to save Emiland from failing to answer another question. We got
some very good feedbacks from the judges and then had to wait.&lt;/p&gt;

&lt;p&gt;After what seemed like a very long time, the winners and prizes were announced:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(1) Lugga.me, Track your bag talk to her. Tickets to San Francisco.&lt;/li&gt;
  &lt;li&gt;(2) Cubes, Unleash Your God Power. Tickets to San Francisco.&lt;/li&gt;
  &lt;li&gt;(3) The Goods Life, Give your goods a second life - or a third. 5 Macbook Pro 13” Retina Display.&lt;/li&gt;
  &lt;li&gt;(4) Hvid.io, World Wide Watch - Watch our World live. 3 iPad mini.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;While we didn’t make it to San Francisco we still got a cool prize
courtesy of &lt;a href=&quot;http://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt; and
managed to finish our project. It was also a great experience to create
something from the ground up quickly and get instantly feedbacks on it.&lt;/p&gt;

&lt;p&gt;I’m very proud of what we accomplished during this weekend. The team was
awesome as everybody had complementary skills and each team member had a major impact on the
result. This left me with the feeling that with the right group of people
and a good mindset you can really create great things.
I&lt;/p&gt;

&lt;p&gt;Overall I’d advise anyone that like &lt;a href=&quot;/blog/2012/01/09/start-working-on-your-side-project/&quot;&gt;starting projects&lt;/a&gt;
to participate in events like these. Gather a group of people or just find
teammates on the spot, it’ll be great.&lt;/p&gt;

&lt;p&gt;Exhausting, but great.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;&lt;img style=&quot;&quot; src=&quot;/assets/blog/team.png&quot; /&gt;&lt;/div&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Web Views &amp;amp; RubyMotion</title>
     <link href="https://marcgg.com/blog/2012/11/12/webviews-javascript-ios-rubymotion/"/>
     <updated>2012-11-12T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2012/11/12/webviews-javascript-ios-rubymotion</id>
     <content type="html">
       &lt;p&gt;Here we go, another article on &lt;a href=&quot;http://www.rubymotion.com/&quot;&gt;RubyMotion&lt;/a&gt;!
For those of you that don’t know what’s that’s all about, it’s a
toolchain created by &lt;a href=&quot;https://twitter.com/lrz&quot;&gt;Laurent Sansonetti&lt;/a&gt;
(of &lt;a href=&quot;http://macruby.org/&quot;&gt;MacRuby&lt;/a&gt; fame)
allowing you to create native iOS application using
&lt;a href=&quot;http://www.ruby-lang.org/&quot;&gt;Ruby&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I like it a lot, but please keep in mind that while I have a decent knowledge of Ruby, I’m
only using RubyMotion on a side project. I worked hard to get everything here
to work, but it still might not be the most
efficient way of doing it. If you do know a better solution, please
share it in the comments and I’ll update the article.&lt;/p&gt;

&lt;h2 id=&quot;our-objective&quot;&gt;Our Objective&lt;/h2&gt;

&lt;p&gt;Right now the general feeling is that in order to get the highest level of quality in
an app, you have to go native. I’m not disputing that, but there are some cases
where you just need to have some HTML, JS and CSS displaying. To do that,
the best way is to use the
&lt;a href=&quot;http://developer.apple.com/library/ios/#documentation/uikit/reference/UIWebView_Class/Reference/Reference.html&quot;&gt;UIWebView&lt;/a&gt;
element. It allows you to open html file and display them as if you were
in a browser.&lt;/p&gt;

&lt;p&gt;In this article I’ll try to demonstrate how to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Open a given website in a simple web view within a RubyMotion project.&lt;/li&gt;
  &lt;li&gt;Open a locally stored HTML file&lt;/li&gt;
  &lt;li&gt;Customize a bit the feel of the web view&lt;/li&gt;
  &lt;li&gt;Send a signal from the web view back to the application&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;I won’t get into the details on how to set up a project and will assume you have basic knowledge of how this works.
If you never created something with RubyMotion, please take a look at &lt;a href=&quot;http://rubymotion-tutorial.com/1-hello-motion/&quot;&gt;this tutorial&lt;/a&gt;
 before reading the rest of this article.&lt;/p&gt;

&lt;p&gt;RubyMotion uses &lt;a href=&quot;http://www.ruby-lang.org/&quot;&gt;Ruby&lt;/a&gt;. If you are not familiar with it, there
are tons of tutorials and books on how to code with this language. I
recommend &lt;a href=&quot;http://ruby.learncodethehardway.org/&quot;&gt;Learn Ruby The Hard
Way&lt;/a&gt; by &lt;a href=&quot;http://zedshaw.com/&quot;&gt;Zed A. Shaw&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-the-appdelegate&quot;&gt;Setting up the AppDelegate&lt;/h2&gt;

&lt;p&gt;This is pretty basic, we just set up a
&lt;a href=&quot;http://rubymotion-tutorial.com/3-controllers/&quot;&gt;controller&lt;/a&gt;
and assign it to be the root.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AppDelegate&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;didFinishLaunchingWithOptions&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:launchOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;initWithFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UIScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mainScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;main_controller&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MainController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rootViewController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main_controller&lt;/span&gt;

	&lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rootViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;wantsFullScreenLayout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;makeKeyAndVisible&lt;/span&gt;
	&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;opening-a-given-url&quot;&gt;Opening A Given URL&lt;/h2&gt;

&lt;p&gt;We’ll create the structure for a basic controller and set its view to be
a UIWebView. Then we’ll build an URL and load it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIViewController&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initWithNibName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;bundle: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loadView&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIWebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;viewDidLoad&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;loadRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	  &lt;span class=&quot;no&quot;&gt;NSURLRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;requestWithURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;NSURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;URLWithString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://marcgg.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p class=&quot;sidenote&quot;&gt;
EDIT: I moved the UIWebView.alloc.init to loadView
to avoid creating a UIView just to throw it away. Thanks to
&lt;a href=&quot;https://twitter.com/colinta&quot;&gt;Colin&lt;/a&gt; for pointing this out.
&lt;/p&gt;

&lt;p&gt;If we slow down things a bit, we have this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Creating a URL&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NSURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;URLWithString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://marcgg.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Creating a request based on the URL&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NSURLRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;requestWithURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Loading the request into the view (that is set to be our UIWebView)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;loadRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now if we run rake we see my website, and how badly it’s optimized for
mobile:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/uiweb1.png&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;opening-a-local-file&quot;&gt;Opening A Local File&lt;/h2&gt;

&lt;p&gt;It’s good to open a website, but what if you don’t have internet access,
or if you don’t need to load anything since you have already everything
you need ? That’s when you load your locally stored file.&lt;/p&gt;

&lt;p&gt;First, create an &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; file that you’ll store in &lt;code class=&quot;highlighter-rouge&quot;&gt;/resources&lt;/code&gt;.
Put whatever HTML you want inside, maybe a background color or something
similar to know if the file loaded properly.&lt;/p&gt;

&lt;p&gt;Once it’s done, tweak the controller so that it knows what’s up.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;viewDidLoad&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NSBundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mainBundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pathForResource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'index'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ofType: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NSURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fileURLWithPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;loadRequest&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NSURLRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;requestWithURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Run rake again, and you should see your file displaying.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/uiweb2.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;At this point you can customize the HTML however you want. Keep in mind
that if you use other files (css, js, images), they need to be stored in
&lt;code class=&quot;highlighter-rouge&quot;&gt;/ressources&lt;/code&gt; as well in order to be accessible. You might also need to
think about how you want to handle retina/non retina images.&lt;/p&gt;

&lt;h2 id=&quot;customize-the-uiwebview&quot;&gt;Customize The UIWebView&lt;/h2&gt;

&lt;p&gt;Here what I wanted to do is to forbid scrolling and just have a nice,
fixed, piece of HTML. This way it’ll feel more like a native piece of UI
than a web browser. To do so, you can change these parameters:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scrollView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scrollEnabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scrollView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bounces&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;javascript-communication&quot;&gt;Javascript Communication&lt;/h2&gt;

&lt;p&gt;It’s the part where it gets a bit more tricky. Here I want to have a
link somewhere in my HTML that triggers something in my RubyMotion code.
It could be a “cancel” link, a form… it doesn’t matter.&lt;/p&gt;

&lt;p&gt;To do that we’re going to use the logic behind &lt;code class=&quot;highlighter-rouge&quot;&gt;shouldStartLoadWithRequest&lt;/code&gt;
and the whole &lt;a href=&quot;http://developer.apple.com/library/ios/#documentation/uikit/reference/UIWebViewDelegate_Protocol/Reference/Reference.html&quot;&gt;UIWebViewDelegate&lt;/a&gt; thing. I’m not an iOS master yet, so please bear with me on
the domain-specific vocabulary.&lt;/p&gt;

&lt;p&gt;First we’re going to add a delegate to our view. Here I’ll use the
current controller because it’s a rather small project, but feel free to
use any object you want.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we can use the fact that our controller, being the delegate of a
UIWebview, will have its shouldStartLoadWithRequest method called before
any frame is loaded. Let’s write our own method and see how it goes.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;shouldStartLoadWithRequest: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;navigationType: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;absoluteString&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here we have the bare minimum to get started. You’ll notice we have a couple of
parameters. In this article I’ll just use the request, but know that the
others can be usefull too. Read the
&lt;a href=&quot;http://developer.apple.com/library/ios/#documentation/uikit/reference/UIWebViewDelegate_Protocol/Reference/Reference.html&quot;&gt;documentation&lt;/a&gt;
if you want to learn more.&lt;/p&gt;

&lt;p&gt;Now if we launch rake one more time and look at the trace, we can see the
current path to the local file we’re loading.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;your&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;your&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is useless, but now let’s add a link in the &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; file. Now
if you point it to a regular website, it’ll just load it. It’s not what
we want right now. Instead we’ll create our own protocol (lol) as such:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myapp://do/something&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Click this&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;By now you must have figured out where we’re heading like that. Since we
have our callback thanks to the UIWebViewDelegate protocol, we can parse
the URL and do process it how we want. I added a basic example below,
but really you can do whatever.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;shouldStartLoadWithRequest: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;navigationType: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;absoluteString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/myapp:\/\//&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Do something!&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;This is just another link&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In the same fashion you can trigger the page change using javascript.
This should be pretty basic stuff here.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;myapp://some\_awesome/message&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;By now you should have noticed how I always return true. It’s because if
you return false the frame won’t load. You can use this fact to forbid
the user to click certain links on the page, or disable browsing
altogether.&lt;/p&gt;

&lt;h2 id=&quot;a-quick-security-note&quot;&gt;A Quick Security Note&lt;/h2&gt;

&lt;p&gt;We now have an HTML page talking to your iOS app ! Pretty cool, but be carefull
on how you allow this to happen, since you really don’t want
any website sending funky signals to your app. Make sure you don’t
execute any message you receive.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;shouldStartLoadWithRequest: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;navigationType: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# I'm an Idiot&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;MyVeryImportantModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;absoluteString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It should be pretty obvious, but it’s still worth mentioning.&lt;/p&gt;

&lt;h2 id=&quot;hurray-&quot;&gt;Hurray !&lt;/h2&gt;

&lt;p&gt;We now have a web view loading a local file and talking to the Ruby part
of the application using Javascript. Neat ! Of course there’s a lot more you can do with
this, and you should probably add some kind of cool DSL in front of it
if you’re going to do this frequently.&lt;/p&gt;

&lt;p&gt;As always, you can look up the whole project on &lt;a href=&quot;https://github.com/marcgg/rubymotion-uiwebview&quot;&gt;github&lt;/a&gt;.
It is compiling and working as I write this article, but keep in mind that RubyMotion is a fast moving
project and it might not be the case in a few months.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Create a Custom Slider With RubyMotion</title>
     <link href="https://marcgg.com/blog/2012/10/22/custom-slider-ios-rubymotion/"/>
     <updated>2012-10-22T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2012/10/22/custom-slider-ios-rubymotion</id>
     <content type="html">
       &lt;p&gt;I always liked the idea of developing mobile applications, but also found the Objective C + XCode experience not very enjoyable. I gave alternatives like &lt;a href=&quot;http://www.appcelerator.com/platform/titanium-sdk/&quot;&gt;Titanium&lt;/a&gt; a try, but wasn’t fully convinced. Lately I’ve been getting into &lt;a href=&quot;http://www.rubymotion.com/&quot;&gt;RubyMotion&lt;/a&gt; and so far I’m really impressed by the general feel of it.&lt;/p&gt;

&lt;p&gt;Alas it’s not perfect. My main grief right now about the project
is the terrible lack of documentation.
The community is also still small and while you can still
find &lt;a href=&quot;https://twitter.com/vacawama&quot;&gt;helpful&lt;/a&gt; &lt;a href=&quot;https://twitter.com/julienXX&quot;&gt;people&lt;/a&gt;,
you often end up alone with your code.
That’s why I figured I would contribute my share of blog posts on the subject! Hopefully it’ll help out some people.&lt;/p&gt;

&lt;p&gt;Keep in mind that while I’m well versed in Ruby, I’m quite new to RubyMotion and might make some mistakes… so please comment if I do and I’ll fix the article. RubyMotion is also evolving, therefore while this article works perfectly today, it might not be the case in a few months.&lt;/p&gt;

&lt;p&gt;With all that in mind, let’s get started shall we?&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;I won’t get into the details on how to set up a project and will assume you have basic knowledge of how this works.
If you never created something with RubyMotion, please take a look at &lt;a href=&quot;http://rubymotion-tutorial.com/1-hello-motion/&quot;&gt;this tutorial&lt;/a&gt;
 before reading the rest of this article.&lt;/p&gt;

&lt;p&gt;RubyMotion uses &lt;a href=&quot;http://www.ruby-lang.org/&quot;&gt;Ruby&lt;/a&gt;. If you are not familiar with it, there
are tons of tutorials and books on how to code with this language. I
recommend &lt;a href=&quot;http://ruby.learncodethehardway.org/&quot;&gt;Learn Ruby The Hard
Way&lt;/a&gt; by &lt;a href=&quot;http://zedshaw.com/&quot;&gt;Zed A. Shaw&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;our-objective&quot;&gt;Our Objective&lt;/h2&gt;

&lt;p&gt;I’ll try to explain how to customize a
&lt;a href=&quot;http://developer.apple.com/library/ios/#documentation/uikit/reference/UISlider_Class/Reference/Reference.html&quot;&gt;UISlider&lt;/a&gt;
 to get the look and feel matching the design of your application.
Here’s what’s the demo code will give you:&lt;/p&gt;

&lt;iframe src=&quot;http://www.screenr.com/embed/v0y8&quot; width=&quot;100%&quot; height=&quot;396&quot; frameborder=&quot;0&quot;&gt;Loading&lt;/iframe&gt;

&lt;h2 id=&quot;setting-up-the-appdelegate&quot;&gt;Setting up the AppDelegate&lt;/h2&gt;

&lt;p&gt;This is pretty basic, we just set up a
&lt;a href=&quot;http://rubymotion-tutorial.com/3-controllers/&quot;&gt;controller&lt;/a&gt;
and assign it to be the root.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AppDelegate&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;didFinishLaunchingWithOptions&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:launchOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;initWithFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UIScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mainScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;main_controller&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MainController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rootViewController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main_controller&lt;/span&gt;

	&lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rootViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;wantsFullScreenLayout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
	&lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;makeKeyAndVisible&lt;/span&gt;
	&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;displaying-a-uislider&quot;&gt;Displaying a UISlider&lt;/h2&gt;

&lt;p&gt;Now we need to create the MainController. I like to put it in app/controllers,
with the usual basic structure.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIViewController&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loadView&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initWithNibName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;bundle: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;viewDidLoad&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;# Everything is now going to go there&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now you can run the application with rake and it’ll display a black
screen. This means we’re all set up and it’s time to actually start
coding. Everything we’re going to write from now on will be after the super the
viewDidLoad method.&lt;/p&gt;

&lt;p&gt;First, the slider:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UISlider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;initWithFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;320&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will create a slider taking the whole width of the screen and position it
more or less in the center. Once it’s created, we need add it to the
view so it’ll display correctly.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addSubview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Run rake again, and you should see something like this:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/slider1.png&quot; alt=&quot;Custom Sliders Demo&quot; /&gt;&lt;/div&gt;

&lt;p&gt;If you want, you can set the maximum and default values:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;maximumValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;maximumValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;setting-track-images&quot;&gt;Setting Track Images&lt;/h2&gt;

&lt;p&gt;A UISlider is composed of different elements. The sliding thingy is
called the track and the other round thingy you grab to drag is the thumb.
On the left of the thumb we have the minimum track, on the right the
maximum track. The &lt;a href=&quot;http://developer.apple.com/library/ios/#documentation/uikit/reference/UISlider_Class/Reference/Reference.html&quot;&gt;official documentation&lt;/a&gt;
explains that with a better display of vocabulary than I do, but you get the idea.&lt;/p&gt;

&lt;p&gt;Let’s change the track image to display and image.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;imageNamed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;full&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;imageNamed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;empty&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setMinimumTrackImage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;forState: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UIControlStateNormal&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setMaximumTrackImage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;forState: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UIControlStateNormal&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can notice that I use two images “full” and “empty”. To get them to
load correctly, put them in the resources folder of your rubymotion
project. If they are PNGs you don’t need to specify the format.&lt;/p&gt;

&lt;p&gt;Right now the minimum track image is stretching to fit its space.
It might be what you want, but that’s not my case so let’s add the
following code before giving the image to the slider.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# You need an image that is the exact size of the slider&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# or else it might not look good&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;full&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;resizableImageWithCapInsets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;UIEdgeInsetsZero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;resizingMode: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UIImageResizingModeTile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;At this point we have this:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/slider2.png&quot; alt=&quot;Custom Sliders Demo&quot; /&gt;&lt;/div&gt;

&lt;p&gt;This is pretty good, but the thumb in the middle doesn’t look like it
belongs. Let’s fix that.&lt;/p&gt;

&lt;h2 id=&quot;customizing-the-thumb&quot;&gt;Customizing The Thumb&lt;/h2&gt;

&lt;p&gt;You can pass an image to set the thumb to whatever you want using the
same logic as what we did with the tracks. Personnally I prefer removing
the thumb entirely, so here’s how to do that:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setThumbImage&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;forState: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UIControlStateNormal&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This gives you:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/rubymotion_sliders.png&quot; alt=&quot;Custom Sliders Demo&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Of course you could have done something like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;whatever&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;imageNamed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;whatever&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setThumbImage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;whatever&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;forState: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UIControlStateNormal&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;making-the-slider-easier-to-slide&quot;&gt;Making The Slider Easier to Slide&lt;/h2&gt;

&lt;p&gt;Right now it’s looking how we want it, but the problem the thumb is
hidden, but you still have to click exactly where it used to be in order
to change the slider’s value. Since the
UISlider is a taller than the default one, you have have to click right
in the middle of your new slider in order to grab it.&lt;/p&gt;

&lt;p&gt;That’s not good UX. I order to avoid this we can enlarge the size of the area that
is selectable:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;trackRectForBounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;CGRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CGPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CGSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Depending on the size of your images and the general feeling you want to
get, play around with this area you’re defining.&lt;/p&gt;

&lt;h2 id=&quot;thats-it&quot;&gt;That’s It!&lt;/h2&gt;

&lt;p&gt;Obviously these are not the only customizations you can make to a
UISlider, but I think it’s a good start. If people are interested
I might make another one on events or visual tricks you can use
to make a slider look cooler.&lt;/p&gt;

&lt;p&gt;If you find this avalanche of code snippets not very usuable,
you can look at the whole project
on &lt;a href=&quot;https://github.com/marcgg/rubymotion-custom-slider&quot;&gt;github&lt;/a&gt;. It is
compiling and working as I write this article, but keep in mind that
RubyMotion is a fast moving project and it might not be the case in a
few months.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Don’t Accept Brokenness</title>
     <link href="https://marcgg.com/blog/2012/10/15/dont-accept-brokeness-deal-with-annoyances/"/>
     <updated>2012-10-15T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2012/10/15/dont-accept-brokeness-deal-with-annoyances</id>
     <content type="html">
       &lt;p&gt;For a while I had a problem with my jaw. Ten years back I got elbowed in the face (don’t ask), and since then I had trouble yawning or just opening my mouth wide open. I could try to do it, but it would result in the whole thing locking and a good deal of pain.&lt;/p&gt;

&lt;p&gt;The first months I was annoyed, but as time passed I learned to live with it. After all, it was really nothing important. I could eat, speak and do pretty much anything normally. I accepted this as part of how my body functions. Some can’t do a right split, I can’t open my mouth that wide, who cares? I learned how to avoid doing this, and carried on.&lt;/p&gt;

&lt;p&gt;This year I had to see a doctor regarding some unrelated issue, and I ended up mentioning this fact. She told me that she could take a look at it and, in literally a matter of seconds, she fixed the problem. It’s been a few months and while it’s still not perfect, it’s incredibly better.&lt;/p&gt;

&lt;p&gt;In seconds a ten years problem was fixed.&lt;/p&gt;

&lt;p&gt;Seconds.&lt;/p&gt;

&lt;p&gt;Of course this got me thinking: what else is broken that I’m accepting as it is ? At first I went through all the very minor physical problem I was having and discussed it with her. While some were fixable, others were not and some could be improved.&lt;/p&gt;

&lt;p&gt;But here’s the thing, that approach doesn’t only apply to health issues. As a matter of fact it works for pretty much everything ! When facing a problem, the easiest response is to simply accept it and deal with it… while sometimes trying to fix the problem is actually faster, requires less work and is less expensive!&lt;/p&gt;

&lt;p&gt;Another example I could give is a door in my appartment that would require you lifting a bit the handle before being able to close it. I did that for months until one day I decided to stop for one second and look at what was going on. In ten minutes I figured it out and was able to fix it by replacing a screw or two.&lt;/p&gt;

&lt;p&gt;These are just my examples, but for you it could be one piece of legacy code that’s always getting in your way inside your application, or this door that just won’t open without having to jiggle your keys for minutes. It could be this light that flickers a bit, or the fact that you keep on smashing your toes in the same piece of furniture.&lt;/p&gt;

&lt;p&gt;All these are minor inconveniences, but you deal with them every day. They waste your time, build frustration, and you don’t even see it because it’s always been like that as far as you can remember!&lt;/p&gt;

&lt;p&gt;I’m not saying that everything is fixable, because it’s not true. I’m saying you should take a minute every once in a while to ask yourself if this tiny thing really is unavoidable, if doing something to fix it wouldn’t actually be easier than dealing with it every day.&lt;/p&gt;

       
     </content>
   </entry>
  
 
  
   <entry>
     <title>How I Avoid Thumb Pain From Too Much Coding</title>
     <link href="https://marcgg.com/blog/2012/10/01/thumb-pain-developer-keyboard/"/>
     <updated>2012-10-01T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2012/10/01/thumb-pain-developer-keyboard</id>
     <content type="html">
       &lt;p&gt;Most coders complain about wrist pain. For some reason I never had major trouble there except when working for hours on a laptop. My main issue seemed more original and was located in &lt;a href=&quot;http://en.wikipedia.org/wiki/Thenar_eminence&quot;&gt;the group of muscles controlling the thumb&lt;/a&gt;. Suddently it would hurt for days, then go away, then come back… good times.&lt;/p&gt;

&lt;p&gt;Eventually I mentioned it to a kinesiotherapist, and the conversation was very similar to the famous joke that goes something like:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;« Doctor, it hurts when I do this.&lt;/p&gt;

  &lt;p&gt;-Don’t do it then! »&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of course this got me thinking: why do I use my thumb so much?&lt;/p&gt;

&lt;p&gt;Turns out that the movement of pressing a combination of keys was the thing causing the pain. Of course doing it every once in a while has no consequence, but as a web developer I spend my day opening browser tabs (cmd+T), refreshing pages (cmd+R) and copy and pasting (cmd+C, cmd+V).&lt;/p&gt;

&lt;div style=&quot;width:560px; margin: auto&quot;&gt;
&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/tCJSJBV85cw?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/tCJSJBV85cw?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&lt;/div&gt;

&lt;p&gt;As you can see on this terribly filmed video, I tend to twist a bit the thumb to press both keys at the same time. It’s not much but because it’s not a natural position, the repetition of this hundreds of times a day would cause pain.&lt;/p&gt;

&lt;p&gt;My first idea was to force myself to use the second cmd button, but I didn’t like it since it would require taking my hand off the mouse for a second. What worked for me was &lt;a href=&quot;http://stackoverflow.com/questions/127591/using-caps-lock-as-esc-in-mac-os-x&quot;&gt;changing the mapping of Caps Lock&lt;/a&gt; to Cmd so I could do the gesture with one hand. This allowed me to use my little finger for these action and avoid stressing the thumb muscles.&lt;/p&gt;

&lt;p&gt;I’ve been doing this for a few months now, and I do see a difference. If you encounter the same problem, feel free to try this solution out and let me know if it helped!&lt;/p&gt;

       
     </content>
   </entry>
  
 
  
   <entry>
     <title>The Risks of Working With Another Company's API</title>
     <link href="https://marcgg.com/blog/2012/09/24/working-with-apis-facebook/"/>
     <updated>2012-09-24T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2012/09/24/working-with-apis-facebook</id>
     <content type="html">
       &lt;p&gt;Before we begin let me give you a little background on why I’m writing this article.&lt;/p&gt;

&lt;p&gt;I’ve been working with the Facebook platform for almost 3 years now. I also wrote code using the APIs provided by Twitter, Instagram, Flickr, Google, Foursquare, Amazon, Youtube, Spotify and others. I’ve participated in building products like the &lt;a href=&quot;http://www.tigerlilyapps.com/conversation&quot;&gt;Tigerlily Conversation Suite&lt;/a&gt; or &lt;a href=&quot;http://ffocused.com&quot;&gt;ffocused&lt;/a&gt;, both heavily relying on some of those API. In the process I learned a lot on how to handle these services, their evolutions and their problems.&lt;/p&gt;

&lt;p&gt;This post is nothing but my point of view and advices to people wanting to build on top of an existing platform. I don’t know everything, I just know the problems I’ve encountered, how I delt with them and how I avoided them afterward.&lt;/p&gt;

&lt;p&gt;That’s all for disclaimer, let’s dig in.&lt;/p&gt;

&lt;h2 id=&quot;being-cautious-the-real-cost-of-a-feature&quot;&gt;Being Cautious: The Real Cost of a Feature&lt;/h2&gt;

&lt;p&gt;The main thing I learned in the process is that you have to be very cautious in how you start using a new API. When you discover all the possibilities for the first time, you just want to jump in and create something. The catch is that everything might not be as bright as it seems.&lt;/p&gt;

&lt;p&gt;Some features may be buggy while others are deprecated. I’m not saying that they often are, just that they might be. You should consider the fact that everything will not go as planed and that this is going to have a cost.&lt;/p&gt;

&lt;p&gt;It’s all about understanding that &lt;a href=&quot;http://gettingreal.37signals.com/ch05_Start_With_No.php&quot;&gt;the real cost of the feature&lt;/a&gt; is not the time it’s going to take to develop it. You also have to take into account the time you’re going to spend maintaining it, and the friction it’s going to have with other components of your system. I like how &lt;a href=&quot;https://twitter.com/tenderlove&quot;&gt;Aaron Patterson&lt;/a&gt; describes this feeling as the lower tolerance for technical debt experienced developers have.&lt;/p&gt;

&lt;div style=&quot;width:560px; margin: auto&quot;&gt;
&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/8kSfGgiFk48?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&amp;amp;start=1075&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/8kSfGgiFk48?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&amp;amp;start=1075&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&lt;/div&gt;

&lt;p&gt;Let’s say you want to add a Facebook or Twitter connect to your website. Implementing it is &lt;a href=&quot;http://developers.facebook.com/docs/guides/web/#login&quot;&gt;dead simple&lt;/a&gt;… but what if Facebook is down for a while, or if it glitches out and your users can’t log in? What if they totally revamp their login system and this time it takes months to fix it? What if you want to handle users in a specific way and this connect feature is now getting in the way?&lt;/p&gt;

&lt;p&gt;You have to evaluate if it’s worth the risk of delegating a part of your system to another company. Sometimes it can be the best move you can make, but it can also be a mistake that will cost you precious time.&lt;/p&gt;

&lt;p&gt;I sometimes think of it like AJAX at the beginning of the «web 2.0» era. Everyone started creating full AJAX websites because the possibilities were so amazing. For some it was great, but in other cases it was very gimmicky, didn’t provide any real end-user value and had terrible issues in term of maintenance.&lt;/p&gt;

&lt;h2 id=&quot;its-not-as-simple-as-you-might-think&quot;&gt;It’s Not As Simple As You Might Think&lt;/h2&gt;

&lt;p&gt;Thinking about connecting to an API as something trivial can only work for a small side project or a minor feature.&lt;/p&gt;

&lt;p&gt;If you want to build a company around a platform, satisfy customers and make money with it that’s when it becomes complex. The simplest example I can give you is rate limitations. This alone could kill a project or at least diminish its value enough to render it useless.&lt;/p&gt;

&lt;p&gt;Stop thinking that you’ll be able to scrap the entire data on Twitter and provide amazing analytics just by having a couple of crons running on a small server. It’s not going to work because it’s not going to &lt;a href=&quot;http://www.youtube.com/watch?v=b2F-DItXtZs&quot;&gt;scale&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My advice would to have a clear focused vision on where you can provide a real value and keep it realistic. Basing your product on an amazing platform is a great opportunity we’re given, but it should not be seen as the golden hammer of product design.&lt;/p&gt;

&lt;h2 id=&quot;things-will-change&quot;&gt;Things Will Change&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/fbml.jpg&quot; style=&quot;float:right; width:210px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Any third party API you’re going to use is going to change. It’s a good thing. You want it to provide more features, to adapt to follow the best practices and so on. The real question here is not «Is it going to change ?» - because it will, but «Is my system and product flexible enough to handle the changes ?».&lt;/p&gt;

&lt;p&gt;First, if you base your entire product on one API feature, you are taking huge risks. The company providing the service might just turn it off at any point… just ask the people that were building on top of the &lt;a href=&quot;http://googlecode.blogspot.fr/2011/05/spring-cleaning-for-some-of-our-apis.html&quot;&gt;Google Translate API&lt;/a&gt;, creating &lt;a href=&quot;http://developers.facebook.com/blog/post/568/&quot;&gt;only FBML applications&lt;/a&gt; or building a &lt;a href=&quot;http://thenextweb.com/twitter/2012/08/17/twitter-4/&quot;&gt;Twitter client&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Secondly, your code needs to be separated enough so that a change in the third party API only impacts a minimal part of your system. This is where you really have to follow &lt;a href=&quot;http://en.wikipedia.org/wiki/Law_of_Demeter&quot;&gt;Demeter’s law&lt;/a&gt;. Simply put, have a good interface somewhere that allows you to limit the number of places in which you have API handling code.&lt;/p&gt;

&lt;h2 id=&quot;things-will-break&quot;&gt;Things Will Break&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/movefast.png&quot; style=&quot;float:right; width:210px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ve reported over 200 bugs on the Facebook platform. Some were fixed, some were impossible to reproduce accurately and other were just disregarded because considered as weird edge cases.&lt;/p&gt;

&lt;p&gt;This is not surprising, an API is not an all knowing oracle! It’s software and software breaks… especially within &lt;a href=&quot;http://startupquote.com/post/1624569753&quot;&gt;startups moving fast&lt;/a&gt;. I can’t imagine how complex maintaining a platform such as Facebook or Twitter can be, but I’m sure that the engineers behind it, as talented as they are, will let bugs slip.&lt;/p&gt;

&lt;p&gt;These bugs are not the same as a glitch in your system. You can’t fix them yourself. The only you can do and that’s having a system that is resilient to these API failures.&lt;/p&gt;

&lt;p&gt;Maybe you think that it’s as easy as when there’s a crash due to a bad API call, rescue the exception and use the response code to give a nicely formatted error to the end user. Sometimes it is just that, but let me ask you this. What if :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There is no error code or it is not the correct one&lt;/li&gt;
  &lt;li&gt;The response is &lt;a href=&quot;http://developers.facebook.com/bugs/349799231758647&quot;&gt;corrupted&lt;/a&gt; (bad formatting, bad charset, incompleteness)&lt;/li&gt;
  &lt;li&gt;The response seems correct but has no sense («Q: What’s the user’s age? A: John»)&lt;/li&gt;
  &lt;li&gt;The response is correct but the action hasn’t be made&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You should handle some of these situations depending on the level of stability you want to achieve. Obviously if it’s something that is not important, do not waste your time trying to make it bullet proof. Put the time and effort into it if it’s a critical part of your application.&lt;/p&gt;

&lt;h2 id=&quot;example-scaling-a-quick-facebook-comments-fetching-system-with-no-data-loss&quot;&gt;Example: Scaling a Quick Facebook Comments Fetching System With No Data Loss&lt;/h2&gt;

&lt;p&gt;One of the applications I work on needed to get all the comments left on a given Facebook page. The system would then take the comments and process them in a way that would add value for the community managers using the app. It was crucial that we got 100% of the comments in a timely fashion.&lt;/p&gt;

&lt;p&gt;At first we wanted to get all the posts and process them in batches using the &lt;a href=&quot;http://developers.facebook.com/docs/reference/api/batch/&quot;&gt;Batch API&lt;/a&gt;, but at the time this API was very unstable. We tried processing all posts independently in one big routine and this quickly showed its limit as some API calls will time out, impacting the fetching of others comments that were left waiting. Adding a queuing system and ways to retry a given job solved that issue.&lt;/p&gt;

&lt;p&gt;We then discovered that Facebook has an undocumented limit of ~800 comments per call. Asking for more will not return an error but a random number of comments. We changed the system to take smaller batches of comments and use Facebook pagination system. The bad news is that it would sometimes glitch and results in an &lt;a href=&quot;http://developers.facebook.com/bugs/127681480703469&quot;&gt;infinite loop&lt;/a&gt;. Some other times everything will seem fine but some comments would be missing for unknown reasons.&lt;/p&gt;

&lt;p&gt;The solution here was to create methods able to determine if the comments returned were valid or not and decide when to stop fetching.&lt;/p&gt;

&lt;p&gt;As you can see, the first approach «gimme all of them comments» does not work when you deal with &lt;a href=&quot;http://developers.facebook.com/bugs/438731489482335&quot;&gt;large amounts&lt;/a&gt; of &lt;a href=&quot;http://developers.facebook.com/bugs/389080567815236&quot;&gt;items&lt;/a&gt;. This might not be a problem for most people building apps dealing with only a couple dozens of comments, but our product target big brands with a crazy amount of user interactions. Therefore it was very important that we got it right as it was at the core of what we were trying to achieve. The time and effort spent into building a fetching system that would work as good as possible had a real value so it was a wise choice to do it that way.&lt;/p&gt;

&lt;p&gt;It’s all about knowing what you’re trying to do and how good you need it to be. Sometimes good enough is what you shoot for, but in other cases you need something that’s as flawless as you can get. What you don’t want is to realize that this simple API call turned into months of unplanned development.&lt;/p&gt;

&lt;h2 id=&quot;as-a-developer&quot;&gt;As A Developer&lt;/h2&gt;

&lt;p&gt;Developing systems relying heavily on APIs you don’t control requires a lot of &lt;a href=&quot;http://en.wikipedia.org/wiki/Defensive_programming&quot;&gt;discipline&lt;/a&gt;. You have to make a lot of assumptions about what the other company’s going to do and be ready for random things to happen. It’s complicated and can be frustrating at times when you see features you build fall apart because of a change you have no control over.&lt;/p&gt;

&lt;p&gt;Of course it’s not all grim or else I wouldn’t have been crazy enough to do it for so long!&lt;/p&gt;

&lt;p&gt;It’s an interesting challenge to build something able to overcome all these problems and provide real value despite it. Personally it allowed me to learn a lot, tackle complex problems and grow as a developer. It’s also great to have a dataset as huge as Twitter or Facebook to put into your system. Everything seems to be at a larger scale right away and the possibilities from a product perspective are broaden.&lt;/p&gt;

&lt;p&gt;Finaly I’ll add that this is a good learning experience for when you get to the point where you need to build your own API… because everyone wants to build a cool API! You’ve seen how it’s done, the mistakes made, the good ideas, the architecture behind it…&lt;/p&gt;

&lt;p&gt;I can safely say that &lt;a href=&quot;http://www.sethcall.com/blog/2010/09/30/facebook-api-does-not-care/&quot;&gt;it will be infuriating&lt;/a&gt; at times, but within a focused and understanding team, it’s all manageable and the result can be awesome.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>The One Thing That Made Me Switch To Vim</title>
     <link href="https://marcgg.com/blog/2012/09/04/one-reason-to-switch-to-vim-editor/"/>
     <updated>2012-09-04T00:00:00+02:00</updated>
     <id>https://marcgg.com/blog/2012/09/04/one-reason-to-switch-to-vim-editor</id>
     <content type="html">
       &lt;p&gt;I know, I know, this has been done to death, but stay with me for a second. I’m not here to tell you that Vim is the best editor out there, just to tell you the one reason that got me to switch.&lt;/p&gt;

&lt;p&gt;Like every developer with some curiosity, I tried a ridiculous amount of text editors and IDEs. I started with Notepad at first, but quickly discovered that some text editors would actually help you. I downloaded &lt;a href=&quot;http://download.cnet.com/Amiasoft-SiteAid/3000-10247_4-10015046.html&quot;&gt;SiteAid&lt;/a&gt; and enjoyed the gain of productivity. Then I quickly moved on to Scite, Eclipse, Netbeans, Notepad++, Emacs, Text Edit, Rad Rails, Kate, Rubymine, TextMate, Sublime… the list goes on.&lt;/p&gt;

&lt;p&gt;At some point I realized that I was wasting my time learning slightly different shortcuts and ways of setting up a project. I began to consider Vim seriously because it stood the test of time and seemed cool for some reason, but really the one thing that convinced me was a problem I had at my job.&lt;/p&gt;

&lt;p&gt;One day something went wrong on a server running Debian. The sysadmin was not around and I ended up being the one that had to go on there and fix it. It was linked to some config files that were not properly set up, and the only editor available was Vim.&lt;/p&gt;

&lt;p&gt;Back then I had almost &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/intro.html&quot;&gt;no clue&lt;/a&gt; on how to use it.&lt;/p&gt;

&lt;p&gt;It resulted in me editing the files as a 70 years old guy that just discovered what a keyboard is. It was painful to watch to say the least. Of course while this was going on, the server was more or less down. Pure joy if you ask me!&lt;/p&gt;

&lt;p&gt;Even before this incident, more than a couple of times I had to inject some debug lines on the code deployed on our staging server to figure out a very environment-specific bug, but it wasn’t as stressful as this time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It felt terrible to be so lost with a task as simple as editing a file.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is why I decided to use Vim as my primary editor. It already had enough qualities to be a good choice, but the fact that it is set up on most servers was the final selling point for me.&lt;/p&gt;

&lt;p&gt;Sometimes you just need to be able to fire up Vim and be very fast using it. You don’t even have to &lt;a href=&quot;http://yehudakatz.com/2010/07/29/everyone-who-tried-to-convince-me-to-use-vim-was-wrong/&quot;&gt;be snob while doing it&lt;/a&gt;.&lt;/p&gt;


       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Start Working on Your Side Project Tonight</title>
     <link href="https://marcgg.com/blog/2012/01/09/start-working-on-your-side-project/"/>
     <updated>2012-01-09T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2012/01/09/start-working-on-your-side-project</id>
     <content type="html">
       &lt;p&gt;To me a side project is taking an idea and building it from scratch. You do not have to complete it, it doesn’t need a business model or turn into a company over time, it doesn’t even need to make sense to other people than you. It is just a way to experiment. If later on it turns out into a successful company, good for you, but it doesn’t have to be your goal.&lt;/p&gt;

&lt;p&gt;If you’re like me, you think that development is a creative process, and should be treated as such. So what better way to be more creative than by removing all the usual constraints of a day job – deadlines, &lt;a href=&quot;http://en.wikipedia.org/wiki/Legacy_code&quot;&gt;legacy code&lt;/a&gt;, clients, etc. – and just building something for fun and the sake of building something cool!&lt;/p&gt;

&lt;p&gt;Doing a side project is a great way to experiment with new technologies, try new processes and be able to fail with absolutely no consequences other than maybe a few hours wasted… and even then this time isn’t really lost because you tried and you learned something. It might not be much, but it could turn out to be a key point at your next job interview, or it could give you a better insight at what you do in your day job.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/startupweekend.png&quot; style=&quot;float:right; width:250px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By know you might notice that this article is more directed towards people with some experience in development, but the concepts and ideas are the same for everyone. Everybody can benefit from having a side project. If you don’t have a technical background you could go to a Startup Weekend with an idea or team up with a developer. You could also &lt;a href=&quot;http://codeyear.com/&quot;&gt;learn how to code&lt;/a&gt;, &lt;a href=&quot;http://ror.kateray.net/post/1312957018/the-internet-teaches-you-ruby-on-rails&quot;&gt;it won’t be time wasted&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id=&quot;great-startups-can-come-out-of-side-projects&quot;&gt;Great startups can come out of side projects&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/basecamp.png&quot; style=&quot;float:right; width:200px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You’ve probably heard about Gmail starting of as a 20% time project (as in the amount of time a developer there can spend on other projects than the ones they’re assigned). This isn’t the only example.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://craigslist.com/&quot;&gt;Craigslist&lt;/a&gt; was Craig Newmark side project started in 1995 and only turned into a real company in 1999. &lt;a href=&quot;http://basecamp.com/&quot;&gt;Basecamp&lt;/a&gt;, a very successful project management software was initially an internal tool of 37signals that answered &lt;a href=&quot;http://gettingreal.37signals.com/ch02_Whats_Your_Problem.php&quot;&gt;their own problems as a design firm&lt;/a&gt;. &lt;a href=&quot;http://www.instapaper.com/&quot;&gt;Instapaper&lt;/a&gt; was started by Marco Arment &lt;a href=&quot;http://bits.blogs.nytimes.com/2010/09/23/instapaper-goes-from-hobby-to-startup/&quot;&gt;while he was CTO at Tumblr&lt;/a&gt;. You can even say that Twitter was a side project of &lt;a href=&quot;http://articles.businessinsider.com/2011-04-13/tech/29957143_1_jack-dorsey-twitter-podcasting&quot;&gt;a group of people working at Odeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/hashtagbattle.png&quot; style=&quot;float:right; width:150px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In France there are also examples such as &lt;a href=&quot;http://hashtagbattle.com/&quot;&gt;HashtagBattle&lt;/a&gt; that was a &lt;a href=&quot;http://startupweekend.org/&quot;&gt;startup weekend&lt;/a&gt; project and ended up getting a lot of exposure. &lt;a href=&quot;http://www.tigerlilyapps.com/&quot;&gt;Tigerlily&lt;/a&gt; was created during a &lt;a href=&quot;http://en.wikipedia.org/wiki/Hackathon&quot;&gt;hackaton&lt;/a&gt;, &lt;a href=&quot;http://www.super-marmite.com/&quot;&gt;Super Marmitte&lt;/a&gt; was a side project until it got exposure at LeWeb in 2010…&lt;/p&gt;

&lt;p&gt;You can read more about the beginning of some of these projects in &lt;a href=&quot;http://books.google.fr/books?id=ktm885vGIXEC&amp;amp;lpg=PA161&amp;amp;ots=vTvMWfQH8g&amp;amp;dq=gmail%20side%20project&amp;amp;pg=PR2#v=onepage&amp;amp;q&amp;amp;f=false&quot;&gt;Founders at Work by Jessica Livingston&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;you-dont-have-to-be-that-ambitious&quot;&gt;You don’t have to be that ambitious&lt;/h2&gt;

&lt;p&gt;Take my latest side project for example. &lt;a href=&quot;https://twitter.com/gflandre&quot;&gt;A friend&lt;/a&gt; and I somehow got ourselves thinking it’d be fun if we could &lt;a href=&quot;http://whatsmyairport.com/&quot;&gt;match people’s initials with airport codes&lt;/a&gt;. This coincided with the release of a new version of my favorite framework that I wanted to try out. We decided to use it to create a project and learn about this new technology in the process. It took us a few evenings of work and we learned a lot while having fun.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/assets/misc/airport.jpg&quot; style=&quot;width:550px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;It doesn’t scale, there’s no way to make money out of it… but really there is no need to try to create the next Facebook! Simply do something that you like and that will teach you something, and then maybe you’ll create a new hit startup. First, take it only for what you’ll learn and the experience you’ll gain from it.&lt;/p&gt;

&lt;h2 id=&quot;ok-i-get-it-side-projects-are-great-but-i-just-dont-have-the-time&quot;&gt;“Ok I get it, side projects are great, but I just don’t have the time!”&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/love.png&quot; style=&quot;float:right; width:150px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;… is what I hear people say all the time.&lt;/p&gt;

&lt;p&gt;This is not a valid argument; if you really wanted to, you could easily save a couple of evenings to work on your project. A lot of people feel like they won’t be able to get anything done, but unless you have complete A.D.D. you will get something done if you stay in front of a computer a few hours a week.&lt;/p&gt;

&lt;p&gt;It’s just a matter of focusing and being passionate. Find and idea and a technology that feel right. If you like what you do, developing could be as fun as whatever you do on your free time.&lt;/p&gt;

&lt;h2 id=&quot;my-point-is-just-get-started&quot;&gt;My point is: Just get started.&lt;/h2&gt;

&lt;p&gt;I’ll add that it’s better if you begin small and scale up later. Nothing is more depressing than getting yourself into a project that will last years with absolutely nothing to show for it. It’s not as fun. Work in small steps, get feedback as you progress, and most of all try anything that goes through your mind because failure is an option, but learning nothing out of the experience isn’t.&lt;/p&gt;

&lt;p&gt;Alright, you know that one idea that you had? The one you told your coworkers about? Yeah the one on a piece of paper or written in your iPhone.&lt;/p&gt;

&lt;p&gt;Start working on it this evening.&lt;/p&gt;

&lt;p&gt;Keep it fun, keep it interesting, do not pressure yourself. Nothing bad can come out of it!&lt;/p&gt;

&lt;p class=&quot;sidenote&quot;&gt;
  This article was originally published on
  &lt;a href=&quot;http://www.rudebaguette.com/2012/01/09/start-working-side-project/&quot;&gt;The Rude Baguette&lt;/a&gt;.
  Do what you love poster by &lt;a href=&quot;http://shop.ugmonk.com/product/do-what-you-love-print-blue&quot;&gt;Ugmonk&lt;/a&gt;.
&lt;/p&gt;

       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Outsourcing In A Startup</title>
     <link href="https://marcgg.com/blog/2011/12/21/startup-outsourcing/"/>
     <updated>2011-12-21T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2011/12/21/startup-outsourcing</id>
     <content type="html">
       &lt;p&gt;So you’re a startup and want to outsource graphic design, system administration or development? Don’t feel bad, this is very common. Often startups can’t afford to hire many people right away or do not have a team with every skill required to build the perfect product.&lt;/p&gt;

&lt;h2 id=&quot;should-i-outsource&quot;&gt;Should I Outsource?&lt;/h2&gt;

&lt;p&gt;Some will tell you that you should not outsource, but this is not what I think. Actually I won’t have enough of one article to tell you all the cases in which you should outsource (lack of time, not the required skills in-house, not enough people in the team…).&lt;/p&gt;

&lt;p&gt;It doesn’t really matter why you want to outsource. What matters is that before doing so you ask yourself «Am I outsourcing what defines my company?» This is especially true for startups that focus around one main product: you do not want to lose control over what makes the core of your business.&lt;/p&gt;

&lt;h2 id=&quot;build-up-a-team&quot;&gt;Build Up A Team&lt;/h2&gt;
&lt;p&gt;I suppose you don’t want to be forever dependent on contractors, right? Your goal is to build up a team, because in the end this is what makes a startup. A passionated team can build anything if gathered around the right vision, and outsourcing without thinking can hurt that dynamic.&lt;/p&gt;

&lt;p&gt;While a lot of contractors are very able and talented, the problem is that they are only part of the team very temporarily and will not get involved as much as your teammates. They will lack the long term vision and won’t think “if I do X, what will happen in a year when I need to make it evolve into Y”. The problem given to them will be solved, but later evolutions might be harder.&lt;/p&gt;

&lt;p&gt;Remember that your team members decided to join the adventure for more than a couple of billable months. They will have opinions, ideas and will thrive to build the best product possible if you give them the means to do so. You want developers thinking by themselves and ready to go back and improve what they wrote months ago. You want designers that are creative and in phase with the company’s vision.&lt;/p&gt;

&lt;p&gt;This is why you need to build what’s important internally and outsource only when you can’t do it in house… and even when you do, do it keeping in mind that you will have to integrate what has been created and that your team will have to maintain it. If done correctly, outside help can be a good thing for everyone, as mixing ideas and processes is always interesting and a good experience.&lt;/p&gt;

&lt;h2 id=&quot;outsourcing-done-right&quot;&gt;Outsourcing Done Right&lt;/h2&gt;
&lt;p&gt;Like I mentioned before, sometimes you need to call someone to help out. In this case you need to be sure you do not hurt your product or your team in the process. The deliverable should be easy to test, easy to maintain and easy to evolve. If those conditions are not fulfilled, you might deal with frustration in your team. If they are, everyone will be happy about a job well done.&lt;/p&gt;

&lt;h3 id=&quot;design&quot;&gt;Design&lt;/h3&gt;
&lt;p&gt;If you’re outsourcing your product’s design, ask to be provided with a full style guide, general guidelines, grid templates… anything that can help future designers can build on top of what you already have without having to start from scratch. Use a lot of constructive criticism and keep in mind the big picture: your product shouldn’t feel patchy, even if you got a lot of people working on it.&lt;/p&gt;

&lt;h3 id=&quot;development-of-a-new-feature&quot;&gt;Development of a New Feature&lt;/h3&gt;
&lt;p&gt;If you’re outsourcing development directly inside your main product – like a new feature, you want to make sure the code that is given to you is good and perennial. To achieve that, you should ask from your contractors:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The code should be shipped in a modular fashion, avoiding coupling as much as possible. The new features should not interfere too much with the existing codebase.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A lot of pertinent automated tests.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Documentation, not only on what the features are doing, but also on how they can be maintained and improved.&lt;/li&gt;
  &lt;li&gt;Try collaboration with a member of your development team (if you have one), even part time. You want someone able right away to maintain this new feature.&lt;/li&gt;
  &lt;li&gt;Enforce your internal best practices as much as possible if you have some. If you don’t, enforce the ones accepted by your technology’s community.&lt;/li&gt;
  &lt;li&gt;Always keep in mind that you will have to live with this new code for a while and decide accordingly if outsourcing is the right move or not.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;one-shot&quot;&gt;One Shot&lt;/h3&gt;
&lt;p&gt;The other possibility is to outsource something that is not directly linked to your core product. This could be a marketing campaign or something similar. In this case it is easier to get it right, and this is the situation where outsourcing works very well for a startup. You will not need to maintain the new code for long, it will not impact the existing code base… the only thing that matters is that the final result if up to your company’s standards.&lt;/p&gt;

&lt;p&gt;A perfect example of that is &lt;a href=&quot;http://www.tigerlilyapps.com/&quot;&gt;my company’s new website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We launched it recently and gave design control to a &lt;a href=&quot;http://www.colorz.fr/&quot;&gt;creative agency&lt;/a&gt; during development. We did this because we knew that they would create a better design than us. While we care and love about building things that look good, this is not our core business. Delegating this part of the job also gave us the possibility to focus more on our platform for social media applications which is what we do best.&lt;/p&gt;

&lt;p&gt;During the whole process someone kept checking to see if we were agreeing on the choices made. The final phase of integration was made in house because we have great front-end developers that should be able to make the website evolve later on.&lt;/p&gt;

&lt;h2 id=&quot;keep-control&quot;&gt;Keep Control&lt;/h2&gt;

&lt;p&gt;In any case, try to stay on top of what is going on and make sure everything is moving in the right direction. Remember that as a startup, your product is very important. Do not lose control, do not lose ownership. Build up your team.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/assets/misc/machine.jpg&quot; style=&quot;width:450px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;You don’t want to end up with a Rube Goldberg machine made of a crazy patchwork created by dozens of freelancers. While it might get the job done for a bit, it won’t last.&lt;/p&gt;

&lt;p&gt;This being said, there is no perfect solution. Some contractors become really involved and stay for long, some are so good that they will improve the general quality of your product… and if you found people like this maybe you should offer them a full time job!&lt;/p&gt;

&lt;p class=&quot;sidenote&quot;&gt;
  This article was originally published on
  &lt;a href=&quot;http://www.rudebaguette.com/2011/12/21/startups-to-outsource-or-not-to-outsource-3/&quot;&gt;The Rude Baguette&lt;/a&gt;.
&lt;/p&gt;

       
     </content>
   </entry>
  
 
  
   <entry>
     <title>Developers, Go From SSII To Startup</title>
     <link href="https://marcgg.com/blog/2011/12/12/developer-from-ssii-to-startup/"/>
     <updated>2011-12-12T00:00:00+01:00</updated>
     <id>https://marcgg.com/blog/2011/12/12/developer-from-ssii-to-startup</id>
     <content type="html">
       &lt;p&gt;In France we have what we call SSII for Société de Service en Ingénierie Informatique. Poorly translated it goes something like «IT Consulting Firm». This is where most young CS graduates will go, mainly because once you get your degree you are spammed by job offers from their recruiters.&lt;/p&gt;

&lt;p&gt;This is fine for some, but other might feel like they are missing out what’s happening in the startup world. The problem is that after a few years in a SSII it can seem complicated to switch career path and start working for a startup. For the most part it’s because the technologies, processes and general mindset are radically different… but believe me, it is possible!&lt;/p&gt;

&lt;p&gt;So how can one move away from a company like this and join a cool startup?&lt;/p&gt;

&lt;h2 id=&quot;are-you-sure&quot;&gt;Are You Sure?&lt;/h2&gt;
&lt;p&gt;First take a second to figure out what you love to do. Are you really passionate about development? Could you spend hours &lt;a href=&quot;http://stackoverflow.com/questions/144661/python-vs-ruby-for-metaprogramming&quot;&gt;debating if new technology X is better than Y&lt;/a&gt;? Do you try out every new app or service that comes out?&lt;/p&gt;

&lt;p&gt;Keep in mind that the process of becoming a good fit for a startup isn’t easy, but each step should be fun. If it’s a hassle then maybe you shouldn’t quit your current job.&lt;/p&gt;

&lt;h2 id=&quot;the-mindset&quot;&gt;The Mindset&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/misc/movefast.jpg&quot; style=&quot;float:right; height:350px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In a SSII you often get to work on products already sold to a client, usually a large company. All you have to do is dress up, go to the client’s offices and code following the specifications someone gave you. It doesn’t matter if you think the product is good or not, it just matters that you meet the deadline.&lt;/p&gt;

&lt;p&gt;When you join a startup, and especially if it’s an early stage one, this will be radically different. If you’re not passionated about what you’re doing it won’t work. It won’t only be about shipping a given feature anymore, it will be about caring that the product is good and that it follows the right vision.&lt;/p&gt;

&lt;p&gt;In a startup you won’t be yet another code monkey driven by a faceless client’s exigences. Your voice will be heard and just as important as anyone else’s in the team. Your teammates will expect from you that you have ideas on things, not just follow orders. You’ll actually get the opportunity to be part of the creation of something.&lt;/p&gt;

&lt;p&gt;Keep in mind that for a startup at an early stage, nothing is definitive. You could do a major switch in a week, it doesn’t matter as long as everything is moving in the right direction. You have to realize that making the right choices is crucial and can mean life or death for the company, therefore everyone in the team should be involved in the decision, give inputs, discuss, exchange ideas…&lt;/p&gt;

&lt;h2 id=&quot;learn-create-code-repeat&quot;&gt;Learn, Create, Code, Repeat&lt;/h2&gt;

&lt;p&gt;Large companies, because of their larger inertia, tend to use older technologies and that’s why a lot of what you know might be of little use. But don’t worry, while the specifics of the technologies you know might be useless, the general experience you gathered is still valid. You simply need find out the technologies used by your dream startup and learn them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/codecomplete.jpg&quot; style=&quot;float:right; height:200px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Keep in mind that what matters in a startup is the things you can do and your ability to learn &amp;amp; adapt. No one is going to show your resume to a client in order to get a contract, so it doesn’t matter whether you come from a famous school or not. It’s just a degree and doesn’t mean a lot. No need to buy a fancy suit either, it’s not the best outfit to be in front of a computer most of the day.&lt;/p&gt;

&lt;p&gt;To sum it up, what a good startup wants is a developer that can program. So how to get better at coding you ask me? By coding of course!&lt;/p&gt;

&lt;p&gt;The best way to get started is to find an idea and create it as a side project on nights &amp;amp; weekends. It will give you a goal and a nice bullet point on your resume once it’s completed. While you develop, get feedbacks on what you’re doing from experienced developers and/or the &lt;a href=&quot;http://stackoverflow.com/&quot;&gt;internet&lt;/a&gt; and &lt;a href=&quot;http://stackoverflow.com/questions/1711/what-is-the-single-most-influential-book-every-programmer-should-read&quot;&gt;read up&lt;/a&gt; on &lt;a href=&quot;http://www.amazon.com/dp/0132350882/?tag=stackoverfl08-20&quot;&gt;best practices&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a SSII you could be fine sticking to old technologies as there will always be clients wanting to use them: obviously no one is going to change overnight the way banking or insurance is done and the &lt;a href=&quot;http://en.wikipedia.org/wiki/COBOL&quot;&gt;languages used&lt;/a&gt; to do it… but in a startup, everything moves fast. You have to keep on learning and keep on improving yourself.&lt;/p&gt;

&lt;h2 id=&quot;get-connected&quot;&gt;Get Connected&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/startinparis.png&quot; style=&quot;float:right; width:200px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The startup scene in France is maybe not as large as in the US, but it is active. So stay up to date about what’s going on around you as well as internationally. There are countless blogs, twitter users and events talking about just that, you simply need to find the ones that you like and start reading.&lt;/p&gt;

&lt;p&gt;Start going to events organized in your city around the subjects that interest you. If you’re a developer wanting to geek out with other developers, there are meetups for that. You can also interact with other coders on mailing lists, IRC, Twitter…&lt;/p&gt;

&lt;p&gt;If you do it well, you might even have a job interview scheduled before you start sending resumes!&lt;/p&gt;

&lt;h2 id=&quot;alright&quot;&gt;Alright&lt;/h2&gt;

&lt;p&gt;That’s it. Don’t just stand there, go and create something!&lt;/p&gt;

&lt;p class=&quot;sidenote&quot;&gt;
  This article was originally published on
  &lt;a href=&quot;http://www.rudebaguette.com/2011/12/12/from-consulting-to-startup-developer/&quot;&gt;The Rude Baguette&lt;/a&gt;.
  Photo by &lt;a href=&quot;http://www.flickr.com/photos/mwichary/5455395458/&quot;&gt;Martin Wichary&lt;/a&gt;.
&lt;/p&gt;

       
     </content>
   </entry>
  
 

</feed>

