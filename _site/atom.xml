<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Marcgg#Blog</title>
 <link href="http://marcgg.com/atom.xml" rel="self"/>
 <link href="http://marcgg.com"/>
 <updated>2013-01-18T01:16:54+01:00</updated>
 <id>http://marcgg.com</id>
 <author>
   <name>Marc G Gauthier</name>
   <email>marcg.gauthier@gmail.com</email>
 </author>

 
  
   <entry>
     <title>2 Days Trying To Create a Multiplayer HTML5 Game</title>
     <link href="http://marcgg.com/2013/01/14/html5-nodejs-websockets-games-learning"/>
     <updated>2013-01-14T00:00:00+01:00</updated>
     <id>http://marcgg.com/2013/01/14/html5-nodejs-websockets-games-learning</id>
     <content type="html">&lt;p&gt;Okay. Let&amp;#8217;s start by saying that I&amp;#8217;m a developer that does mostly web stuff.&lt;/p&gt;

&lt;p&gt;This means that a majority of the code I write will end up displaying something in a browser. Of course I do &lt;a href='/2012/09/24/working-with-apis-facebook/'&gt;interact with APIs&lt;/a&gt;, write background jobs, add some security, optimize databases and so on&amp;#8230; the point here is that, professionnally, I do not write entire projects that have nothing to do with a web app.&lt;/p&gt;

&lt;p&gt;My friend &lt;a href='http://www.andreberlemont.com/portfolio/'&gt;Andr√©&lt;/a&gt; on the other hand has a different background as he mainly &lt;a href='http://www.oneliferemains.com/'&gt;develops games&lt;/a&gt;. One evening we started talking about how complex it would be to create an online multiplayer game from scratch. Being the web guy, I felt that I should know how all this was supposed to work&amp;#8230; after all, the multiplayer happens over the internet, right?&lt;/p&gt;

&lt;h2 id='i_can_code_that_with_my_eyes_closed'&gt;I Can Code That With My Eyes Closed&amp;#8230;?&lt;/h2&gt;

&lt;p&gt;On paper it seemed pretty simple.&lt;/p&gt;

&lt;p&gt;People connect to a server. This server keeps the game board and broadcasts it to everyone when needed. Each player keeps some kind of state on its side for caching. Everything related to drawing the game board as well as UI should be handled by the client.&lt;/p&gt;

&lt;p&gt;Of course I knew it couldn&amp;#8217;t be that simple and I was 100% sure I was disregarding most of the problems that can occur when creating an online game.&lt;/p&gt;

&lt;p&gt;I &lt;a href='/2012/01/09/start-working-on-your-side-project/'&gt;already blogged&lt;/a&gt; about how side projects are the best response to such situation, therefore at that point I pretty much had to create some kind of game to try it out!&lt;/p&gt;

&lt;h2 id='stack'&gt;Stack&lt;/h2&gt;

&lt;p&gt;Time being a factor, I didn&amp;#8217;t want to go all out game development with C++, Unity or something like that. Instead I kept it in my &amp;#8220;safe&amp;#8221; zone by using technologies I had a bit of experience with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://nodejs.org/'&gt;NodeJS&lt;/a&gt; (for the server)&lt;/li&gt;

&lt;li&gt;&lt;a href='https://developer.mozilla.org/en-US/docs/HTML/Canvas/Tutorial'&gt;HTML5 Canvas&lt;/a&gt; (to display the game board)&lt;/li&gt;

&lt;li&gt;&lt;a href='http://en.wikipedia.org/wiki/WebSocket'&gt;Websockets&lt;/a&gt; with &lt;a href='http://socket.io/'&gt;Socket.io&lt;/a&gt; (to make it fast)&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt='logos' src='/assets/blog/stackgame.png' style='margin:20px auto; display: block' /&gt;
&lt;h2 id='building_the_game'&gt;Building The Game&lt;/h2&gt;

&lt;p&gt;I wanted a simple game so that I could focus on the online aspect of it. The rules I came up with are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There are n players represented as squares on a board.&lt;/li&gt;

&lt;li&gt;1 player is the target and earns 1 point per 30 movements.&lt;/li&gt;

&lt;li&gt;If another player hits the target, he becomes the target and win 1 point.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also added a simplistic chat system so that players could talk to one another during the game.&lt;/p&gt;

&lt;p&gt;The first version of the multiplayer code was pretty simple:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When the player connects he gets the latest version of the game board.&lt;/li&gt;

&lt;li&gt;Each time the player moves it sends an event to the server that updates the world and broadcasts it to everyone connected.&lt;/li&gt;

&lt;li&gt;Client side javascript renders the board in the canvas at each change.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is when I started to see why it wouldn&amp;#8217;t be as simple.&lt;/p&gt;

&lt;h2 id='oh_wait_problems'&gt;Oh Wait. Problems.&lt;/h2&gt;

&lt;h3 id='speed'&gt;Speed&lt;/h3&gt;

&lt;p&gt;My first version was hosted on Heroku and lagged like crazy. This is because right now Heroku doesn&amp;#8217;t support Websockets and forces socket.io to fall back to its polling mode. After some &lt;a href='https://github.com/joyent/node/wiki/Node-Hosting'&gt;research&lt;/a&gt; I moved to &lt;a href='https://www.dotcloud.com/'&gt;DotCloud&lt;/a&gt; and got an impressive boost in speed.&lt;/p&gt;

&lt;p&gt;I also had to rewrite a lot of code using &lt;a href='http://expressjs.com/'&gt;Express&lt;/a&gt; because it would make deployment way easier.&lt;/p&gt;
&lt;img alt='logos' src='/assets/blog/morestackgaming.png' style='margin:20px auto; display: block' /&gt;
&lt;p&gt;Now that hosting and basic interactions were a bit more optimized, I started to see another problem: passing around the whole board was still too costly network-wise.&lt;/p&gt;

&lt;p&gt;At that moment of development the board was just a JSON object containing all the players, their names, positions, scores and other meta data regarding the game. It seemed pretty small but it wasn&amp;#8217;t, and as the game would grow the problem would only get worse.&lt;/p&gt;

&lt;p&gt;The solution here would be to only broadcast what changed instead of redrawing everything. This was annoying because it meant that you need to be able to draw the board from scratch (when you connect) as well as incrementally (while you play). Twice the logic.&lt;/p&gt;

&lt;p&gt;I also noticed a lag for the player&amp;#8217;s own actions. This was because it would always go via the server before updating the board. As a matter of fact there wasn&amp;#8217;t even a board on the client side, just its rendering on the HTML5 Canvas.&lt;/p&gt;

&lt;p&gt;Soooo to fix this the client code should also be able to know the state of the world and update it locally.&lt;/p&gt;

&lt;h3 id='fun_gameplay__complexity'&gt;Fun, Gameplay &amp;amp; Complexity&lt;/h3&gt;

&lt;p&gt;A game needs to be fun, or else there is no point. And a couple of laggy squares moving around is clearly not fun. This seems trivial, but when you spend your time working on web apps, you don&amp;#8217;t spend a lot of time thinking about whether the app is fun or not. Making it efficient, fast and user friendly is complicated enough!&lt;/p&gt;

&lt;p&gt;I added some rules and gameplay elements to make it feel more like something one would like to play, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Feedbacks when you get hit&lt;/li&gt;

&lt;li&gt;Scoreboards during game&lt;/li&gt;

&lt;li&gt;Invicibility frames when you get hit&lt;/li&gt;

&lt;li&gt;Board boundaries&lt;/li&gt;

&lt;li&gt;Changing a player&amp;#8217;s name&lt;/li&gt;

&lt;li&gt;Tweaks in the player&amp;#8217;s speed &amp;amp; size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It&amp;#8217;s also good to know that some of the gameplay elements are based on constants. For instance you always move of X, and your player is Y pixel-wide. When you get hit you are invicible for Z frames and so on. To tweak it I had to add a debug mode to change everything while playing to quickly see how it felt.&lt;/p&gt;

&lt;p&gt;All these changes made my simple game complex and it became harder to maintain the code, even only after something like 6 hours of work in. I had to throw away a lot of code and start again fresh.&lt;/p&gt;

&lt;h3 id='concurent_access'&gt;Concurent Access&lt;/h3&gt;

&lt;p&gt;When you have a lot of players connected and modifying the same board, you&amp;#8217;re bound to run into some &lt;a href='http://en.wikipedia.org/wiki/Concurrency_control'&gt;concurent access&lt;/a&gt; issues. For instance let&amp;#8217;s say two players touch the target at the same time. Who gets +1 point?&lt;/p&gt;

&lt;p&gt;To fix this I hacked together a basic &lt;a href='http://en.wikipedia.org/wiki/Mutual_exclusion'&gt;mutex&lt;/a&gt; system to handle the simple problems that kept on happening. This did the trick after an hour of code, but it wasn&amp;#8217;t something I&amp;#8217;d put in production!&lt;/p&gt;

&lt;h2 id='conclusion'&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Overall I&amp;#8217;m pretty happy with the results. Even with my lack of experience in the subject I still got something running and gained a better grasp of why game developers tremble when you mention online multiplayer.&lt;/p&gt;

&lt;p&gt;Now I think the next step would be to design a game taking the constraints discovered into account in order to simplify development. You don&amp;#8217;t want a game where precision and timing is key. You could instead create a massively online turn-by-turn game and save yourself major headaches while still producing something fun! It all depends if you seek a technical challenge or if you just want to create a cool project.&lt;/p&gt;

&lt;p&gt;Also I&amp;#8217;ll need to find a graphic designer because my game looked like shit, but that&amp;#8217;s another story.&lt;/p&gt;
&lt;img alt='the game' src='/assets/blog/screengame.png' style='margin:20px auto; display: block' /&gt;</content>
   </entry>
  
 
  
   <entry>
     <title>I Left Tigerlily</title>
     <link href="http://marcgg.com/2013/01/06/left-tigerlily-job"/>
     <updated>2013-01-06T00:00:00+01:00</updated>
     <id>http://marcgg.com/2013/01/06/left-tigerlily-job</id>
     <content type="html">&lt;p&gt;I joined &lt;a href='http://tigerlilyapps.com'&gt;Tigerlily&lt;/a&gt; even before it was called that and, for 3 years, I contributed to the creation of &lt;a href='http://www.tigerlilyapps.com/products'&gt;amazing products&lt;/a&gt; that are now used by major companies in France and abroad. We built a great team of very talented people, brought innovation to how brands would interact with their users on social networks and always thrived to be the best at what we‚Äôd put our minds into.&lt;/p&gt;

&lt;p&gt;It was a great experience in which I learned a lot and enjoyed the &lt;a href='/2011/12/12/developer-from-ssii-to-startup/'&gt;startup atmosphere&lt;/a&gt;. I became really invested in the project and became the lead developer, but now I feel that it is time for another adventure.&lt;/p&gt;

&lt;p&gt;There are a few personal reasons that made me decide to leave. The main one is the opportunity that was given to me by &lt;a href='http://www.drivy.com/'&gt;Drivy&lt;/a&gt; (&lt;a href='http://blog.drivy.com/2013/voiturelib-change-de-nom-et-devient-drivy/'&gt;formerly known as VoitureLib&lt;/a&gt;), the startup I‚Äôm going to join.&lt;/p&gt;

&lt;p&gt;This company is centered around a product that can be roughly summarized by ¬´ It‚Äôs like &lt;a href='https://www.airbnb.com/'&gt;AirBnB&lt;/a&gt;, but for cars ¬ª. The idea of &lt;a href='http://vimeo.com/14408878'&gt;collaborative consumption&lt;/a&gt; always attracted me because I think this is what will make a difference in the long run. Instead of buying products we barely need, why not collaborate? Picture a city where you can get a car, quickly, for cheap and without having to go through the hassle of the main renting companies. That&amp;#8217;d be pretty cool!&lt;/p&gt;

&lt;p&gt;On the technical side, yes, I&amp;#8217;ll still be working with &lt;a href='http://rubyonrails.org/'&gt;Ruby On Rails&lt;/a&gt;. Of course changing job will put me in front of new problems to solve or ones I haven‚Äôt tackled in years, so it&amp;#8217;s going to be interesting!&lt;/p&gt;

&lt;p&gt;Don‚Äôt get me wrong, I still think that what Tigerlily is doing is cool and that the team is amazing. I simply feel like I‚Äôve done everything I needed to do there and that I must seek something different. It‚Äôs very hard to leave the people and not be able to contribute to the progress the company will make, but there are times when you have to look for something else.&lt;/p&gt;

&lt;p&gt;Life, heh.&lt;/p&gt;

&lt;p&gt;I wish the best to the Tigerlily team, and now I‚Äôm looking forward to my first day tomorrow!&lt;/p&gt;</content>
   </entry>
  
 
  
   <entry>
     <title>How We Made Third Place At AngelHack Paris</title>
     <link href="http://marcgg.com/2012/12/10/angelhack-third-place-paris-hackathon"/>
     <updated>2012-12-10T00:00:00+01:00</updated>
     <id>http://marcgg.com/2012/12/10/angelhack-third-place-paris-hackathon</id>
     <content type="html">&lt;p&gt;A couple of weeks ago &lt;a href='http://twitter.com/kevintunc'&gt;Kevin&lt;/a&gt;, &lt;a href='http://twitter.com/etiennebarrie'&gt;√âtienne&lt;/a&gt;, &lt;a href='http://twitter.com/benjaminbouwyn'&gt;Benjamin&lt;/a&gt;, &lt;a href='http://twitter.com/emilanddc'&gt;Emiland&lt;/a&gt; and I decided to go to the the Paris‚Äô session of &lt;a href='http://angelhack.com'&gt;AngelHack&lt;/a&gt;. This is a worldwide &lt;a href='http://en.wikipedia.org/wiki/Hackathon'&gt;hackathon&lt;/a&gt; with fancy &lt;a href='http://angelhack.com/#sponsors'&gt;sponsors&lt;/a&gt; giving you the opportunity to build and pitch a new product in 24 hours. This edition gathered 165 attendees and 47 projects.&lt;/p&gt;

&lt;p&gt;In this article I‚Äôll try to present what we did while hopefully recreating a bit the experience and giving some tips.&lt;/p&gt;

&lt;h2 id='brainstorming'&gt;Brainstorming&lt;/h2&gt;

&lt;p&gt;Two weeks prior, we started brainstorming over lunch. We knew we wanted to make a product with a positive concept, original if possible, and not try to build yet another Twitter connected app plugging your instagram to your last.fm account or whatever.&lt;/p&gt;

&lt;p&gt;We started by talking about a time sharing solution based on the concept that 1 hour of someone is worth 1 hour of anyone else. You would give a way for people to exchange services. Since there was already a lot of projects doing this we focused on the education niche: how we could apply this idea to make teaching better. From this idea we jumped to sharing goods. From sharing to trading, to giving.&lt;/p&gt;

&lt;p&gt;We liked the idea of giving objects, but &lt;a href='http://www.freecycle.org/'&gt;some websites&lt;/a&gt; did that already, so we looked for incentives for people to give away their things and found the idea of tracking every steps of an object‚Äôs life very interesting. This concept has a lot of potential. It not only made giving an object more fun, it could also lead to great stories and maybe give the feeling that property can be temporary, lasting just long enough to have an experience.&lt;/p&gt;

&lt;h2 id='getting_ready'&gt;Getting Ready&lt;/h2&gt;

&lt;p&gt;According to the &lt;a href='http://angelhack.com/rules'&gt;rules&lt;/a&gt; of AngelHack, you can‚Äôt start coding before the limit, but you are allowed to prepare wireframes and use cases&amp;#8230; so we did that!&lt;/p&gt;
&lt;div style='text-align: center'&gt;&lt;img src='http://distilleryimage7.instagram.com/8e2b7cae3b1a11e2ab4c22000a1faffd_7.jpg' style='width: 320px; float: right;' /&gt;&lt;img src='/assets/blog/ready.png' style='width: 320px; float: left; margin: 0px !important;' /&gt;&lt;/div&gt;&lt;div style='clear:both'&gt;&amp;nbsp;&lt;/div&gt;
&lt;p&gt;The hardest part at that point was to determine what our minimal viable product would be.&lt;/p&gt;

&lt;p&gt;In this kind of situation it is very easy to get side tracked and try to build too much. Obviously you want to make your project as good as possible, with a ton of awesome features and shiny graphics. The bad news is, by doing that, you‚Äôll end up with nothing, or an app messy and bugged beyond belief. We also knew we‚Äôd only get 2 minutes to present our work&amp;#8230; which is REALLY short. Therefore it was important to focus and get the most important feature done and polished.&lt;/p&gt;

&lt;p&gt;Tech-wise, the stack was pretty obvious since we are all well versed with Ruby on Rails and wanted to get the project as complete as possible. However we left some room for improvisation in terms of what &lt;a href='http://en.wikipedia.org/wiki/RubyGems'&gt;gems&lt;/a&gt; or database we‚Äôd use.&lt;/p&gt;

&lt;p&gt;The day before the hackathon, in order to gain some time, we prepared how the first hour would go, dispatching tasks and so on.&lt;/p&gt;

&lt;h2 id='hacking'&gt;Hacking&lt;/h2&gt;

&lt;p&gt;The first day started around 9am with presentations, pitches from teams missing members and sponsors. Around noon we started coding. Right away we got some issues with the internet, leading to my deepest despair as we installed most of what we needed to work, but not everything. After a while it got fixed and we were finally able to install the gems we needed.&lt;/p&gt;
&lt;div style='text-align:center'&gt;&lt;img src='/assets/blog/githack.png' style='width: 500px;' /&gt;&lt;/div&gt;
&lt;p&gt;In the middle of the development we got the crazy idea of switching database from MySQL to Posgres in case we‚Äôd need it for its geospatial features. It didn&amp;#8217;t break everything we made before or destroy one of our dev machine, which was pretty good.&lt;/p&gt;

&lt;p&gt;We also quickly got the need to get everyone to test the site. Since the non technical people on the team didn‚Äôt have a laptop fully setup for development, we had to deploy the project to Heroku. This lead to an awesome moment where we had a problem and just had to turn around to get help from the guys on the Heroku stand sitting feets away from us.&lt;/p&gt;

&lt;p&gt;Since we like the added challenge, one of our team member had to leave for a couple of hours to see a &lt;a href='http://www.youtube.com/watch?v=56E8yYgLNHE'&gt;Crystal Castle&lt;/a&gt; concert nearby&amp;#8230; but it worked out fine and to our surprise, the minimal viable product was more or less ready around 4am! This was great news because it meant that we could spend the remaining time adding the extra features like some Facebook &lt;a href='https://developers.facebook.com/docs/concepts/opengraph/'&gt;open graph&lt;/a&gt; or a better integration of &lt;a href='http://mapbox.com/'&gt;mapbox&lt;/a&gt; to show how an object travelled.&lt;/p&gt;
&lt;div style='text-align: center'&gt;&lt;img src='/assets/blog/screen2.png' style='width: 350px; float: right;' /&gt;&lt;img src='/assets/blog/screen1.png' style='width: 350px; float: left; margin: 0px !important;' /&gt;&lt;/div&gt;&lt;div style='clear:both'&gt;&amp;nbsp;&lt;/div&gt;
&lt;p&gt;It&amp;#8217;s also good to note that at that point we already entered the phase where we didn&amp;#8217;t really cared about best practices, and it shows a lot in our &lt;a href='https://github.com/marcgg/thegoodslife/commits/master'&gt;git log&lt;/a&gt;.&lt;/p&gt;
&lt;div style='text-align:center'&gt;&lt;img src='/assets/blog/gitlol.png' style='width: 500px;' /&gt;&lt;/div&gt;
&lt;p&gt;This is when I decided to get a couple hours of sleep while others stayed to work a bit more. Some will say that &lt;a href='/assets/blog/sleep.jpg'&gt;sleep is for the weak&lt;/a&gt;, but I still think that getting rest in a hackathon is important. When you need to be able to focus and think, it‚Äôs always better to have some kind of sanity left or you‚Äôll just end up coding bugs after bugs and get frustrated.&lt;/p&gt;

&lt;p&gt;There is also the solution of some of my teammates which was taking advantage of the free Redbulls. I guess it can work too.&lt;/p&gt;
&lt;div style='width:640px; margin: auto'&gt;
&lt;iframe frameborder='0' height='400' src='http://www.youtube.com/embed/c2iqbAirnAk?rel=0' width='640'&gt;Loading&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id='pitching'&gt;Pitching&lt;/h2&gt;

&lt;p&gt;Some of us started to prepare the pitch, while others were fixing the last remaining bugs. For this presentation we decided before that we&amp;#8217;d do a a couple of slides followed by a screencast serving as demo. This was a choice in order to avoid internet connections issues, aspect ratio problems on the video projector&amp;#8230; or really any Murphy&amp;#8217;s law related incident.&lt;/p&gt;
&lt;div style='width:560px; margin: auto'&gt;
&lt;iframe frameborder='0' height='315' src='http://www.youtube.com/embed/mDdNOf0EKy4?rel=0' width='560'&gt;Loading&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;While waiting we got to see the other teams&amp;#8217; presentation. When it was close to our turn we were sent to another room, and let me tell you that even I wasn&amp;#8217;t the one giving the presentation, &lt;a href='http://emiland.me/'&gt;Emiland&lt;/a&gt; was, but I was stressing out for him. I got the opportunity to pitch at the &lt;a href='http://blog.tigerlilyapps.com/en/tigerlily-wins-the-facebook-mobile-hack-with-watchify-a-social-tv-web-app/'&gt;last hackathon&lt;/a&gt; I participated in, so I know how hard it can be. The fact that everything was in english and we&amp;#8217;re not native speakers didn&amp;#8217;t help either.&lt;/p&gt;
&lt;div style='text-align:center'&gt;&lt;img src='/assets/blog/pres.png' style='width: 500px;' /&gt;&lt;/div&gt;
&lt;p&gt;Overall the presentation went well, even if I failed to answer a question while trying to save Emiland from failing to answer another question. We got some very good feedbacks from the judges and then had to wait.&lt;/p&gt;

&lt;p&gt;After what seemed like a very long time, the winners and prizes were announced:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;(1) Lugga.me, Track your bag talk to her. Tickets to San Francisco.&lt;/li&gt;

&lt;li&gt;(2) Cubes, Unleash Your God Power. Tickets to San Francisco.&lt;/li&gt;

&lt;li&gt;(3) The Goods Life, Give your goods a second life - or a third. 5 Macbook Pro 13&amp;#8221; Retina Display.&lt;/li&gt;

&lt;li&gt;(4) Hvid.io, World Wide Watch - Watch our World live. 3 iPad mini.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='conclusion'&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;While we didn&amp;#8217;t make it to San Francisco we still got a cool prize courtesy of &lt;a href='http://www.heroku.com/'&gt;Heroku&lt;/a&gt; and managed to finish our project. It was also a great experience to create something from the ground up quickly and get instantly feedbacks on it.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m very proud of what we accomplished during this weekend. The team was awesome as everybody had complementary skills and each team member had a major impact on the result. This left me with the feeling that with the right group of people and a good mindset you can really create great things.&lt;/p&gt;

&lt;p&gt;Overall I&amp;#8217;d advise anyone that like &lt;a href='/2012/01/09/start-working-on-your-side-project/'&gt;starting projects&lt;/a&gt; to participate in events like these. Gather a group of people or just find teammates on the spot, it&amp;#8217;ll be great.&lt;/p&gt;

&lt;p&gt;Exhausting, but great.&lt;/p&gt;
&lt;div style='text-align:center'&gt;&lt;img src='/assets/blog/team.png' style='' /&gt;&lt;/div&gt;</content>
   </entry>
  
 
  
   <entry>
     <title>Web Views &amp; RubyMotion</title>
     <link href="http://marcgg.com/2012/11/12/webviews-javascript-ios-rubymotion"/>
     <updated>2012-11-12T00:00:00+01:00</updated>
     <id>http://marcgg.com/2012/11/12/webviews-javascript-ios-rubymotion</id>
     <content type="html">&lt;p&gt;Here we go, another article on &lt;a href='http://www.rubymotion.com/'&gt;RubyMotion&lt;/a&gt;! For those of you that don&amp;#8217;t know what&amp;#8217;s that&amp;#8217;s all about, it&amp;#8217;s a toolchain created by &lt;a href='https://twitter.com/lrz'&gt;Laurent Sansonetti&lt;/a&gt; (of &lt;a href='http://macruby.org/'&gt;MacRuby&lt;/a&gt; fame) allowing you to create native iOS application using &lt;a href='http://www.ruby-lang.org/'&gt;Ruby&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I like it a lot, but please keep in mind that while I have a decent knowledge of Ruby, I&amp;#8217;m only using RubyMotion on a side project. I worked hard to get everything here to work, but it still might not be the most efficient way of doing it. If you do know a better solution, please share it in the comments and I&amp;#8217;ll update the article.&lt;/p&gt;

&lt;h2 id='our_objective'&gt;Our Objective&lt;/h2&gt;

&lt;p&gt;Right now the general feeling is that in order to get the highest level of quality in an app, you have to go native. I&amp;#8217;m not disputing that, but there are some cases where you just need to have some HTML, JS and CSS displaying. To do that, the best way is to use the &lt;a href='http://developer.apple.com/library/ios/#documentation/uikit/reference/UIWebView_Class/Reference/Reference.html'&gt;UIWebView&lt;/a&gt; element. It allows you to open html file and display them as if you were in a browser.&lt;/p&gt;

&lt;p&gt;In this article I&amp;#8217;ll try to demonstrate how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open a given website in a simple web view within a RubyMotion project.&lt;/li&gt;

&lt;li&gt;Open a locally stored HTML file&lt;/li&gt;

&lt;li&gt;Customize a bit the feel of the web view&lt;/li&gt;

&lt;li&gt;Send a signal from the web view back to the application&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='prerequisites'&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;I won‚Äôt get into the details on how to set up a project and will assume you have basic knowledge of how this works. If you never created something with RubyMotion, please take a look at &lt;a href='http://rubymotion-tutorial.com/1-hello-motion/'&gt;this tutorial&lt;/a&gt; before reading the rest of this article.&lt;/p&gt;

&lt;p&gt;RubyMotion uses &lt;a href='http://www.ruby-lang.org/'&gt;Ruby&lt;/a&gt;. If you are not familiar with it, there are tons of tutorials and books on how to code with this language. I recommend &lt;a href='http://ruby.learncodethehardway.org/'&gt;Learn Ruby The Hard Way&lt;/a&gt; by &lt;a href='http://zedshaw.com/'&gt;Zed A. Shaw&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id='setting_up_the_appdelegate'&gt;Setting up the AppDelegate&lt;/h2&gt;

&lt;p&gt;This is pretty basic, we just set up a &lt;a href='http://rubymotion-tutorial.com/3-controllers/'&gt;controller&lt;/a&gt; and assign it to be the root.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;AppDelegate&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;application&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;application&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;didFinishLaunchingWithOptions&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;&lt;span class='n'&gt;launchOptions&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='vi'&gt;@window&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;UIWindow&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;alloc&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;initWithFrame&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='no'&gt;UIScreen&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;mainScreen&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;bounds&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;

    &lt;span class='n'&gt;main_controller&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;MainController&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;alloc&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;init&lt;/span&gt;
    &lt;span class='vi'&gt;@window&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;rootViewController&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;main_controller&lt;/span&gt;

    &lt;span class='vi'&gt;@window&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;rootViewController&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;wantsFullScreenLayout&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kp'&gt;true&lt;/span&gt;
    &lt;span class='vi'&gt;@window&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;makeKeyAndVisible&lt;/span&gt;
    &lt;span class='kp'&gt;true&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id='opening_a_given_url'&gt;Opening A Given URL&lt;/h2&gt;

&lt;p&gt;We&amp;#8217;ll create the structure for a basic controller and set its view to be a UIWebView. Then we&amp;#8217;ll build an URL and load it.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;MainController&lt;/span&gt; &lt;span class='o'&gt;&amp;lt;&lt;/span&gt; &lt;span class='no'&gt;UIViewController&lt;/span&gt;

  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;initWithNibName&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nb'&gt;name&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;bundle&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;bundle&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='k'&gt;super&lt;/span&gt;
    &lt;span class='nb'&gt;self&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;

  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;loadView&lt;/span&gt;
    &lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;view&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;UIWebView&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;alloc&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;init&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;

  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;viewDidLoad&lt;/span&gt;
    &lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;view&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;loadRequest&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;
      &lt;span class='no'&gt;NSURLRequest&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;requestWithURL&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='no'&gt;NSURL&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;URLWithString&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;http://marcgg.com&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;))&lt;/span&gt;
    &lt;span class='p'&gt;)&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p class='sidenote'&gt;
EDIT: I moved the UIWebView.alloc.init to loadView
to avoid creating a UIView just to throw it away. Thanks to
&lt;a href='https://twitter.com/colinta'&gt;Colin&lt;/a&gt; for pointing this out.
&lt;/p&gt;
&lt;p&gt;If we slow down things a bit, we have this:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='c1'&gt;# Creating a URL&lt;/span&gt;
&lt;span class='n'&gt;url&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;NSURL&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;URLWithString&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;http://marcgg.com&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;

&lt;span class='c1'&gt;# Creating a request based on the URL&lt;/span&gt;
&lt;span class='n'&gt;request&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;NSURLRequest&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;requestWithURL&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;url&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;

&lt;span class='c1'&gt;# Loading the request into the view (that is set to be our UIWebView)&lt;/span&gt;
&lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;view&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;loadRequest&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;request&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now if we run rake we see my website, and how badly it&amp;#8217;s optimized for mobile:&lt;/p&gt;
&lt;div style='text-align: center'&gt;&lt;img src='/assets/misc/uiweb1.png' /&gt;&lt;/div&gt;
&lt;h2 id='opening_a_local_file'&gt;Opening A Local File&lt;/h2&gt;

&lt;p&gt;It&amp;#8217;s good to open a website, but what if you don&amp;#8217;t have internet access, or if you don&amp;#8217;t need to load anything since you have already everything you need ? That&amp;#8217;s when you load your locally stored file.&lt;/p&gt;

&lt;p&gt;First, create an &lt;code&gt;index.html&lt;/code&gt; file that you&amp;#8217;ll store in &lt;code&gt;/resources&lt;/code&gt;. Put whatever HTML you want inside, maybe a background color or something similar to know if the file loaded properly.&lt;/p&gt;

&lt;p&gt;Once it&amp;#8217;s done, tweak the controller so that it knows what&amp;#8217;s up.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;viewDidLoad&lt;/span&gt;
  &lt;span class='n'&gt;path&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;NSBundle&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;mainBundle&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;pathForResource&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;ofType&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;html&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
  &lt;span class='n'&gt;url&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;NSURL&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;fileURLWithPath&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;path&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
  &lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;view&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;loadRequest&lt;/span&gt; &lt;span class='no'&gt;NSURLRequest&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;requestWithURL&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;url&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run rake again, and you should see your file displaying.&lt;/p&gt;
&lt;div style='text-align: center'&gt;&lt;img src='/assets/misc/uiweb2.png' /&gt;&lt;/div&gt;
&lt;p&gt;At this point you can customize the HTML however you want. Keep in mind that if you use other files (css, js, images), they need to be stored in &lt;code&gt;/ressources&lt;/code&gt; as well in order to be accessible. You might also need to think about how you want to handle retina/non retina images.&lt;/p&gt;

&lt;h2 id='customize_the_uiwebview'&gt;Customize The UIWebView&lt;/h2&gt;

&lt;p&gt;Here what I wanted to do is to forbid scrolling and just have a nice, fixed, piece of HTML. This way it&amp;#8217;ll feel more like a native piece of UI than a web browser. To do so, you can change these parameters:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;view&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;scrollView&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;scrollEnabled&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kp'&gt;false&lt;/span&gt;
&lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;view&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;scrollView&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;bounces&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kp'&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id='javascript_communication'&gt;Javascript Communication&lt;/h2&gt;

&lt;p&gt;It&amp;#8217;s the part where it gets a bit more tricky. Here I want to have a link somewhere in my HTML that triggers something in my RubyMotion code. It could be a &amp;#8220;cancel&amp;#8221; link, a form&amp;#8230; it doesn&amp;#8217;t matter.&lt;/p&gt;

&lt;p&gt;To do that we&amp;#8217;re going to use the logic behind &lt;code&gt;shouldStartLoadWithRequest&lt;/code&gt; and the whole &lt;a href='http://developer.apple.com/library/ios/#documentation/uikit/reference/UIWebViewDelegate_Protocol/Reference/Reference.html'&gt;UIWebViewDelegate&lt;/a&gt; thing. I&amp;#8217;m not an iOS master yet, so please bear with me on the domain-specific vocabulary.&lt;/p&gt;

&lt;p&gt;First we&amp;#8217;re going to add a delegate to our view. Here I&amp;#8217;ll use the current controller because it&amp;#8217;s a rather small project, but feel free to use any object you want.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;view&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;delegate&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nb'&gt;self&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can use the fact that our controller, being the delegate of a UIWebview, will have its shouldStartLoadWithRequest method called before any frame is loaded. Let&amp;#8217;s write our own method and see how it goes.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;webView&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;inWeb&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;shouldStartLoadWithRequest&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;inRequest&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;navigationType&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;inType&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
  &lt;span class='nb'&gt;puts&lt;/span&gt; &lt;span class='n'&gt;inRequest&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;URL&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;absoluteString&lt;/span&gt;
  &lt;span class='kp'&gt;true&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we have the bare minimum to get started. You&amp;#8217;ll notice we have a couple of parameters. In this article I&amp;#8217;ll just use the request, but know that the others can be usefull too. Read the &lt;a href='http://developer.apple.com/library/ios/#documentation/uikit/reference/UIWebViewDelegate_Protocol/Reference/Reference.html'&gt;documentation&lt;/a&gt; if you want to learn more.&lt;/p&gt;

&lt;p&gt;Now if we launch rake one more time and look at the trace, we can see the current path to the local file we&amp;#8217;re loading.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;main&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;&lt;span class='o'&gt;&amp;gt;&lt;/span&gt; &lt;span class='ss'&gt;file&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;&lt;span class='sr'&gt;//&lt;/span&gt;&lt;span class='n'&gt;your_path&lt;/span&gt;&lt;span class='o'&gt;/&lt;/span&gt;&lt;span class='n'&gt;to&lt;/span&gt;&lt;span class='o'&gt;/&lt;/span&gt;&lt;span class='n'&gt;your_project&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;app&lt;/span&gt;&lt;span class='o'&gt;/&lt;/span&gt;&lt;span class='n'&gt;index&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;html&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is useless, but now let&amp;#8217;s add a link in the &lt;code&gt;index.html&lt;/code&gt; file. Now if you point it to a regular website, it&amp;#8217;ll just load it. It&amp;#8217;s not what we want right now. Instead we&amp;#8217;ll create our own protocol (lol) as such:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='html'&gt;&lt;span class='nt'&gt;&amp;lt;a&lt;/span&gt; &lt;span class='na'&gt;href=&lt;/span&gt;&lt;span class='s'&gt;&amp;quot;myapp://do/something&amp;quot;&lt;/span&gt;&lt;span class='nt'&gt;&amp;gt;&lt;/span&gt;Click this&lt;span class='nt'&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By now you must have figured out where we&amp;#8217;re heading like that. Since we have our callback thanks to the UIWebViewDelegate protocol, we can parse the URL and do process it how we want. I added a basic example below, but really you can do whatever.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;webView&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;inWeb&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;shouldStartLoadWithRequest&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;inRequest&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;navigationType&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;inType&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
  &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='n'&gt;inRequest&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;URL&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;absoluteString&lt;/span&gt; &lt;span class='o'&gt;=~&lt;/span&gt; &lt;span class='sr'&gt;/myapp:\/\//&lt;/span&gt;
    &lt;span class='nb'&gt;puts&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;Do something!&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;else&lt;/span&gt;
    &lt;span class='nb'&gt;puts&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;This is just another link&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
  &lt;span class='kp'&gt;true&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the same fashion you can trigger the page change using javascript. This should be pretty basic stuff here.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='nb'&gt;window&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;location&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;myapp://some_awesome/message&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By now you should have noticed how I always return true. It&amp;#8217;s because if you return false the frame won&amp;#8217;t load. You can use this fact to forbid the user to click certain links on the page, or disable browsing altogether.&lt;/p&gt;

&lt;h2 id='a_quick_security_note'&gt;A Quick Security Note&lt;/h2&gt;

&lt;p&gt;We now have an HTML page talking to your iOS app ! Pretty cool, but be carefull on how you allow this to happen, since you really don&amp;#8217;t want any website sending funky signals to your app. Make sure you don&amp;#8217;t execute any message you receive.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;webView&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;inWeb&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;shouldStartLoadWithRequest&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;inRequest&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;navigationType&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;inType&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
  &lt;span class='c1'&gt;# I&amp;#39;m an Idiot&lt;/span&gt;
  &lt;span class='no'&gt;MyVeryImportantModel&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;send&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;inRequest&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;URL&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;absoluteString&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It should be pretty obvious, but it&amp;#8217;s still worth mentioning.&lt;/p&gt;

&lt;h2 id='hurray_'&gt;Hurray !&lt;/h2&gt;

&lt;p&gt;We now have a web view loading a local file and talking to the Ruby part of the application using Javascript. Neat ! Of course there&amp;#8217;s a lot more you can do with this, and you should probably add some kind of cool DSL in front of it if you&amp;#8217;re going to do this frequently.&lt;/p&gt;

&lt;p&gt;As always, you can look up the whole project on &lt;a href='https://github.com/marcgg/rubymotion-uiwebview'&gt;github&lt;/a&gt;. It is compiling and working as I write this article, but keep in mind that RubyMotion is a fast moving project and it might not be the case in a few months.&lt;/p&gt;</content>
   </entry>
  
 
  
   <entry>
     <title>Create a Custom Slider With RubyMotion</title>
     <link href="http://marcgg.com/2012/10/22/custom-slider-ios-rubymotion"/>
     <updated>2012-10-22T00:00:00+02:00</updated>
     <id>http://marcgg.com/2012/10/22/custom-slider-ios-rubymotion</id>
     <content type="html">&lt;p&gt;I always liked the idea of developing mobile applications, but also found the Objective C + XCode experience not very enjoyable. I gave alternatives like &lt;a href='http://www.appcelerator.com/platform/titanium-sdk/'&gt;Titanium&lt;/a&gt; a try, but wasn‚Äôt fully convinced. Lately I‚Äôve been getting into &lt;a href='http://www.rubymotion.com/'&gt;RubyMotion&lt;/a&gt; and so far I‚Äôm really impressed by the general feel of it.&lt;/p&gt;

&lt;p&gt;Alas it&amp;#8217;s not perfect. My main grief right now about the project is the terrible lack of documentation. The community is also still small and while you can still find &lt;a href='https://twitter.com/vacawama'&gt;helpful&lt;/a&gt; &lt;a href='https://twitter.com/julienXX'&gt;people&lt;/a&gt;, you often end up alone with your code. That&amp;#8217;s why I figured I would contribute my share of blog posts on the subject! Hopefully it‚Äôll help out some people.&lt;/p&gt;

&lt;p&gt;Keep in mind that while I‚Äôm well versed in Ruby, I‚Äôm quite new to RubyMotion and might make some mistakes&amp;#8230; so please comment if I do and I‚Äôll fix the article. RubyMotion is also evolving, therefore while this article works perfectly today, it might not be the case in a few months.&lt;/p&gt;

&lt;p&gt;With all that in mind, let&amp;#8217;s get started shall we?&lt;/p&gt;

&lt;h2 id='prerequisites'&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;I won‚Äôt get into the details on how to set up a project and will assume you have basic knowledge of how this works. If you never created something with RubyMotion, please take a look at &lt;a href='http://rubymotion-tutorial.com/1-hello-motion/'&gt;this tutorial&lt;/a&gt; before reading the rest of this article.&lt;/p&gt;

&lt;p&gt;RubyMotion uses &lt;a href='http://www.ruby-lang.org/'&gt;Ruby&lt;/a&gt;. If you are not familiar with it, there are tons of tutorials and books on how to code with this language. I recommend &lt;a href='http://ruby.learncodethehardway.org/'&gt;Learn Ruby The Hard Way&lt;/a&gt; by &lt;a href='http://zedshaw.com/'&gt;Zed A. Shaw&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id='our_objective'&gt;Our Objective&lt;/h2&gt;

&lt;p&gt;I‚Äôll try to explain how to customize a &lt;a href='http://developer.apple.com/library/ios/#documentation/uikit/reference/UISlider_Class/Reference/Reference.html'&gt;UISlider&lt;/a&gt; to get the look and feel matching the design of your application. Here‚Äôs what‚Äôs the demo code will give you:&lt;/p&gt;
&lt;iframe frameborder='0' height='396' src='http://www.screenr.com/embed/v0y8' width='100%'&gt;Loading&lt;/iframe&gt;
&lt;h2 id='setting_up_the_appdelegate'&gt;Setting up the AppDelegate&lt;/h2&gt;

&lt;p&gt;This is pretty basic, we just set up a &lt;a href='http://rubymotion-tutorial.com/3-controllers/'&gt;controller&lt;/a&gt; and assign it to be the root.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;AppDelegate&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;application&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;application&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;didFinishLaunchingWithOptions&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;&lt;span class='n'&gt;launchOptions&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='vi'&gt;@window&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;UIWindow&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;alloc&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;initWithFrame&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='no'&gt;UIScreen&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;mainScreen&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;bounds&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;

    &lt;span class='n'&gt;main_controller&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;MainController&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;alloc&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;init&lt;/span&gt;
    &lt;span class='vi'&gt;@window&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;rootViewController&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;main_controller&lt;/span&gt;

    &lt;span class='vi'&gt;@window&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;rootViewController&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;wantsFullScreenLayout&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kp'&gt;true&lt;/span&gt;
    &lt;span class='vi'&gt;@window&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;makeKeyAndVisible&lt;/span&gt;
    &lt;span class='kp'&gt;true&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id='displaying_a_uislider'&gt;Displaying a UISlider&lt;/h2&gt;

&lt;p&gt;Now we need to create the MainController. I like to put it in app/controllers, with the usual basic structure.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;MainController&lt;/span&gt; &lt;span class='o'&gt;&amp;lt;&lt;/span&gt; &lt;span class='no'&gt;UIViewController&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;loadView&lt;/span&gt;
    &lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;view&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;UIView&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;

  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;initWithNibName&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nb'&gt;name&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;bundle&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;bundle&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='k'&gt;super&lt;/span&gt;
    &lt;span class='nb'&gt;self&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;

  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;viewDidLoad&lt;/span&gt;
    &lt;span class='k'&gt;super&lt;/span&gt;
    &lt;span class='c1'&gt;# Everything is now going to go there&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can run the application with rake and it&amp;#8217;ll display a black screen. This means we&amp;#8217;re all set up and it&amp;#8217;s time to actually start coding. Everything we&amp;#8217;re going to write from now on will be after the super the viewDidLoad method.&lt;/p&gt;

&lt;p&gt;First, the slider:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='n'&gt;slider&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;UISlider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;alloc&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;initWithFrame&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='o'&gt;[[&lt;/span&gt;&lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;200&lt;/span&gt;&lt;span class='o'&gt;]&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='o'&gt;[&lt;/span&gt;&lt;span class='mi'&gt;320&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;40&lt;/span&gt;&lt;span class='o'&gt;]]&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will create a slider taking the whole width of the screen and position it more or less in the center. Once it&amp;#8217;s created, we need add it to the view so it&amp;#8217;ll display correctly.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='n'&gt;view&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;addSubview&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run rake again, and you should see something like this:&lt;/p&gt;
&lt;div style='text-align: center'&gt;&lt;img alt='Custom Sliders Demo' src='/assets/misc/slider1.png' /&gt;&lt;/div&gt;
&lt;p&gt;If you want, you can set the maximum and default values:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;maximumValue&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='mi'&gt;100&lt;/span&gt;
&lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;value&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;maximumValue&lt;/span&gt;&lt;span class='o'&gt;/&lt;/span&gt;&lt;span class='mi'&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id='setting_track_images'&gt;Setting Track Images&lt;/h2&gt;

&lt;p&gt;A UISlider is composed of different elements. The sliding thingy is called the track and the other round thingy you grab to drag is the thumb. On the left of the thumb we have the minimum track, on the right the maximum track. The &lt;a href='http://developer.apple.com/library/ios/#documentation/uikit/reference/UISlider_Class/Reference/Reference.html'&gt;official documentation&lt;/a&gt; explains that with a better display of vocabulary than I do, but you get the idea.&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s change the track image to display and image.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='n'&gt;full_image&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;UIImage&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;imageNamed&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;full&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;span class='n'&gt;empty_image&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;UIImage&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;imageNamed&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;empty&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;setMinimumTrackImage&lt;/span&gt; &lt;span class='n'&gt;full_image&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;forState&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='no'&gt;UIControlStateNormal&lt;/span&gt;
&lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;setMaximumTrackImage&lt;/span&gt; &lt;span class='n'&gt;empty_image&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;forState&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='no'&gt;UIControlStateNormal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can notice that I use two images &amp;#8220;full&amp;#8221; and &amp;#8220;empty&amp;#8221;. To get them to load correctly, put them in the resources folder of your rubymotion project. If they are PNGs you don&amp;#8217;t need to specify the format.&lt;/p&gt;

&lt;p&gt;Right now the minimum track image is stretching to fit its space. It might be what you want, but that&amp;#8217;s not my case so let&amp;#8217;s add the following code before giving the image to the slider.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='c1'&gt;# You need an image that is the exact size of the slider&lt;/span&gt;
&lt;span class='c1'&gt;# or else it might not look good&lt;/span&gt;
&lt;span class='n'&gt;full_image&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;full_image&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;resizableImageWithCapInsets&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;
  &lt;span class='no'&gt;UIEdgeInsetsZero&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;resizingMode&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='no'&gt;UIImageResizingModeTile&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point we have this:&lt;/p&gt;
&lt;div style='text-align: center'&gt;&lt;img alt='Custom Sliders Demo' src='/assets/misc/slider2.png' /&gt;&lt;/div&gt;
&lt;p&gt;This is pretty good, but the thumb in the middle doesn&amp;#8217;t look like it belongs. Let&amp;#8217;s fix that.&lt;/p&gt;

&lt;h2 id='customizing_the_thumb'&gt;Customizing The Thumb&lt;/h2&gt;

&lt;p&gt;You can pass an image to set the thumb to whatever you want using the same logic as what we did with the tracks. Personnally I prefer removing the thumb entirely, so here&amp;#8217;s how to do that:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;setThumbImage&lt;/span&gt; &lt;span class='no'&gt;UIImage&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;alloc&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;forState&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='no'&gt;UIControlStateNormal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This gives you:&lt;/p&gt;
&lt;div style='text-align: center'&gt;&lt;img alt='Custom Sliders Demo' src='/assets/misc/rubymotion_sliders.png' /&gt;&lt;/div&gt;
&lt;p&gt;Of course you could have done something like:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='n'&gt;whatever&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;UIImage&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;imageNamed&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;whatever&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;setThumbImage&lt;/span&gt; &lt;span class='n'&gt;whatever&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;forState&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='no'&gt;UIControlStateNormal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id='making_the_slider_easier_to_slide'&gt;Making The Slider Easier to Slide&lt;/h2&gt;

&lt;p&gt;Right now it&amp;#8217;s looking how we want it, but the problem the thumb is hidden, but you still have to click exactly where it used to be in order to change the slider&amp;#8217;s value. Since the UISlider is a taller than the default one, you have have to click right in the middle of your new slider in order to grab it.&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s not good UX. I order to avoid this we can enlarge the size of the area that is selectable:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;trackRectForBounds&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;
  &lt;span class='no'&gt;CGRect&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='no'&gt;CGPoint&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;200&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;&lt;span class='mi'&gt;200&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; &lt;span class='no'&gt;CGSize&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;100&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;&lt;span class='mi'&gt;100&lt;/span&gt;&lt;span class='p'&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Depending on the size of your images and the general feeling you want to get, play around with this area you&amp;#8217;re defining.&lt;/p&gt;

&lt;h2 id='thats_it'&gt;That&amp;#8217;s It!&lt;/h2&gt;

&lt;p&gt;Obviously these are not the only customizations you can make to a UISlider, but I think it&amp;#8217;s a good start. If people are interested I might make another one on events or visual tricks you can use to make a slider look cooler.&lt;/p&gt;

&lt;p&gt;If you find this avalanche of code snippets not very usuable, you can look at the whole project on &lt;a href='https://github.com/marcgg/rubymotion-custom-slider'&gt;github&lt;/a&gt;. It is compiling and working as I write this article, but keep in mind that RubyMotion is a fast moving project and it might not be the case in a few months.&lt;/p&gt;</content>
   </entry>
  
 
  
   <entry>
     <title>Don‚Äôt Accept Brokenness</title>
     <link href="http://marcgg.com/2012/10/15/dont-accept-brokeness-deal-with-annoyances"/>
     <updated>2012-10-15T00:00:00+02:00</updated>
     <id>http://marcgg.com/2012/10/15/dont-accept-brokeness-deal-with-annoyances</id>
     <content type="html">&lt;p&gt;For a while I had a problem with my jaw. Ten years back I got elbowed in the face (don‚Äôt ask), and since then I had trouble yawning or just opening my mouth wide open. I could try to do it, but it would result in the whole thing locking and a good deal of pain.&lt;/p&gt;

&lt;p&gt;The first months I was annoyed, but as time passed I learned to live with it. After all, it was really nothing important. I could eat, speak and do pretty much anything normally. I accepted this as part of how my body functions. Some can‚Äôt do a right split, I can‚Äôt open my mouth that wide, who cares? I learned how to avoid doing this, and carried on.&lt;/p&gt;

&lt;p&gt;This year I had to see a doctor regarding some unrelated issue, and I ended up mentioning this fact. She told me that she could take a look at it and, in literally a matter of seconds, she fixed the problem. It‚Äôs been a few months and while it‚Äôs still not perfect, it‚Äôs incredibly better.&lt;/p&gt;

&lt;p&gt;In seconds a ten years problem was fixed.&lt;/p&gt;

&lt;p&gt;Seconds.&lt;/p&gt;

&lt;p&gt;Of course this got me thinking: what else is broken that I‚Äôm accepting as it is ? At first I went through all the very minor physical problem I was having and discussed it with her. While some were fixable, others were not and some could be improved.&lt;/p&gt;

&lt;p&gt;But here‚Äôs the thing, that approach doesn‚Äôt only apply to health issues. As a matter of fact it works for pretty much everything ! When facing a problem, the easiest response is to simply accept it and deal with it&amp;#8230; while sometimes trying to fix the problem is actually faster, requires less work and is less expensive!&lt;/p&gt;

&lt;p&gt;Another example I could give is a door in my appartment that would require you lifting a bit the handle before being able to close it. I did that for months until one day I decided to stop for one second and look at what was going on. In ten minutes I figured it out and was able to fix it by replacing a screw or two.&lt;/p&gt;

&lt;p&gt;These are just my examples, but for you it could be one piece of legacy code that‚Äôs always getting in your way inside your application, or this door that just won‚Äôt open without having to jiggle your keys for minutes. It could be this light that flickers a bit, or the fact that you keep on smashing your toes in the same piece of furniture.&lt;/p&gt;

&lt;p&gt;All these are minor inconveniences, but you deal with them every day. They waste your time, build frustration, and you don‚Äôt even see it because it‚Äôs always been like that as far as you can remember!&lt;/p&gt;

&lt;p&gt;I‚Äôm not saying that everything is fixable, because it‚Äôs not true. I‚Äôm saying you should take a minute every once in a while to ask yourself if this tiny thing really is unavoidable, if doing something to fix it wouldn‚Äôt actually be easier than dealing with it every day.&lt;/p&gt;</content>
   </entry>
  
 
  
   <entry>
     <title>How I Avoid Thumb Pain From Too Much Coding</title>
     <link href="http://marcgg.com/2012/10/01/thumb-pain-developer-keyboard"/>
     <updated>2012-10-01T00:00:00+02:00</updated>
     <id>http://marcgg.com/2012/10/01/thumb-pain-developer-keyboard</id>
     <content type="html">&lt;p&gt;Most coders complain about wrist pain. For some reason I never had major trouble there except when working for hours on a laptop. My main issue seemed more original and was located in &lt;a href='http://en.wikipedia.org/wiki/Thenar_eminence'&gt;the group of muscles controlling the thumb&lt;/a&gt;. Suddently it would hurt for days, then go away, then come back&amp;#8230; good times.&lt;/p&gt;

&lt;p&gt;Eventually I mentioned it to a kinesiotherapist, and the conversation was very similar to the famous joke that goes something like:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;¬´ Doctor, it hurts when I do this.&lt;/p&gt;

&lt;p&gt;-Don‚Äôt do it then! ¬ª&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of course this got me thinking: why do I use my thumb so much?&lt;/p&gt;

&lt;p&gt;Turns out that the movement of pressing a combination of keys was the thing causing the pain. Of course doing it every once in a while has no consequence, but as a web developer I spend my day opening browser tabs (cmd+T), refreshing pages (cmd+R) and copy and pasting (cmd+C, cmd+V).&lt;/p&gt;
&lt;div style='width:560px; margin: auto'&gt;
&lt;object height='315' width='560'&gt;&lt;param name='movie' value='http://www.youtube.com/v/tCJSJBV85cw?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0' /&gt;&lt;param name='allowFullScreen' value='true' /&gt;&lt;param name='allowscriptaccess' value='always' /&gt;&lt;embed allowfullscreen='true' allowscriptaccess='always' height='315' src='http://www.youtube.com/v/tCJSJBV85cw?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0' type='application/x-shockwave-flash' width='560' /&gt;&lt;/object&gt;
&lt;/div&gt;
&lt;p&gt;As you can see on this terribly filmed video, I tend to twist a bit the thumb to press both keys at the same time. It‚Äôs not much but because it‚Äôs not a natural position, the repetition of this hundreds of times a day would cause pain.&lt;/p&gt;

&lt;p&gt;My first idea was to force myself to use the second cmd button, but I didn‚Äôt like it since it would require taking my hand off the mouse for a second. What worked for me was &lt;a href='http://stackoverflow.com/questions/127591/using-caps-lock-as-esc-in-mac-os-x'&gt;changing the mapping of Caps Lock&lt;/a&gt; to Cmd so I could do the gesture with one hand. This allowed me to use my little finger for these action and avoid stressing the thumb muscles.&lt;/p&gt;

&lt;p&gt;I‚Äôve been doing this for a few months now, and I do see a difference. If you encounter the same problem, feel free to try this solution out and let me know if it helped!&lt;/p&gt;</content>
   </entry>
  
 
  
   <entry>
     <title>The Risks of Working With Another Company's API</title>
     <link href="http://marcgg.com/2012/09/24/working-with-apis-facebook"/>
     <updated>2012-09-24T00:00:00+02:00</updated>
     <id>http://marcgg.com/2012/09/24/working-with-apis-facebook</id>
     <content type="html">&lt;p&gt;Before we begin let me give you a little background on why I‚Äôm writing this article.&lt;/p&gt;

&lt;p&gt;I‚Äôve been working with the Facebook platform for almost 3 years now. I also wrote code using the APIs provided by Twitter, Instagram, Flickr, Google, Foursquare, Amazon, Youtube, Spotify and others. I‚Äôve participated in building products like the &lt;a href='http://www.tigerlilyapps.com/conversation'&gt;Tigerlily Conversation Suite&lt;/a&gt; or &lt;a href='http://ffocused.com'&gt;ffocused&lt;/a&gt;, both heavily relying on some of those API. In the process I learned a lot on how to handle these services, their evolutions and their problems.&lt;/p&gt;

&lt;p&gt;This post is nothing but my point of view and advices to people wanting to build on top of an existing platform. I don‚Äôt know everything, I just know the problems I‚Äôve encountered, how I delt with them and how I avoided them afterward.&lt;/p&gt;

&lt;p&gt;That‚Äôs all for disclaimer, let‚Äôs dig in.&lt;/p&gt;

&lt;h2 id='being_cautious_the_real_cost_of_a_feature'&gt;Being Cautious: The Real Cost of a Feature&lt;/h2&gt;

&lt;p&gt;The main thing I learned in the process is that you have to be very cautious in how you start using a new API. When you discover all the possibilities for the first time, you just want to jump in and create something. The catch is that everything might not be as bright as it seems.&lt;/p&gt;

&lt;p&gt;Some features may be buggy while others are deprecated. I‚Äôm not saying that they often are, just that they might be. You should consider the fact that everything will not go as planed and that this is going to have a cost.&lt;/p&gt;

&lt;p&gt;It‚Äôs all about understanding that &lt;a href='http://gettingreal.37signals.com/ch05_Start_With_No.php'&gt;the real cost of the feature&lt;/a&gt; is not the time it‚Äôs going to take to develop it. You also have to take into account the time you‚Äôre going to spend maintaining it, and the friction it‚Äôs going to have with other components of your system. I like how &lt;a href='https://twitter.com/tenderlove'&gt;Aaron Patterson&lt;/a&gt; describes this feeling as the lower tolerance for technical debt experienced developers have.&lt;/p&gt;
&lt;div style='width:560px; margin: auto'&gt;
&lt;object height='315' width='560'&gt;&lt;param name='movie' value='http://www.youtube.com/v/8kSfGgiFk48?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&amp;amp;start=1075' /&gt;&lt;param name='allowFullScreen' value='true' /&gt;&lt;param name='allowscriptaccess' value='always' /&gt;&lt;embed allowfullscreen='true' allowscriptaccess='always' height='315' src='http://www.youtube.com/v/8kSfGgiFk48?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&amp;amp;start=1075' type='application/x-shockwave-flash' width='560' /&gt;&lt;/object&gt;
&lt;/div&gt;
&lt;p&gt;Let‚Äôs say you want to add a Facebook or Twitter connect to your website. Implementing it is &lt;a href='http://developers.facebook.com/docs/guides/web/#login'&gt;dead simple&lt;/a&gt;&amp;#8230; but what if Facebook is down for a while, or if it glitches out and your users can‚Äôt log in? What if they totally revamp their login system and this time it takes months to fix it? What if you want to handle users in a specific way and this connect feature is now getting in the way?&lt;/p&gt;

&lt;p&gt;You have to evaluate if it‚Äôs worth the risk of delegating a part of your system to another company. Sometimes it can be the best move you can make, but it can also be a mistake that will cost you precious time.&lt;/p&gt;

&lt;p&gt;I sometimes think of it like AJAX at the beginning of the ¬´web 2.0¬ª era. Everyone started creating full AJAX websites because the possibilities were so amazing. For some it was great, but in other cases it was very gimmicky, didn‚Äôt provide any real end-user value and had terrible issues in term of maintenance.&lt;/p&gt;

&lt;h2 id='its_not_as_simple_as_you_might_think'&gt;It‚Äôs Not As Simple As You Might Think&lt;/h2&gt;

&lt;p&gt;Thinking about connecting to an API as something trivial can only work for a small side project or a minor feature.&lt;/p&gt;

&lt;p&gt;If you want to build a company around a platform, satisfy customers and make money with it that‚Äôs when it becomes complex. The simplest example I can give you is rate limitations. This alone could kill a project or at least diminish its value enough to render it useless.&lt;/p&gt;

&lt;p&gt;Stop thinking that you‚Äôll be able to scrap the entire data on Twitter and provide amazing analytics just by having a couple of crons running on a small server. It‚Äôs not going to work because it‚Äôs not going to &lt;a href='http://www.youtube.com/watch?v=b2F-DItXtZs'&gt;scale&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My advice would to have a clear focused vision on where you can provide a real value and keep it realistic. Basing your product on an amazing platform is a great opportunity we‚Äôre given, but it should not be seen as the golden hammer of product design.&lt;/p&gt;

&lt;h2 id='things_will_change'&gt;Things Will Change&lt;/h2&gt;
&lt;img src='/assets/misc/fbml.jpg' style='float:right; width:210px;' /&gt;
&lt;p&gt;Any third party API you‚Äôre going to use is going to change. It‚Äôs a good thing. You want it to provide more features, to adapt to follow the best practices and so on. The real question here is not ¬´Is it going to change ?¬ª - because it will, but ¬´Is my system and product flexible enough to handle the changes ?¬ª.&lt;/p&gt;

&lt;p&gt;First, if you base your entire product on one API feature, you are taking huge risks. The company providing the service might just turn it off at any point&amp;#8230; just ask the people that were building on top of the &lt;a href='http://googlecode.blogspot.fr/2011/05/spring-cleaning-for-some-of-our-apis.html'&gt;Google Translate API&lt;/a&gt;, creating &lt;a href='http://developers.facebook.com/blog/post/568/'&gt;only FBML applications&lt;/a&gt; or building a &lt;a href='http://thenextweb.com/twitter/2012/08/17/twitter-4/'&gt;Twitter client&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Secondly, your code needs to be separated enough so that a change in the third party API only impacts a minimal part of your system. This is where you really have to follow &lt;a href='http://en.wikipedia.org/wiki/Law_of_Demeter'&gt;Demeter‚Äôs law&lt;/a&gt;. Simply put, have a good interface somewhere that allows you to limit the number of places in which you have API handling code.&lt;/p&gt;

&lt;h2 id='things_will_break'&gt;Things Will Break&lt;/h2&gt;
&lt;img src='/assets/misc/movefast.png' style='float:right; width:210px;' /&gt;
&lt;p&gt;I‚Äôve reported over 200 bugs on the Facebook platform. Some were fixed, some were impossible to reproduce accurately and other were just disregarded because considered as weird edge cases.&lt;/p&gt;

&lt;p&gt;This is not surprising, an API is not an all knowing oracle! It‚Äôs software and software breaks&amp;#8230; especially within &lt;a href='http://startupquote.com/post/1624569753'&gt;startups moving fast&lt;/a&gt;. I can‚Äôt imagine how complex maintaining a platform such as Facebook or Twitter can be, but I‚Äôm sure that the engineers behind it, as talented as they are, will let bugs slip.&lt;/p&gt;

&lt;p&gt;These bugs are not the same as a glitch in your system. You can‚Äôt fix them yourself. The only you can do and that‚Äôs having a system that is resilient to these API failures.&lt;/p&gt;

&lt;p&gt;Maybe you think that it‚Äôs as easy as when there‚Äôs a crash due to a bad API call, rescue the exception and use the response code to give a nicely formatted error to the end user. Sometimes it is just that, but let me ask you this. What if :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There is no error code or it is not the correct one&lt;/li&gt;

&lt;li&gt;The response is &lt;a href='http://developers.facebook.com/bugs/349799231758647'&gt;corrupted&lt;/a&gt; (bad formatting, bad charset, incompleteness)&lt;/li&gt;

&lt;li&gt;The response seems correct but has no sense (¬´Q: What‚Äôs the user‚Äôs age? A: John¬ª)&lt;/li&gt;

&lt;li&gt;The response is correct but the action hasn‚Äôt be made&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You should handle some of these situations depending on the level of stability you want to achieve. Obviously if it‚Äôs something that is not important, do not waste your time trying to make it bullet proof. Put the time and effort into it if it‚Äôs a critical part of your application.&lt;/p&gt;

&lt;h2 id='example_scaling_a_quick_facebook_comments_fetching_system_with_no_data_loss'&gt;Example: Scaling a Quick Facebook Comments Fetching System With No Data Loss&lt;/h2&gt;

&lt;p&gt;One of the applications I work on needed to get all the comments left on a given Facebook page. The system would then take the comments and process them in a way that would add value for the community managers using the app. It was crucial that we got 100% of the comments in a timely fashion.&lt;/p&gt;

&lt;p&gt;At first we wanted to get all the posts and process them in batches using the &lt;a href='http://developers.facebook.com/docs/reference/api/batch/'&gt;Batch API&lt;/a&gt;, but at the time this API was very unstable. We tried processing all posts independently in one big routine and this quickly showed its limit as some API calls will time out, impacting the fetching of others comments that were left waiting. Adding a queuing system and ways to retry a given job solved that issue.&lt;/p&gt;

&lt;p&gt;We then discovered that Facebook has an undocumented limit of ~800 comments per call. Asking for more will not return an error but a random number of comments. We changed the system to take smaller batches of comments and use Facebook pagination system. The bad news is that it would sometimes glitch and results in an &lt;a href='http://developers.facebook.com/bugs/127681480703469'&gt;infinite loop&lt;/a&gt;. Some other times everything will seem fine but some comments would be missing for unknown reasons.&lt;/p&gt;

&lt;p&gt;The solution here was to create methods able to determine if the comments returned were valid or not and decide when to stop fetching.&lt;/p&gt;

&lt;p&gt;As you can see, the first approach ¬´gimme all of them comments¬ª does not work when you deal with &lt;a href='http://developers.facebook.com/bugs/438731489482335'&gt;large amounts&lt;/a&gt; of &lt;a href='http://developers.facebook.com/bugs/389080567815236'&gt;items&lt;/a&gt;. This might not be a problem for most people building apps dealing with only a couple dozens of comments, but our product target big brands with a crazy amount of user interactions. Therefore it was very important that we got it right as it was at the core of what we were trying to achieve. The time and effort spent into building a fetching system that would work as good as possible had a real value so it was a wise choice to do it that way.&lt;/p&gt;

&lt;p&gt;It‚Äôs all about knowing what you‚Äôre trying to do and how good you need it to be. Sometimes good enough is what you shoot for, but in other cases you need something that‚Äôs as flawless as you can get. What you don&amp;#8217;t want is to realize that this simple API call turned into months of unplanned development.&lt;/p&gt;

&lt;h2 id='as_a_developer'&gt;As A Developer&lt;/h2&gt;

&lt;p&gt;Developing systems relying heavily on APIs you don‚Äôt control requires a lot of &lt;a href='http://en.wikipedia.org/wiki/Defensive_programming'&gt;discipline&lt;/a&gt;. You have to make a lot of assumptions about what the other company‚Äôs going to do and be ready for random things to happen. It‚Äôs complicated and can be frustrating at times when you see features you build fall apart because of a change you have no control over.&lt;/p&gt;

&lt;p&gt;Of course it‚Äôs not all grim or else I wouldn‚Äôt have been crazy enough to do it for so long!&lt;/p&gt;

&lt;p&gt;It‚Äôs an interesting challenge to build something able to overcome all these problems and provide real value despite it. Personally it allowed me to learn a lot, tackle complex problems and grow as a developer. It‚Äôs also great to have a dataset as huge as Twitter or Facebook to put into your system. Everything seems to be at a larger scale right away and the possibilities from a product perspective are broaden.&lt;/p&gt;

&lt;p&gt;Finaly I&amp;#8217;ll add that this is a good learning experience for when you get to the point where you need to build your own API&amp;#8230; because everyone wants to build a cool API! You‚Äôve seen how it‚Äôs done, the mistakes made, the good ideas, the architecture behind it&amp;#8230;&lt;/p&gt;

&lt;p&gt;I can safely say that &lt;a href='http://www.sethcall.com/blog/2010/09/30/facebook-api-does-not-care/'&gt;it will be infuriating&lt;/a&gt; at times, but within a focused and understanding team, it‚Äôs all manageable and the result can be awesome.&lt;/p&gt;</content>
   </entry>
  
 
  
   <entry>
     <title>The One Thing That Made Me Switch To Vim</title>
     <link href="http://marcgg.com/2012/09/04/one-reason-to-switch-to-vim-editor"/>
     <updated>2012-09-04T00:00:00+02:00</updated>
     <id>http://marcgg.com/2012/09/04/one-reason-to-switch-to-vim-editor</id>
     <content type="html">&lt;p&gt;I know, I know, this has been done to death, but stay with me for a second. I‚Äôm not here to tell you that Vim is the best editor out there, just to tell you the one reason that got me to switch.&lt;/p&gt;

&lt;p&gt;Like every developer with some curiosity, I tried a ridiculous amount of text editors and IDEs. I started with Notepad at first, but quickly discovered that some text editors would actually help you. I downloaded &lt;a href='http://download.cnet.com/Amiasoft-SiteAid/3000-10247_4-10015046.html'&gt;SiteAid&lt;/a&gt; and enjoyed the gain of productivity. Then I quickly moved on to Scite, Eclipse, Netbeans, Notepad++, Emacs, Text Edit, Rad Rails, Kate, Rubymine, TextMate, Sublime&amp;#8230; the list goes on.&lt;/p&gt;

&lt;p&gt;At some point I realized that I was wasting my time learning slightly different shortcuts and ways of setting up a project. I began to consider Vim seriously because it stood the test of time and seemed cool for some reason, but really the one thing that convinced me was a problem I had at my job.&lt;/p&gt;

&lt;p&gt;One day something went wrong on a server running Debian. The sysadmin was not around and I ended up being the one that had to go on there and fix it. It was linked to some config files that were not properly set up, and the only editor available was Vim.&lt;/p&gt;

&lt;p&gt;Back then I had almost &lt;a href='http://vimdoc.sourceforge.net/htmldoc/intro.html'&gt;no clue&lt;/a&gt; on how to use it.&lt;/p&gt;

&lt;p&gt;It resulted in me editing the files as a 70 years old guy that just discovered what a keyboard is. It was painful to watch to say the least. Of course while this was going on, the server was more or less down. Pure joy if you ask me!&lt;/p&gt;

&lt;p&gt;Even before this incident, more than a couple of times I had to inject some debug lines on the code deployed on our staging server to figure out a very environment-specific bug, but it wasn‚Äôt as stressful as this time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It felt terrible to be so lost with a task as simple as editing a file.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is why I decided to use Vim as my primary editor. It already had enough qualities to be a good choice, but the fact that it is set up on most servers was the final selling point for me.&lt;/p&gt;

&lt;p&gt;Sometimes you just need to be able to fire up Vim and be very fast using it. You don&amp;#8217;t even have to &lt;a href='http://yehudakatz.com/2010/07/29/everyone-who-tried-to-convince-me-to-use-vim-was-wrong/'&gt;be snob while doing it&lt;/a&gt;.&lt;/p&gt;</content>
   </entry>
  
 
  
   <entry>
     <title>Start Working on Your Side Project Tonight</title>
     <link href="http://marcgg.com/2012/01/09/start-working-on-your-side-project"/>
     <updated>2012-01-09T00:00:00+01:00</updated>
     <id>http://marcgg.com/2012/01/09/start-working-on-your-side-project</id>
     <content type="html">&lt;p&gt;To me a side project is taking an idea and building it from scratch. You do not have to complete it, it doesn‚Äôt need a business model or turn into a company over time, it doesn‚Äôt even need to make sense to other people than you. It is just a way to experiment. If later on it turns out into a successful company, good for you, but it doesn‚Äôt have to be your goal.&lt;/p&gt;

&lt;p&gt;If you‚Äôre like me, you think that development is a creative process, and should be treated as such. So what better way to be more creative than by removing all the usual constraints of a day job ‚Äì deadlines, &lt;a href='http://en.wikipedia.org/wiki/Legacy_code'&gt;legacy code&lt;/a&gt;, clients, etc. ‚Äì and just building something for fun and the sake of building something cool!&lt;/p&gt;

&lt;p&gt;Doing a side project is a great way to experiment with new technologies, try new processes and be able to fail with absolutely no consequences other than maybe a few hours wasted‚Ä¶ and even then this time isn‚Äôt really lost because you tried and you learned something. It might not be much, but it could turn out to be a key point at your next job interview, or it could give you a better insight at what you do in your day job.&lt;/p&gt;
&lt;img src='/assets/misc/startupweekend.png' style='float:right; width:250px;' /&gt;
&lt;p&gt;By know you might notice that this article is more directed towards people with some experience in development, but the concepts and ideas are the same for everyone. Everybody can benefit from having a side project. If you don‚Äôt have a technical background you could go to a Startup Weekend with an idea or team up with a developer. You could also &lt;a href='http://codeyear.com/'&gt;learn how to code&lt;/a&gt;, &lt;a href='http://ror.kateray.net/post/1312957018/the-internet-teaches-you-ruby-on-rails'&gt;it won‚Äôt be time wasted&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id='great_startups_can_come_out_of_side_projects'&gt;Great startups can come out of side projects&lt;/h2&gt;
&lt;img src='/assets/misc/basecamp.png' style='float:right; width:200px;' /&gt;
&lt;p&gt;You‚Äôve probably heard about Gmail starting of as a 20% time project (as in the amount of time a developer there can spend on other projects than the ones they‚Äôre assigned). This isn‚Äôt the only example.&lt;/p&gt;

&lt;p&gt;&lt;a href='http://craigslist.com/'&gt;Craigslist&lt;/a&gt; was Craig Newmark side project started in 1995 and only turned into a real company in 1999. &lt;a href='http://basecamp.com/'&gt;Basecamp&lt;/a&gt;, a very successful project management software was initially an internal tool of 37signals that answered &lt;a href='http://gettingreal.37signals.com/ch02_Whats_Your_Problem.php'&gt;their own problems as a design firm&lt;/a&gt;. &lt;a href='http://www.instapaper.com/'&gt;Instapaper&lt;/a&gt; was started by Marco Arment &lt;a href='http://bits.blogs.nytimes.com/2010/09/23/instapaper-goes-from-hobby-to-startup/'&gt;while he was CTO at Tumblr&lt;/a&gt;. You can even say that Twitter was a side project of &lt;a href='http://articles.businessinsider.com/2011-04-13/tech/29957143_1_jack-dorsey-twitter-podcasting'&gt;a group of people working at Odeo&lt;/a&gt;.&lt;/p&gt;
&lt;img src='/assets/misc/hashtagbattle.png' style='float:right; width:150px;' /&gt;
&lt;p&gt;In France there are also examples such as &lt;a href='http://hashtagbattle.com/'&gt;HashtagBattle&lt;/a&gt; that was a &lt;a href='http://startupweekend.org/'&gt;startup weekend&lt;/a&gt; project and ended up getting a lot of exposure. &lt;a href='http://www.tigerlilyapps.com/'&gt;Tigerlily&lt;/a&gt; was created during a &lt;a href='http://en.wikipedia.org/wiki/Hackathon'&gt;hackaton&lt;/a&gt;, &lt;a href='http://www.super-marmite.com/'&gt;Super Marmitte&lt;/a&gt; was a side project until it got exposure at LeWeb in 2010‚Ä¶&lt;/p&gt;

&lt;p&gt;You can read more about the beginning of some of these projects in &lt;a href='http://books.google.fr/books?id=ktm885vGIXEC&amp;amp;lpg=PA161&amp;amp;ots=vTvMWfQH8g&amp;amp;dq=gmail%20side%20project&amp;amp;pg=PR2#v=onepage&amp;amp;q&amp;amp;f=false'&gt;Founders at Work by Jessica Livingston&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id='you_dont_have_to_be_that_ambitious'&gt;You don‚Äôt have to be that ambitious&lt;/h2&gt;

&lt;p&gt;Take my latest side project for example. &lt;a href='https://twitter.com/gflandre'&gt;A friend&lt;/a&gt; and I somehow got ourselves thinking it‚Äôd be fun if we could &lt;a href='http://whatsmyairport.com/'&gt;match people‚Äôs initials with airport codes&lt;/a&gt;. This coincided with the release of a new version of my favorite framework that I wanted to try out. We decided to use it to create a project and learn about this new technology in the process. It took us a few evenings of work and we learned a lot while having fun.&lt;/p&gt;
&lt;div style='text-align:center'&gt;&lt;img src='/assets/misc/airport.jpg' style='width:550px;' /&gt;&lt;/div&gt;
&lt;p&gt;It doesn‚Äôt scale, there‚Äôs no way to make money out of it‚Ä¶ but really there is no need to try to create the next Facebook! Simply do something that you like and that will teach you something, and then maybe you‚Äôll create a new hit startup. First, take it only for what you‚Äôll learn and the experience you‚Äôll gain from it.&lt;/p&gt;

&lt;h2 id='ok_i_get_it_side_projects_are_great_but_i_just_dont_have_the_time'&gt;‚ÄúOk I get it, side projects are great, but I just don‚Äôt have the time!‚Äù&lt;/h2&gt;
&lt;img src='/assets/misc/love.png' style='float:right; width:150px;' /&gt;
&lt;p&gt;‚Ä¶ is what I hear people say all the time.&lt;/p&gt;

&lt;p&gt;This is not a valid argument; if you really wanted to, you could easily save a couple of evenings to work on your project. A lot of people feel like they won‚Äôt be able to get anything done, but unless you have complete A.D.D. you will get something done if you stay in front of a computer a few hours a week.&lt;/p&gt;

&lt;p&gt;It‚Äôs just a matter of focusing and being passionate. Find and idea and a technology that feel right. If you like what you do, developing could be as fun as whatever you do on your free time.&lt;/p&gt;

&lt;h2 id='my_point_is_just_get_started'&gt;My point is: Just get started.&lt;/h2&gt;

&lt;p&gt;I‚Äôll add that it‚Äôs better if you begin small and scale up later. Nothing is more depressing than getting yourself into a project that will last years with absolutely nothing to show for it. It‚Äôs not as fun. Work in small steps, get feedback as you progress, and most of all try anything that goes through your mind because failure is an option, but learning nothing out of the experience isn‚Äôt.&lt;/p&gt;

&lt;p&gt;Alright, you know that one idea that you had? The one you told your coworkers about? Yeah the one on a piece of paper or written in your iPhone.&lt;/p&gt;

&lt;p&gt;Start working on it this evening.&lt;/p&gt;

&lt;p&gt;Keep it fun, keep it interesting, do not pressure yourself. Nothing bad can come out of it!&lt;/p&gt;
&lt;p class='sidenote'&gt;
  This article was originally published on
  &lt;a href='http://www.rudebaguette.com/2012/01/09/start-working-side-project/'&gt;The Rude Baguette&lt;/a&gt;.
  Do what you love poster by &lt;a href='http://shop.ugmonk.com/product/do-what-you-love-print-blue'&gt;Ugmonk&lt;/a&gt;.
&lt;/p&gt;</content>
   </entry>
  
 
  
   <entry>
     <title>Outsourcing In A Startup</title>
     <link href="http://marcgg.com/2011/12/21/startup-outsourcing"/>
     <updated>2011-12-21T00:00:00+01:00</updated>
     <id>http://marcgg.com/2011/12/21/startup-outsourcing</id>
     <content type="html">&lt;p&gt;So you&amp;#8217;re a startup and want to outsource graphic design, system administration or development? Don‚Äôt feel bad, this is very common. Often startups can‚Äôt afford to hire many people right away or do not have a team with every skill required to build the perfect product.&lt;/p&gt;

&lt;h2 id='should_i_outsource'&gt;Should I Outsource?&lt;/h2&gt;

&lt;p&gt;Some will tell you that you should not outsource, but this is not what I think. Actually I won‚Äôt have enough of one article to tell you all the cases in which you should outsource (lack of time, not the required skills in-house, not enough people in the team‚Ä¶).&lt;/p&gt;

&lt;p&gt;It doesn‚Äôt really matter why you want to outsource. What matters is that before doing so you ask yourself ¬´Am I outsourcing what defines my company?¬ª This is especially true for startups that focus around one main product: you do not want to lose control over what makes the core of your business.&lt;/p&gt;

&lt;h2 id='build_up_a_team'&gt;Build Up A Team&lt;/h2&gt;

&lt;p&gt;I suppose you don‚Äôt want to be forever dependent on contractors, right? Your goal is to build up a team, because in the end this is what makes a startup. A passionated team can build anything if gathered around the right vision, and outsourcing without thinking can hurt that dynamic.&lt;/p&gt;

&lt;p&gt;While a lot of contractors are very able and talented, the problem is that they are only part of the team very temporarily and will not get involved as much as your teammates. They will lack the long term vision and won‚Äôt think ‚Äúif I do X, what will happen in a year when I need to make it evolve into Y‚Äù. The problem given to them will be solved, but later evolutions might be harder.&lt;/p&gt;

&lt;p&gt;Remember that your team members decided to join the adventure for more than a couple of billable months. They will have opinions, ideas and will thrive to build the best product possible if you give them the means to do so. You want developers thinking by themselves and ready to go back and improve what they wrote months ago. You want designers that are creative and in phase with the company‚Äôs vision.&lt;/p&gt;

&lt;p&gt;This is why you need to build what‚Äôs important internally and outsource only when you can‚Äôt do it in house‚Ä¶ and even when you do, do it keeping in mind that you will have to integrate what has been created and that your team will have to maintain it. If done correctly, outside help can be a good thing for everyone, as mixing ideas and processes is always interesting and a good experience.&lt;/p&gt;

&lt;h2 id='outsourcing_done_right'&gt;Outsourcing Done Right&lt;/h2&gt;

&lt;p&gt;Like I mentioned before, sometimes you need to call someone to help out. In this case you need to be sure you do not hurt your product or your team in the process. The deliverable should be easy to test, easy to maintain and easy to evolve. If those conditions are not fulfilled, you might deal with frustration in your team. If they are, everyone will be happy about a job well done.&lt;/p&gt;

&lt;h3 id='design'&gt;Design&lt;/h3&gt;

&lt;p&gt;If you‚Äôre outsourcing your product‚Äôs design, ask to be provided with a full style guide, general guidelines, grid templates‚Ä¶ anything that can help future designers can build on top of what you already have without having to start from scratch. Use a lot of constructive criticism and keep in mind the big picture: your product shouldn‚Äôt feel patchy, even if you got a lot of people working on it.&lt;/p&gt;

&lt;h3 id='development_of_a_new_feature'&gt;Development of a New Feature&lt;/h3&gt;

&lt;p&gt;If you‚Äôre outsourcing development directly inside your main product ‚Äì like a new feature, you want to make sure the code that is given to you is good and perennial. To achieve that, you should ask from your contractors:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The code should be shipped in a modular fashion, avoiding coupling as much as possible. The new features should not interfere too much with the existing codebase.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;A lot of pertinent automated tests.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Documentation, not only on what the features are doing, but also on how they can be maintained and improved.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Try collaboration with a member of your development team (if you have one), even part time. You want someone able right away to maintain this new feature.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Enforce your internal best practices as much as possible if you have some. If you don‚Äôt, enforce the ones accepted by your technology‚Äôs community.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Always keep in mind that you will have to live with this new code for a while and decide accordingly if outsourcing is the right move or not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='one_shot'&gt;One Shot&lt;/h3&gt;

&lt;p&gt;The other possibility is to outsource something that is not directly linked to your core product. This could be a marketing campaign or something similar. In this case it is easier to get it right, and this is the situation where outsourcing works very well for a startup. You will not need to maintain the new code for long, it will not impact the existing code base‚Ä¶ the only thing that matters is that the final result if up to your company‚Äôs standards.&lt;/p&gt;

&lt;p&gt;A perfect example of that is &lt;a href='http://www.tigerlilyapps.com/'&gt;my company‚Äôs new website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We launched it recently and gave design control to a &lt;a href='http://www.colorz.fr/'&gt;creative agency&lt;/a&gt; during development. We did this because we knew that they would create a better design than us. While we care and love about building things that look good, this is not our core business. Delegating this part of the job also gave us the possibility to focus more on our platform for social media applications which is what we do best.&lt;/p&gt;

&lt;p&gt;During the whole process someone kept checking to see if we were agreeing on the choices made. The final phase of integration was made in house because we have great front-end developers that should be able to make the website evolve later on.&lt;/p&gt;

&lt;h2 id='keep_control'&gt;Keep Control&lt;/h2&gt;

&lt;p&gt;In any case, try to stay on top of what is going on and make sure everything is moving in the right direction. Remember that as a startup, your product is very important. Do not lose control, do not lose ownership. Build up your team.&lt;/p&gt;
&lt;div style='text-align:center'&gt;&lt;img src='/assets/misc/machine.jpg' style='width:450px;' /&gt;&lt;/div&gt;
&lt;p&gt;You don‚Äôt want to end up with a Rube Goldberg machine made of a crazy patchwork created by dozens of freelancers. While it might get the job done for a bit, it won‚Äôt last.&lt;/p&gt;

&lt;p&gt;This being said, there is no perfect solution. Some contractors become really involved and stay for long, some are so good that they will improve the general quality of your product‚Ä¶ and if you found people like this maybe you should offer them a full time job!&lt;/p&gt;
&lt;p class='sidenote'&gt;
  This article was originally published on
  &lt;a href='http://www.rudebaguette.com/2011/12/21/startups-to-outsource-or-not-to-outsource-3/'&gt;The Rude Baguette&lt;/a&gt;.
&lt;/p&gt;</content>
   </entry>
  
 
  
   <entry>
     <title>Developers, Go From SSII To Startup</title>
     <link href="http://marcgg.com/2011/12/12/developer-from-ssii-to-startup"/>
     <updated>2011-12-12T00:00:00+01:00</updated>
     <id>http://marcgg.com/2011/12/12/developer-from-ssii-to-startup</id>
     <content type="html">&lt;p&gt;In France we have what we call SSII for Soci√©t√© de Service en Ing√©nierie Informatique. Poorly translated it goes something like ¬´IT Consulting Firm¬ª. This is where most young CS graduates will go, mainly because once you get your degree you are spammed by job offers from their recruiters.&lt;/p&gt;

&lt;p&gt;This is fine for some, but other might feel like they are missing out what‚Äôs happening in the startup world. The problem is that after a few years in a SSII it can seem complicated to switch career path and start working for a startup. For the most part it‚Äôs because the technologies, processes and general mindset are radically different‚Ä¶ but believe me, it is possible!&lt;/p&gt;

&lt;p&gt;So how can one move away from a company like this and join a cool startup?&lt;/p&gt;

&lt;h2 id='are_you_sure'&gt;Are You Sure?&lt;/h2&gt;

&lt;p&gt;First take a second to figure out what you love to do. Are you really passionate about development? Could you spend hours &lt;a href='http://stackoverflow.com/questions/144661/python-vs-ruby-for-metaprogramming'&gt;debating if new technology X is better than Y&lt;/a&gt;? Do you try out every new app or service that comes out?&lt;/p&gt;

&lt;p&gt;Keep in mind that the process of becoming a good fit for a startup isn‚Äôt easy, but each step should be fun. If it‚Äôs a hassle then maybe you shouldn‚Äôt quit your current job.&lt;/p&gt;

&lt;h2 id='the_mindset'&gt;The Mindset&lt;/h2&gt;
&lt;img src='/assets/misc/movefast.jpg' style='float:right; height:350px;' /&gt;
&lt;p&gt;In a SSII you often get to work on products already sold to a client, usually a large company. All you have to do is dress up, go to the client‚Äôs offices and code following the specifications someone gave you. It doesn‚Äôt matter if you think the product is good or not, it just matters that you meet the deadline.&lt;/p&gt;

&lt;p&gt;When you join a startup, and especially if it‚Äôs an early stage one, this will be radically different. If you‚Äôre not passionated about what you‚Äôre doing it won‚Äôt work. It won‚Äôt only be about shipping a given feature anymore, it will be about caring that the product is good and that it follows the right vision.&lt;/p&gt;

&lt;p&gt;In a startup you won‚Äôt be yet another code monkey driven by a faceless client‚Äôs exigences. Your voice will be heard and just as important as anyone else‚Äôs in the team. Your teammates will expect from you that you have ideas on things, not just follow orders. You‚Äôll actually get the opportunity to be part of the creation of something.&lt;/p&gt;

&lt;p&gt;Keep in mind that for a startup at an early stage, nothing is definitive. You could do a major switch in a week, it doesn‚Äôt matter as long as everything is moving in the right direction. You have to realize that making the right choices is crucial and can mean life or death for the company, therefore everyone in the team should be involved in the decision, give inputs, discuss, exchange ideas‚Ä¶&lt;/p&gt;

&lt;h2 id='learn_create_code_repeat'&gt;Learn, Create, Code, Repeat&lt;/h2&gt;

&lt;p&gt;Large companies, because of their larger inertia, tend to use older technologies and that‚Äôs why a lot of what you know might be of little use. But don‚Äôt worry, while the specifics of the technologies you know might be useless, the general experience you gathered is still valid. You simply need find out the technologies used by your dream startup and learn them.&lt;/p&gt;
&lt;img src='/assets/misc/codecomplete.jpg' style='float:right; height:200px;' /&gt;
&lt;p&gt;Keep in mind that what matters in a startup is the things you can do and your ability to learn &amp;amp; adapt. No one is going to show your resume to a client in order to get a contract, so it doesn‚Äôt matter whether you come from a famous school or not. It‚Äôs just a degree and doesn‚Äôt mean a lot. No need to buy a fancy suit either, it‚Äôs not the best outfit to be in front of a computer most of the day.&lt;/p&gt;

&lt;p&gt;To sum it up, what a good startup wants is a developer that can program. So how to get better at coding you ask me? By coding of course!&lt;/p&gt;

&lt;p&gt;The best way to get started is to find an idea and create it as a side project on nights &amp;amp; weekends. It will give you a goal and a nice bullet point on your resume once it‚Äôs completed. While you develop, get feedbacks on what you‚Äôre doing from experienced developers and/or the &lt;a href='http://stackoverflow.com/'&gt;internet&lt;/a&gt; and &lt;a href='http://stackoverflow.com/questions/1711/what-is-the-single-most-influential-book-every-programmer-should-read'&gt;read up&lt;/a&gt; on &lt;a href='http://www.amazon.com/dp/0132350882/?tag=stackoverfl08-20'&gt;best practices&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a SSII you could be fine sticking to old technologies as there will always be clients wanting to use them: obviously no one is going to change overnight the way banking or insurance is done and the &lt;a href='http://en.wikipedia.org/wiki/COBOL'&gt;languages used&lt;/a&gt; to do it‚Ä¶ but in a startup, everything moves fast. You have to keep on learning and keep on improving yourself.&lt;/p&gt;

&lt;h2 id='get_connected'&gt;Get Connected&lt;/h2&gt;
&lt;img src='/assets/misc/startinparis.png' style='float:right; width:200px;' /&gt;
&lt;p&gt;The startup scene in France is maybe not as large as in the US, but it is active. So stay up to date about what‚Äôs going on around you as well as internationally. There are countless blogs, twitter users and events talking about just that, you simply need to find the ones that you like and start reading.&lt;/p&gt;

&lt;p&gt;Start going to events organized in your city around the subjects that interest you. If you‚Äôre a developer wanting to geek out with other developers, there are meetups for that. You can also interact with other coders on mailing lists, IRC, Twitter‚Ä¶&lt;/p&gt;

&lt;p&gt;If you do it well, you might even have a job interview scheduled before you start sending resumes!&lt;/p&gt;

&lt;h2 id='alright'&gt;Alright&lt;/h2&gt;

&lt;p&gt;That‚Äôs it. Don‚Äôt just stand there, go and create something!&lt;/p&gt;
&lt;p class='sidenote'&gt;
  This article was originally published on
  &lt;a href='http://www.rudebaguette.com/2011/12/12/from-consulting-to-startup-developer/'&gt;The Rude Baguette&lt;/a&gt;.
  Photo by &lt;a href='http://www.flickr.com/photos/mwichary/5455395458/'&gt;Martin Wichary&lt;/a&gt;.
&lt;/p&gt;</content>
   </entry>
  
 

</feed>
